{"compress":true,"commitItems":[["10f09ede-2508-45a5-a271-b37a6e7df09a",1527776765065,"",[[1527776732233,["Administrator@Tielemao",[[1,0,"CSS学习摘要-层叠和继承\n===\n\n\n"]],[0,0],[20,20]]],[1527776742118,["Administrator@Tielemao",[[-1,19,"\n"],[1,20,"[[toc]]"]],[20,20],[26,26]]],[1527776742938,["Administrator@Tielemao",[[1,26,"\n\n"]],[26,26],[27,27]]],[1527776743423,["Administrator@Tielemao",[[1,28,"\n"]],[27,27],[28,28]]],[1527776763023,["Administrator@Tielemao",[[1,28,"当有多个选择器作用在一个元素上时，哪个规则最终会应用到元素上？其实这是通过层叠机制来控制的，这也和样式继承(元素从其父元素那里获得属性值)有关"]],[28,28],[99,99]]],[1527776771064,["Administrator@Tielemao",[[1,99,"."]],[99,99],[100,100]]],[1527776772110,["Administrator@Tielemao",[[-1,99,"."]],[100,100],[99,99]]],[1527776790545,["Administrator@Tielemao",[[1,99,"。元素的最终样式可以在多个地方定义，它们以复杂的形式相互影响。这些复杂的相互作用使CSS变得非常强大，但也使其非常难于调试和理解。"]],[99,99],[164,164]]],[1527776794334,["Administrator@Tielemao",[[1,100,"\n"]],[100,100],[101,101]]],[1527776798330,["Administrator@Tielemao",[[1,101,"\n"]],[101,101],[102,102]]],[1527776828948,["Administrator@Tielemao",[[1,167,"\n"]],[166,166],[167,167]]],[1527776829145,["Administrator@Tielemao",[[1,168,"\n"]],[167,167],[168,168]]],[1527776829817,["Administrator@Tielemao",[[1,168,"## 层叠[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance$edit#%E5%B1%82%E5%8F%A0)\n\nCSS 是 _Cascading Style Sheets _的缩写，这暗示层叠（cascade）的概念是很重要的。在最基本的层面上，它表明CSS规则的顺序很重要，但它比那更复杂。什么选择器在层叠中胜出取决于三个因素（这些都是按重量级顺序排列的——前面的的一种会否决后一种）：\n\n1.  重要性（Importance）\n2.  专用性（Specificity）\n3.  源代码次序（Source order）\n\n### 重要性\n\n在CSS中，有一个特别的语法可以让一条规则**_总_是**优先于其他规则：`!important`。把它加在属性值的后面可以使这条声明有无比强大的力量。  \n\n让我们看一下这个例子:\n\n```html\n<p class=\"better\">This is a paragraph.</p>\n<p class=\"better\" id=\"winning\">One selector to rule them all!</p>\n```\n\n```css\n#winning {\n  background-color: red;\n  border: 1px solid black;\n}\n\n.better {\n  background-color: gray;\n  border: none !important;\n}\n\np {\n  background-color: blue;\n  color: white;\n  padding: 5px;\n}\n```\n\n这将生成以下："]],[168,168],[946,946]]],[1527776833053,["Administrator@Tielemao",[[-1,173,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance$edit#%E5%B1%82%E5%8F%A0)"],[-1,306," "],[1,307," "],[-1,330," "],[1,331," "],[-1,592,"  "],[1,594,"  "]],[173,299],[173,173]]],[1527776852653,["Administrator@Tielemao",[[-1,0,"CSS学习摘要-层叠和继承\n==="]],[0,17],[0,0]]],[1527776856483,["Administrator@Tielemao",[[-1,0,"\n"]],[2,2],[1,1]]],[1527776856877,["Administrator@Tielemao",[[-1,0,"\n"]],[1,1],[0,0]]],[1527776870515,["Administrator@Tielemao",[[-1,162,"_"]],[163,163],[162,162]]],[1527776872254,["Administrator@Tielemao",[[-1,185,"_"]],[186,186],[185,185]]],[1527776880321,["Administrator@Tielemao",[[1,162,"**"]],[162,162],[164,164]]],[1527776884530,["Administrator@Tielemao",[[1,186,"&"]],[186,186],[187,187]]],[1527776885250,["Administrator@Tielemao",[[-1,186,"&"]],[187,187],[186,186]]],[1527776888336,["Administrator@Tielemao",[[1,186,"**"]],[186,186],[188,188]]],[1527776920929,["Administrator@Tielemao",[[-1,396,"_"]],[397,397],[396,396]]],[1527776922005,["Administrator@Tielemao",[[-1,397,"_"]],[398,398],[397,397]]],[1527776963207,["Administrator@Tielemao",[[1,421,"（常见于iconfont图标后面）"]],[421,421],[438,438]]],[1527776970771,["Administrator@Tielemao",[[1,425,"应用于"]],[425,425],[428,428]]],[1527776975201,["Administrator@Tielemao",[[1,438,"属性"]],[438,438],[440,440]]],[1527776987725,["Administrator@Tielemao",[[1,824,"\n"]],[823,823],[824,824]]],[1527776988034,["Administrator@Tielemao",[[1,825,"\n"]],[824,824],[825,825]]],[1527777110971,["Administrator@Tielemao",[[1,826,"![css-c01]($res/css-c01.jpg)\n\n"]],[825,825],[855,855]]],[1527777113643,["Administrator@Tielemao",[[1,856,"\n"]],[855,855],[856,856]]],[1527777114563,["Administrator@Tielemao",[[-1,825,"\n"]],[824,824],[823,823]]],[1527777162946,["Administrator@Tielemao",[[1,855,"让我们一起来看看发生了什么。\n\n1.  你可以看到第三条规则 [`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") 和 [`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\") 被运用了, 但 [`background-color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\")没有，为什么？实际上，这三种情况都应该应用，因为在源顺序后面的规则通常会覆盖较早的规则。\n2.  然而, 在前面的规则被运用了,因为 IDs/class 选择器优先于element选择器。 (对此，你将在下一章中学到更多)\n3.  这两个元素都有 `[class](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-class)`并带有 `better`属性, 但是第二个元素有 `[id](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-id)` 值为`winning` 。 因为比起class而言id专用性更高(在一个页面上id是唯一的, 但很多元素可以拥有相同的class — ID 选择器在它们的目标中是非常优先的)，红色背景色和1pixel的黑色边框都应应用于第二元素，第一个元素获得灰色背景色，没有边框，如类所指定。\n4.  第二个元素获得红色背景色，但没有边框。为什么？因为 `!important` 在第二条规则中的声明——在 `border: none`之后写入它意味着尽管id具有更高的优先性，该声明也将优先于前面规则中的边界值声明。\n\n**注意**: 重载这个 `!important` 声明的唯一方法是在后面的源码或者是一个拥有更高特殊性的源码中包含相同的 `!important` 特性的声明。\n\n知道 `!important`存在是很有用的，这样当你在别人的代码中遇到它时，你就知道它是什么了。**但是！**我们建议你千万不要使用它，除非你绝对必须使用它。您可能不得不使用它的一种情况是，当您在CMS中工作时，您不能编辑核心的CSS模块，并且您确实想要重写一种不能以其他方式覆盖的样式。 但是，如果你能避免的话，不要使用它。由于 `!important` 改变了层叠正常工作的方式，因此调试CSS问题，尤其是在大型样式表中，会变得非常困难。\n\n要注意一个CSS声明的重要性取决于它被指定在什么样式表内——用户可以设置自定义样式表覆盖开发商的样式，例如用户可能有视力障碍，想设置字体大小对所有网页的访问是双倍的正常大小，以便更容易阅读。\n\n相互冲突的声明将按以下顺序适用，后一种将覆盖先前的声明：\n\n1.  在用户代理样式表的声明 (例如：浏览器在没有其他声明的默认样式).\n2.  用户样式表中的普通声明（由用户设置的自定义样式）。\n3.  作者样式表中的普通声明（这是我们设置的样式，Web开发人员）。\n4.  作者样式表中的重要声明\n5.  用户样式表中的重要声明\n\nWeb开发者的样式表覆盖用户的样式表是合理的，所以设计可以保持预期，但是有时候用户有很好的理由来重写web开发人员样式，如上所述，这可以通过在用户的规则中使用`!important`。"]],[855,855],[2776,2776]]],[1527777174374,["Administrator@Tielemao",[[-1,885," "],[1,886," "],[-1,895,"(https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") 和 "],[1,1242," 和 "],[-1,1371," "],[1,1372," "],[-1,1379," "],[1,1380," "],[-1,1475," "],[1,1476," "],[-1,1492," "],[1,1493," "],[-1,1660," "],[1,1661," "],[-1,1753," "],[1,1754," "],[-1,1774," "],[1,1775," "],[-1,1858," "],[1,1859," "],[-1,1870," "],[1,1871," "],[-1,2028," "],[1,2029," "],[-1,2041," "],[1,2042," "],[-1,2055," "],[1,2056," "],[-1,2125," "],[1,2126," "],[-1,2138," "],[1,2139," "],[-1,2174," "],[1,2175," "],[-1,2187," "],[1,2188," "],[-1,2198," "],[1,2199," "],[-1,2341," "],[1,2342," "],[-1,2362," "],[1,2363," "],[-1,2375," "],[1,2376," "]],[895,1239],[895,895]]],[1527777175038,["Administrator@Tielemao",[[-1,894,"]"]],[895,895],[894,894]]],[1527777179631,["Administrator@Tielemao",[[-1,886,"["]],[887,887],[886,886]]],[1527777181014,["Administrator@Tielemao",[[-1,896,"["]],[897,897],[896,896]]],[1527777183648,["Administrator@Tielemao",[[-1,905,"]"]],[906,906],[905,905]]],[1527777201764,["Administrator@Tielemao",[[-1,905,"(https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。"]],[905,964],[905,905]]],[1527777208072,["Administrator@Tielemao",[[1,1649,"\n"]],[1648,1648],[1649,1649]]],[1527777208530,["Administrator@Tielemao",[[1,1650,"\n"]],[1649,1649],[1650,1650]]],[1527777210457,["Administrator@Tielemao",[[1,1649,"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。"]],[1649,1649],[1706,1706]]],[1527777214846,["Administrator@Tielemao",[[1,1649,"`"]],[1649,1649],[1650,1650]]],[1527777216205,["Administrator@Tielemao",[[1,1657,"`"]],[1657,1657],[1658,1658]]],[1527777238650,["Administrator@Tielemao",[[-1,1649,"`padding`属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。"]],[1649,1708],[1649,1649]]],[1527777239353,["Administrator@Tielemao",[[-1,1650,"\n"]],[1649,1649],[1648,1648]]],[1527777247268,["Administrator@Tielemao",[[-1,935,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\")"]],[935,1073],[935,935]]],[1527777248801,["Administrator@Tielemao",[[-1,916,"["]],[917,917],[916,916]]],[1527777252110,["Administrator@Tielemao",[[-1,905,"\") "]],[908,908],[905,905]]],[1527777260877,["Administrator@Tielemao",[[1,976,"\n"]],[975,975],[976,976]]],[1527777267275,["Administrator@Tielemao",[[-1,1027,"(对此，你将在下一章中学到更多)"]],[1027,1043],[1027,1027]]],[1527777270646,["Administrator@Tielemao",[[1,1028,"\n"]],[1027,1027],[1028,1028]]],[1527777321572,["Administrator@Tielemao",[[-1,1048,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-class)"]],[1048,1129],[1048,1048]]],[1527777323095,["Administrator@Tielemao",[[-1,1042,"["]],[1043,1043],[1042,1042]]],[1527777328336,["Administrator@Tielemao",[[-1,1077,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-id)"]],[1077,1155],[1077,1077]]],[1527777329692,["Administrator@Tielemao",[[-1,1074,"["]],[1075,1075],[1074,1074]]],[1527777366816,["Administrator@Tielemao",[[1,1218,"\n"]],[1217,1217],[1218,1218]]],[1527777379749,["Administrator@Tielemao",[[1,1206,"wj"]],[1206,1206],[1208,1208]]],[1527777380341,["Administrator@Tielemao",[[-1,1206,"wj"]],[1208,1208],[1206,1206]]],[1527777385320,["Administrator@Tielemao",[[1,1206,"但结果却是"]],[1206,1206],[1211,1211]]],[1527777418103,["Administrator@Tielemao",[[-1,1206,"但结果却是"]],[1211,1211],[1206,1206]]],[1527777439037,["Administrator@Tielemao",[[-1,1333,"\n"]],[1333,1333],[1332,1332]]],[1527777490050,["Administrator@Tielemao",[[1,1737,"**"]],[1737,1737],[1739,1739]]],[1527777497014,["Administrator@Tielemao",[[1,1766,"**"]],[1766,1766],[1768,1768]]],[1527777530392,["Administrator@Tielemao",[[1,2001,"\n"]],[2000,2000],[2001,2001]]],[1527777530694,["Administrator@Tielemao",[[1,2002,"\n"]],[2001,2001],[2002,2002]]],[1527777548844,["Administrator@Tielemao",[[1,2002,"### 专用性\n\n**专用性**基本上是衡量选择器的具体程度的一种方法——它能匹配多少元素。如上面所示的示例所示，元素选择器具有很低的专用性。类选择器具有更高的专用性，所以将战胜元素选择器。ID选择器有甚至更高的专用性, 所以将战胜类选择器. 战胜ID选择器的唯一方法是使用 `!important`。\n\n一个选择器具有的专用性的量是用四种不同的值（或组件）来衡量的，它们可以被认为是千位，百位，十位和个位——在四个列中的四个简单数字：\n\n1.  千位：如果声明是在`[style](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-style)` 属性中该列加1分（这样的声明没有选择器，所以它们的专用性总是1000。）否则为0。\n2.  百位：在整个选择器中每包含一个ID选择器就在该列中加1分。\n3.  十位：在整个选择器中每包含一个类选择器、属性选择器、或者伪类就在该列中加1分。\n4.  个位：在整个选择器中每包含一个元素选择器或伪元素就在该列中加1分。\n\n**注意**: 通用选择器 (`*`), 复合选择器 (`+`, `>`, `~`, ' ') 和否定伪类 (`:not`) 在专用性中无影响。\n\n下表显示了几个示例。试着通过这些，并确保你理解他们为什么具有我们给予他们的专用性。"]],[2002,2002],[2599,2599]]],[1527777579947,["Administrator@Tielemao",[[-1,2139," "],[1,2140," "],[-1,2242,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-style)` "],[1,2325,"` "],[-1,2510," "],[1,2511," "],[-1,2516," "],[1,2517," "],[-1,2521," "],[1,2522," "]],[2242,2323],[2242,2242]]],[1527777581716,["Administrator@Tielemao",[[-1,2236,"["]],[2237,2237],[2236,2236]]],[1527777639879,["Administrator@Tielemao",[[1,2518,"\n"]],[2517,2517],[2518,2518]]],[1527777640319,["Administrator@Tielemao",[[1,2519,"\n"]],[2518,2518],[2519,2519]]],[1527777740149,["Administrator@Tielemao",[[1,2519,"| 选择器 | 千位 | 百位 | 十位 | 个位 | 合计值 |\n| --- | --- | --- | --- | --- | --- |\n| `h1` | 0 | 0 | 0 | 1 | 0001 |\n| `#important` | 0 | 1 | 0 | 0 | 0100 |\n| `h1 + p::first-letter` | 0 | 0 | 0 | 3 | 0003 |\n| `li > a[href*=\"zh-CN\"] > .inline-warning` | 0 | 0 | 2 | 2 | 0022 |\n| `#important div > div > a:hover`, 在一个元素的 [`<style>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style \"HTML的<style>元素包含了文档的样式化信息或者文档的一部分，该标签的样式信息通常是CSS的格式。\") 属性里 | 1 | 1 | 1 | 3 | 1113 |"]],[2519,2519],[2985,2985]]],[1527777756993,["Administrator@Tielemao",[[-1,2824," "],[1,2825," "],[-1,2835,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style \"HTML的<style>元素包含了文档的样式化信息或者文档的一部分，该标签的样式信息通常是CSS的格式。\") "]],[2836,2957],[2835,2835]]],[1527777758990,["Administrator@Tielemao",[[-1,2825,"["]],[2826,2826],[2825,2825]]],[1527777766493,["Administrator@Tielemao",[[1,2863,"\n"]],[2862,2862],[2863,2863]]],[1527777767058,["Administrator@Tielemao",[[1,2864,"\n"]],[2863,2863],[2864,2864]]],[1527777815828,["Administrator@Tielemao",[[1,2864,"在我们继续之前，让我们看看一个行动中的例子。这是我们将要使用的HTML：\n\n```html\n<div id=\"outer\" class=\"container\">\n  <div id=\"inner\" class=\"container\">\n    <ul>\n      <li class=\"nav\"><a href=\"#\">One</a></li>\n      <li class=\"nav\"><a href=\"#\">Two</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n下面是CSS的示例：\n\n```css\n/* specificity: 0101 */\n#outer a {\n  background-color: red;\n}\n\n/* specificity: 0201 */\n#outer #inner a {\n  background-color: blue;\n}\n\n/* specificity: 0104 */\n#outer div ul li a {\n  color: yellow;\n}\n\n/* specificity: 0113 */\n#outer div ul .nav a {\n  color: white;\n}\n\n/* specificity: 0024 */\ndiv div li:nth-child(2) a:hover {\n  border: 10px solid black;\n}\n\n/* specificity: 0023 */\ndiv li:nth-child(2) a:hover {\n  border: 10px dashed black;\n}\n\n/* specificity: 0033 */\ndiv div .nav:nth-child(2) a:hover {\n  border: 10px double black;\n}\n\na {\n  display: inline-block;\n  line-height: 40px;\n  font-size: 20px;\n  text-decoration: none;\n  text-align: center;\n  width: 200px;\n  margin-bottom: 10px;\n}\n\nul {\n  padding: 0;\n}\n\nli {\n  list-style-type: none;\n}\n```\n\n我们从这个代码中得到的结果如下："]],[2864,2864],[3900,3900]]],[1527777821581,["Administrator@Tielemao",[[1,2886,"\n"]],[2886,2886],[2887,2887]]],[1527777849103,["Administrator@Tielemao",[[1,3902,"\n"]],[3901,3901],[3902,3902]]],[1527777849357,["Administrator@Tielemao",[[1,3903,"\n"]],[3902,3902],[3903,3903]]],[1527777944592,["Administrator@Tielemao",[[1,3904,"![css-c02]($res/css-c02.gif)\n\n"]],[3903,3903],[3933,3933]]],[1527777947795,["Administrator@Tielemao",[[1,3934,"\n"]],[3933,3933],[3934,3934]]],[1527778009470,["Administrator@Tielemao",[[1,3934,"这里发生了什么?首先，我们只对本例的前七个规则感兴趣，正如您将注意到的，我们已经在每个注释中包含了它们的专用性值。\n\n*   前两个选择器正在竞争链接的背景颜色的样式——第二个赢得并使背景色为蓝色，因为它有一个额外的ID选择器在链中：其专用性值为201比101。\n*   第三个和第四个选择器在链接文本颜色的样式上进行竞争——第二个选择器获胜，使文本变白，因为缺少一个元素选择器，缺少的选择器被换成类选择器，它的值是十，而不是个位。所以专用性值为113和104。\n*   选择器5 - 7在徘徊在链接附近时的样式进行竞争。选择器六明显地输给了了五，其专用性值为23和24——它在链中少了一个元素选择器。然而选择器七同时击败了五和六——它有与五相同数量的子选择器在链中，但一个元素已被换为了一个类选择器。所以获胜的专用性值是33比23和24。"]],[3934,3934],[4304,4304]]],[1527778091893,["Administrator@Tielemao",[[1,4305,"\n"]],[4304,4304],[4305,4305]]],[1527778092136,["Administrator@Tielemao",[[1,4306,"\n"]],[4305,4305],[4306,4306]]],[1527778094299,["Administrator@Tielemao",[[1,4306,"### 源代码次序\n\n如上所述，如果多个相互竞争的选择器具有相同的重要性和专用性，那么第三个因素将帮助决定哪一个规则获胜——后面的规则将战胜先前的规则。例如:\n\n```css\np {\n  color: blue;\n}\n\n/* This rule will win over the first one */\np {\n  color: red;\n}\n```\n\n而在这个例子中的第一个规则将获胜，因为专用性高于源代码顺序：\n\n```css\n/* This rule will win */\n.footnote {\n  color: blue;\n}\n\np {\n  color: red;\n}\n```"]],[4306,4306],[4602,4602]]],[1527778103708,["Administrator@Tielemao",[[1,4603,"\n"]],[4602,4602],[4603,4603]]],[1527778131268,["Administrator@Tielemao",[[1,4603,"### 关于规则混合的一点注记\n\n在考虑所有这些层叠理论和什么样式优先于其他样式被应用时，你应该记住的一件事是，所有这些都发生在属性级别上——属性覆盖其他属性，但你不会让整个规则凌驾于其他规则之上。\n当多个CSS规则匹配相同的元素时，它们都被应用到该元素中。只有在这之后，任何相互冲突的属性才会被评估，以确定哪种风格会战胜其他类型。\n\n让我们看一个例子。首先，一些HTML：\n\n```html\n<p>I'm <strong>important</strong></p>\n```\n\n现在一些CSS风格与它：\n\n```css\n/* specificity: 0002 */\np strong {\n  background-color: khaki;\n  color: green;\n}\n\n/* specificity: 0001 */\nstrong {\n  text-decoration: underline;\n  color: red;\n}\n```\n\nResult:"]],[4603,4603],[5036,5036]]],[1527778295732,["Administrator@Tielemao",[[1,4771,"\n"]],[4769,4769],[4770,4770]]],[1527778296269,["Administrator@Tielemao",[[1,4772,"\n"]],[4770,4770],[4771,4771]]],[1527778310239,["Administrator@Tielemao",[[1,4771,"只有相同的属性发生冲突后才会产生覆盖"]],[4771,4771],[4789,4789]]],[1527778316325,["Administrator@Tielemao",[[1,4771,"简记："]],[4771,4771],[4774,4774]]],[1527778321254,["Administrator@Tielemao",[[1,4771,"**"]],[4771,4771],[4773,4773]]],[1527778324345,["Administrator@Tielemao",[[1,4794,"*"]],[4794,4794],[4795,4795]]],[1527778325292,["Administrator@Tielemao",[[1,4795,"*"]],[4795,4795],[4796,4796]]],[1527778332437,["Administrator@Tielemao",[[1,4783,"应用"]],[4783,4783],[4785,4785]]],[1527778337642,["Administrator@Tielemao",[[-1,5057,"\n"]],[5057,5057],[5056,5056]]],[1527778339182,["Administrator@Tielemao",[[1,5065,"\n"]],[5064,5064],[5065,5065]]],[1527778339489,["Administrator@Tielemao",[[1,5066,"\n"]],[5065,5065],[5066,5066]]],[1527778368308,["Administrator@Tielemao",[[1,5067,"![css-c03]($res/css-c03.jpg)\n\n"]],[5066,5066],[5096,5096]]],[1527778372196,["Administrator@Tielemao",[[-1,5066,"\n"]],[5065,5065],[5064,5064]]],[1527778373288,["Administrator@Tielemao",[[1,5096,"\n"]],[5094,5094],[5095,5095]]],[1527778373586,["Administrator@Tielemao",[[1,5097,"\n"]],[5095,5095],[5096,5096]]],[1527778383328,["Administrator@Tielemao",[[1,5096,"在这个例子中，因为专用性的关系，第一条规则中的`[color](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color_value)`属性覆盖掉了第二条中的颜色值。但是，对于第一条中的 `[background-color](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color)`和第二条中的`[text-decoration](https://developer.mozilla.org/zh-CN/docs/Web/CSS/text-decoration)` 的属性都在`[strong](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/strong)`元素之中得到了体现。你也注意到了这个元素之中的字体是加粗的：这是浏览器默认的样式规则。"]],[5096,5096],[5519,5519]]],[1527778388288,["Administrator@Tielemao",[[-1,5127,"(https://developer.mozilla.org/zh-CN/docs/Web/CSS/color_value)"],[-1,5215," "],[1,5216," "],[-1,5394," "],[1,5395," "]],[5127,5189],[5127,5127]]],[1527778388907,["Administrator@Tielemao",[[-1,5126,"]"]],[5127,5127],[5126,5126]]],[1527778390063,["Administrator@Tielemao",[[-1,5120,"["]],[5121,5121],[5120,5120]]],[1527778395425,["Administrator@Tielemao",[[-1,5170,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color)"]],[5170,5238],[5170,5170]]],[1527778396598,["Administrator@Tielemao",[[-1,5152,"`"]],[5153,5153],[5152,5152]]],[1527778398828,["Administrator@Tielemao",[[1,5152,"`"]],[5152,5152],[5153,5153]]],[1527778400572,["Administrator@Tielemao",[[-1,5153,"["]],[5154,5154],[5153,5153]]],[1527778407282,["Administrator@Tielemao",[[-1,5193,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/text-decoration)"]],[5193,5260],[5193,5193]]],[1527778409000,["Administrator@Tielemao",[[-1,5177,"["]],[5178,5178],[5177,5177]]],[1527778413795,["Administrator@Tielemao",[[-1,5207,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/strong)"]],[5207,5274],[5207,5207]]],[1527778416504,["Administrator@Tielemao",[[-1,5200,"["]],[5201,5201],[5200,5200]]],[1527778418798,["Administrator@Tielemao",[[1,5252,"\n"]],[5250,5250],[5251,5251]]],[1527778419143,["Administrator@Tielemao",[[1,5253,"\n"]],[5251,5251],[5252,5252]]],[1527778437847,["Administrator@Tielemao",[[1,5252,"## 继承[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance$edit#%E7%BB%A7%E6%89%BF)\n\nCSS继承是我们需要研究的最后一部分，以获取所有信息并了解什么样式应用于元素。其思想是，应用于某个元素的一些属性值将由该元素的子元素继承，而有些则不会。\n\n*   例如，对 [`font-family`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family \"CSS属性font-family允许您通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体。 属性的值用逗号隔开。浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过 @font-face 指定的可以直接下载的字体。\") 和 [`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") 进行继承是有意义的，因为这使得您可以很容易地设置一个站点范围的基本字体，方法是应用一个字体到 [`<html>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/html \"HTML <html> 元素 表示一个HTML文档的根（顶级元素），所所以它也被称为根元素。其他所有其他元素必须是此元素的后代。\") 元素；然后，您可以在需要的地方覆盖单个元素的字体。如果要在每个元素上分别设置基本字体，那就太麻烦了。\n*   再如，让 [`margin`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin \"margin属性为给定元素设置所有四个（上下左右）方向的外边距属性。这是四个外边距属性设置的简写。四个外边距属性设置分别是： margin-top， margin-right， margin-bottom 和 margin-left 。指定的外边距允许为负数。\")，[`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\")，[`border`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/border \"CSS的border属性是一个用于设置各种单独的边界属性的简写属性。border可以用于设置一个或多个以下属性的值： border-width, border-style, border-color。\") 和 [`background-image`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-image \"CSS background-image 属性用于为一个元素设置一个或者多个背景图像。图像在绘制时，以z方向堆叠的方式进行。先指定的图像会在之后指定的图像上面绘制。因此指定的第一个图像最接近用户。\") 不被继承是有意义的。想象一下，如果您将这些属性设置在一个容器元素上，并将它们继承到每个子元素，然后不得不将它们全部放在每个单独的元素上，那么将会出现的样式/布局混乱。\n\n哪些属性默认被继承哪些不被继承大部分符合常识。如果你想确定，你可以参考[CSS参考资料](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference)—— 每个单独的属性页都会从一个汇总表开始，其中包含有关该元素的各种详细信息，包括是否被继承。\n\n### 控制继承\n\nCSS为处理继承提供了四种特殊的通用属性值：\n\n*   [`inherit`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/inherit \"computed value \")： 该值将应用到选定元素的属性值设置为与其父元素一样。\n*   [`initial`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial \" initial 是将属性的初始值( initial value)赋给元素 . initial 适用于所有的css 属性(属性的initial值可在属性表中查到)，包括css 简写属性(全局属性)all.\") ：该值将应用到选定元素的属性值设置为与浏览器默认样式表中该元素设置的值一样。如果浏览器默认样式表中没有设置值，并且该属性是自然继承的，那么该属性值就被设置为 `inherit`。\n*   [`unset`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/unset \"The unset CSS keyword is the combination of the initial and inherit keywords. Like these two other CSS-wide keywords, it can be applied to any CSS property, including the CSS shorthand all. This keyword resets the property to its inherited value if it inherits from its parent or to its initial value if not. In other words, it behaves like the inherit keyword in the first case and like the initial keyword in the second case.\") ：该值将属性重置为其自然值，即如果属性是自然继承的，那么它就表现得像 `inherit`，否则就是表现得像 `initial`。\n*   [`revert`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/revert \"此页面仍未被本地化, 期待您的翻译!\") ：如果当前的节点没有应用任何样式，则将该属性恢复到它所拥有的值。换句话说，属性值被设置成自定义样式所定义的属性（如果被设置）， 否则属性值被设置成用户代理的默认样式。\n\n**注意**: `initial` 和 `unset` 不被IE支持。\n\n`inherit` 值是最有趣的——它允许我们显式地让一个元素从其父类继承一个属性值。\n\n让我们看一个例子。首先有以下一段HTML："]],[5252,5252],[8481,8481]]],[1527778444173,["Administrator@Tielemao",[[-1,5257,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance$edit#%E7%BB%A7%E6%89%BF)"],[-1,5471," "],[1,5472," "],[-1,5676," 和 "],[1,5679," 和 "],[-1,6032," "],[1,6033," "],[-1,6079," "],[1,6080," "],[-1,6159," "],[1,6160," "],[-1,6221," "],[1,6222," "],[-1,6281," "],[1,6282," "],[-1,6412," "],[1,6413," "],[-1,6783," 和 "],[1,6786," 和 "],[-1,6877," "],[1,6878," "],[-1,6894," "],[1,6895," "],[-1,6974," "],[1,6975," "],[-1,7440," "],[1,7441," "],[-1,7448," "],[1,7449," "],[-1,7458," "],[1,7459," "],[-1,7477," "],[1,7478," "],[-1,7544," "],[1,7545," "],[-1,7623," "],[1,7624," "],[-1,7934," "],[1,7935," "],[-1,8134," "],[1,8135," "],[-1,8169," "],[1,8170," "],[-1,8188," "],[1,8189," "],[-1,8292," "],[1,8293," "],[-1,8385," "],[1,8386," "],[-1,8395," 和 "],[1,8398," 和 "],[-1,8405," "],[1,8406," "],[-1,8424," "],[1,8425," "]],[5257,5383],[5257,5257]]],[1527778457179,["Administrator@Tielemao",[[1,5298,"\n"]],[5298,5298],[5299,5299]]],[1527778457505,["Administrator@Tielemao",[[1,5299,"\n"]],[5299,5299],[5300,5300]]],[1527778476023,["Administrator@Tielemao",[[-1,5431,"font-family允许您通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体。 属性的值用逗号隔开。浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过 @font-face 指定的可以直接下载的字体。"]],[5431,5550],[5431,5431]]],[1527778479674,["Administrator@Tielemao",[[1,6970,"\n"]],[6969,6969],[6970,6970]]],[1527778479865,["Administrator@Tielemao",[[1,6971,"\n"]],[6970,6970],[6971,6971]]],[1527778481578,["Administrator@Tielemao",[[1,6972,"\n"]],[6969,6969],[6970,6970]]],[1527778483113,["Administrator@Tielemao",[[1,6970,"font-family允许您通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体。 属性的值用逗号隔开。浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过 @font-face 指定的可以直接下载的字体。"]],[6970,6970],[7089,7089]]],[1527778489988,["Administrator@Tielemao",[[-1,5362,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family \"CSS属性\") "]],[5362,5434],[5362,5362]]],[1527778492054,["Administrator@Tielemao",[[-1,5348,"["]],[5349,5349],[5348,5348]]],[1527778497523,["Administrator@Tielemao",[[-1,5363,"["]],[5364,5364],[5363,5363]]],[1527778506298,["Administrator@Tielemao",[[-1,5370,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") "]],[5370,5716],[5370,5370]]],[1527778513804,["Administrator@Tielemao",[[-1,5417,"["]],[5418,5418],[5417,5417]]],[1527778519426,["Administrator@Tielemao",[[-1,5425,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/html \"HTML <html> 元素 表示一个HTML文档的根（顶级元素），所所以它也被称为根元素。其他所有其他元素必须是此元素的后代。\")"]],[5425,5557],[5425,5425]]],[1527778526522,["Administrator@Tielemao",[[1,5477,"\n"]],[5476,5476],[5477,5477]]],[1527778534634,["Administrator@Tielemao",[[-1,5496,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin \"margin属性为给定元素设置所有四个（上下左右）方向的外边距属性。这是四个外边距属性设置的简写。四个外边距属性设置分别是： margin-top， margin-right， margin-bottom 和 margin-left 。指定的外边距允许为负数。\")，["]],[5496,5689],[5496,5496]]],[1527778537592,["Administrator@Tielemao",[[-1,5487,"["]],[5488,5488],[5487,5487]]],[1527778597636,["Administrator@Tielemao",[[1,5495," "]],[5495,5495],[5496,5496]]],[1527778612788,["Administrator@Tielemao",[[-1,5505,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。"]],[5505,5565],[5505,5505]]],[1527778615288,["Administrator@Tielemao",[[-1,5506,")"]],[5507,5507],[5506,5506]]],[1527778619425,["Administrator@Tielemao",[[1,6229,"\n"]],[6226,6226],[6227,6227]]],[1527778619761,["Administrator@Tielemao",[[1,6230,"\n"]],[6227,6227],[6228,6228]]],[1527778621411,["Administrator@Tielemao",[[1,6228,"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。"]],[6228,6228],[6285,6285]]],[1527778628528,["Administrator@Tielemao",[[-1,5505,"\""]],[5505,5506],[5505,5505]]],[1527778630440,["Administrator@Tielemao",[[-1,5506,"["]],[5507,5507],[5506,5506]]],[1527778646872,["Administrator@Tielemao",[[-1,5514,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/border \"CSS的border属性是一个用于设置各种单独的边界属性的简写属性。border可以用于设置一个或多个以下属性的值： border-width, border-style, border-color。\") "]],[5515,5515],[5514,5514]]],[1527778649731,["Administrator@Tielemao",[[-1,5516,"["]],[5517,5517],[5516,5516]]],[1527778657568,["Administrator@Tielemao",[[-1,5534,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-image"]],[5534,5601],[5534,5534]]],[1527778659505,["Administrator@Tielemao",[[-1,5535,"\""]],[5536,5536],[5535,5535]]],[1527778660764,["Administrator@Tielemao",[[-1,5535,"CSS"]],[5538,5538],[5535,5535]]],[1527778666463,["Administrator@Tielemao",[[-1,5536,"background-image 属性用于为一个元素设置一个或者多个背景图像。图像在绘制时，以z方向堆叠的方式进行。先指定的图像会在之后指定的图像上面绘制。因此指定的第一个图像最接近用户。"]],[5536,5630],[5536,5536]]],[1527778669311,["Administrator@Tielemao",[[1,5958,"\n"]],[5956,5956],[5957,5957]]],[1527778670143,["Administrator@Tielemao",[[1,5957,"background-image 属性用于为一个元素设置一个或者多个背景图像。图像在绘制时，以z方向堆叠的方式进行。先指定的图像会在之后指定的图像上面绘制。因此指定的第一个图像最接近用户。"]],[5957,5957],[6051,6051]]],[1527778676255,["Administrator@Tielemao",[[-1,5536,"\") "]],[5536,5539],[5536,5536]]],[1527778774226,["Administrator@Tielemao",[[1,5774,"`"]],[5774,5774],[5775,5775]]],[1527778776007,["Administrator@Tielemao",[[1,5786,"`"]],[5786,5786],[5787,5787]]],[1527778777448,["Administrator@Tielemao",[[1,5774,"\n"]],[5773,5773],[5774,5774]]],[1527778778066,["Administrator@Tielemao",[[1,5774,"bwf"]],[5774,5774],[5777,5777]]],[1527778778956,["Administrator@Tielemao",[[-1,5774,"bwf"]],[5777,5777],[5774,5774]]],[1527778781140,["Administrator@Tielemao",[[1,5774,"注："]],[5774,5774],[5776,5776]]],[1527778786748,["Administrator@Tielemao",[[1,5874,"‘"]],[5874,5874],[5875,5875]]],[1527778789937,["Administrator@Tielemao",[[1,5885,"’"]],[5885,5885],[5886,5886]]],[1527778790909,["Administrator@Tielemao",[[-1,5885,"’"]],[5886,5886],[5885,5885]]],[1527778792481,["Administrator@Tielemao",[[1,5885,"`"]],[5885,5885],[5886,5886]]],[1527778793895,["Administrator@Tielemao",[[-1,5885,"`"]],[5886,5886],[5885,5885]]],[1527778795097,["Administrator@Tielemao",[[1,5885,"`"]],[5885,5885],[5886,5886]]],[1527778799794,["Administrator@Tielemao",[[1,5875," `"]],[5875,5875],[5877,5877]]],[1527778802412,["Administrator@Tielemao",[[1,5904,"`"]],[5904,5904],[5905,5905]]],[1527778804874,["Administrator@Tielemao",[[1,5912,"`"]],[5912,5912],[5913,5913]]],[1527778807717,["Administrator@Tielemao",[[1,5965,"`"]],[5965,5965],[5966,5966]]],[1527778809671,["Administrator@Tielemao",[[1,5982,"`"]],[5982,5982],[5983,5983]]],[1527778843230,["Administrator@Tielemao",[[-1,6111,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/inherit \"computed value \")"]],[6111,6188],[6111,6111]]],[1527778844826,["Administrator@Tielemao",[[-1,6101,"["]],[6102,6102],[6101,6101]]],[1527778853572,["Administrator@Tielemao",[[-1,6142,"["]],[6143,6143],[6142,6142]]],[1527778857603,["Administrator@Tielemao",[[-1,6151,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial \""]],[6151,6211],[6151,6151]]],[1527778874273,["Administrator@Tielemao",[[-1,6152,"initial 是将属性的初始值( initial value)赋给元素 . initial 适用于所有的css 属性(属性的initial值可在属性表中查到)，包括css 简写属性(全局属性)all."]],[6152,6253],[6152,6152]]],[1527778876577,["Administrator@Tielemao",[[-1,6152,"\") "]],[6155,6155],[6152,6152]]],[1527778900357,["Administrator@Tielemao",[[1,7022,"\n"]],[7020,7020],[7021,7021]]],[1527778900937,["Administrator@Tielemao",[[1,7023,"\n"]],[7021,7021],[7022,7022]]],[1527778902806,["Administrator@Tielemao",[[1,7022,"initial 是将属性的初始值( initial value)赋给元素 . initial 适用于所有的css 属性(属性的initial值可在属性表中查到)，包括css 简写属性(全局属性)all."]],[7022,7022],[7123,7123]]],[1527778934972,["Administrator@Tielemao",[[-1,6254,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/unset \"The unset CSS keyword is the combination of the initial and inherit keywords. Like these two other CSS-wide keywords, it can be applied to any CSS property, including the CSS shorthand all. This keyword resets the property to its inherited value if it inherits from its parent or to its initial value if not. In other words, it behaves like the inherit keyword in the first case and like the initial keyword in the second case.\") "]],[6254,6742],[6254,6254]]],[1527778937559,["Administrator@Tielemao",[[-1,6246,"["]],[6247,6247],[6246,6246]]],[1527778950944,["Administrator@Tielemao",[[-1,6322,"["]],[6323,6323],[6322,6322]]],[1527778953256,["Administrator@Tielemao",[[-1,6330,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/revert \"此页面仍未被本地化, 期待您的翻译!\") "]],[6330,6410],[6330,6330]]],[1527778962403,["Administrator@Tielemao",[[1,6452,"`"]],[6452,6452],[6453,6453]]],[1527778963537,["Administrator@Tielemao",[[1,6460,"`"]],[6460,6460],[6461,6461]]],[1527778979775,["Administrator@Tielemao",[[1,6611,"\n"]],[6611,6611],[6612,6612]]],[1527778983833,["Administrator@Tielemao",[[-1,6611,"\n"]],[6612,6612],[6611,6611]]],[1527778985494,["Administrator@Tielemao",[[1,6625,"\n"]],[6623,6623],[6624,6624]]],[1527779040557,["Administrator@Tielemao",[[1,6624,"```html\n<ul>\n  <li>Default <a href=\"#\">link</a> color</li>\n  <li class=\"inherit\">Inherit the <a href=\"#\">link</a> color</li>\n  <li class=\"initial\">Reset the <a href=\"#\">link</a> color</li>\n  <li class=\"unset\">Unset the <a href=\"#\">link</a> color</li>\n</ul>\n```\n\n现在用CSS给它添加样式：\n\n```css\nbody {\n  color: green;\n}\n\n.inherit a {\n  color: inherit;\n}\n\n.initial a {\n  color: initial\n}\n\n.unset a {\n  color: unset;\n}\n```\n\nResult:"]],[6624,6624],[7042,7042]]],[1527779046752,["Administrator@Tielemao",[[-1,7034,"\n"]],[7034,7034],[7033,7033]]],[1527779048341,["Administrator@Tielemao",[[1,7043,"\n"]],[7042,7042],[7043,7043]]],[1527779151441,["Administrator@Tielemao",[[1,7044,"![css-c04]($res/css-c04.jpg)\n\n"]],[7043,7043],[7073,7073]]],[1527779154147,["Administrator@Tielemao",[[-1,7043,"\n"]],[7043,7043],[7042,7042]]],[1527779155287,["Administrator@Tielemao",[[1,7073,"\n"]],[7072,7072],[7073,7073]]],[1527779166561,["Administrator@Tielemao",[[1,7073,"让我们解释这里发生了什么：\n\n*   我们首先设置[`<body>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\") 的[`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\")为绿色。\n*   由于`color`属性是自然继承的，所有的body子元素都会有相同的绿色。需要注意的是默认情况下浏览器设置链接的颜色为蓝色，而不是自然继承color属性，因此在我们列表中的第一个链接是蓝色的。\n*   第二个规则设置一个类 `inherit` 的元素内的链接，并从父类继承它的颜色。在这种情况下, 意思是说链接继承了父元素[`<li>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li \"HTML <li> 元素 (或者 HTML 列表条目元素) 用于表示列表里的条目。它必须被包含在一个父元素里：一个有顺序的列表(<ol>)，一个无顺序的列表(<ul>)，或者一个菜单 (<menu>)。在菜单或者无顺序的列表里，列表条目通常用点排列显示。在有顺序的列表里，列表条目通常是在左边有按升序排列计数的显示，例如数字或者字母。\")的颜色，默认情况下[`<li>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li \"HTML <li> 元素 (或者 HTML 列表条目元素) 用于表示列表里的条目。它必须被包含在一个父元素里：一个有顺序的列表(<ol>)，一个无顺序的列表(<ul>)，或者一个菜单 (<menu>)。在菜单或者无顺序的列表里，列表条目通常用点排列显示。在有顺序的列表里，列表条目通常是在左边有按升序排列计数的显示，例如数字或者字母。\")的颜色来自于它的父元素 [`<ul>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul \"The HTML <ul> 元素 ( 或 HTML 无序列表元素） 代表多项的无序列表，即无数值排序项的集合，且它们在列表中的顺序是没有意义的。通常情况下，无序列表项的头部可以是几种形式，如一个点，一个圆形或方形。头部的风格并不是在页面的HTML描述定义, 但在其相关的CSS 可以用 list-style-type 属性。\") , 最后[`<ul>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul \"The HTML <ul> 元素 ( 或 HTML 无序列表元素） 代表多项的无序列表，即无数值排序项的集合，且它们在列表中的顺序是没有意义的。通常情况下，无序列表项的头部可以是几种形式，如一个点，一个圆形或方形。头部的风格并不是在页面的HTML描述定义, 但在其相关的CSS 可以用 list-style-type 属性。\") 继承自 [`<body>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\")元素，而[`<body>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\")的[`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") 根据第一条规则设置成了绿色。\n*   第三个规则选择了在元素上使用类 `initial` 的任意链接然后设置他们的颜色为 `initial` 。通常， `initial` 的值被浏览器设置成了黑色，因此该链接被设置成了黑色。\n*   最后一个规则选择了在元素上使用类 `unset` 的所有链接然后设置它们的颜色为 `unset`  ——即我们不设置值。因为color属性是一个自然继承的属性，它实际上就像把值设置成 `inherit` 一样。结果是，该链接被设置成了与body一样的颜色——绿色。"]],[7073,7073],[9596,9596]]],[1527779173792,["Administrator@Tielemao",[[-1,7107,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body"],[-1,7172,"\"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\") "],[-1,7701," "],[1,7702," "],[-1,7711," "],[1,7712," "],[-1,7831," 元素 (或者 "],[1,7839," 元素 (或者 "],[-1,8080," 元素 (或者 "],[1,8088," 元素 (或者 "],[-1,8251," "],[1,8252," "],[-1,8343," "],[1,8344," "],[-1,8356," "],[1,8357," "],[-1,8465," "],[1,8466," "],[-1,8487," "],[1,8488," "],[-1,8583," "],[1,8584," "],[-1,8596," "],[1,8597," "],[-1,8705," "],[1,8706," "],[-1,8727," 继承自 "],[1,8732," 继承自 "],[-1,8847," "],[1,8848," "],[-1,8854," "],[1,8855," "],[-1,8979," "],[1,8980," "],[-1,8986," "],[1,8987," "],[-1,9346," "],[1,9347," "],[-1,9381," "],[1,9382," "],[-1,9391," "],[1,9392," "],[-1,9407," "],[1,9408," "],[-1,9417," "],[1,9418," "],[-1,9422," "],[1,9423," "],[-1,9432," "],[1,9433," "],[-1,9480," "],[1,9481," "],[-1,9488," "],[1,9489," "],[-1,9504," "],[1,9505," "],[-1,9512," "],[1,9513," "],[-1,9555," "],[1,9556," "],[-1,9565," "],[1,9566," "]],[7107,7226],[7107,7107]]],[1527779175366,["Administrator@Tielemao",[[-1,7098,"["]],[7099,7099],[7098,7098]]],[1527779179962,["Administrator@Tielemao",[[-1,7108,"["]],[7109,7109],[7108,7108]]],[1527779185077,["Administrator@Tielemao",[[-1,7115,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\")"]],[7115,7460],[7115,7115]]],[1527779237973,["Administrator@Tielemao",[[-1,7285,"["]],[7286,7286],[7285,7285]]],[1527779245165,["Administrator@Tielemao",[[-1,7291,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li"]],[7291,7353],[7291,7291]]],[1527779262985,["Administrator@Tielemao",[[-1,7292,"\"HTML <li> 元素 (或者 HTML 列表条目元素) 用于表示列表里的条目。它必须被包含在一个父元素里：一个有顺序的列表(<ol>)，一个无顺序的列表(<ul>)，或者一个菜单 (<menu>)。在菜单或者无顺序的列表里，列表条目通常用点排列显示。在有顺序的列表里，列表条目通常是在左边有按升序排列计数的显示，例如数字或者字母。\")"]],[7292,7462],[7292,7292]]],[1527779265434,["Administrator@Tielemao",[[-1,7301,"["]],[7302,7302],[7301,7301]]],[1527779269487,["Administrator@Tielemao",[[-1,7307,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li \"HTML <li> 元素 (或者 HTML 列表条目元素) 用于表示列表里的条目。它必须被包含在一个父元素里：一个有顺序的列表(<ol>)，一个无顺序的列表(<ul>)，或者一个菜单 (<menu>)。在菜单或者无顺序的列表里，列表条目通常用点排列显示。在有顺序的列表里，列表条目通常是在左边有按升序排列计数的显示，例如数字或者字母。\")"]],[7307,7540],[7307,7307]]],[1527779271696,["Administrator@Tielemao",[[-1,7319,"["]],[7320,7320],[7319,7319]]],[1527779277668,["Administrator@Tielemao",[[-1,7325,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul \"The HTML <ul> 元素 ( 或 HTML 无序列表元素） 代表多项的无序列表，即无数值排序项的集合，且它们在列表中的顺序是没有意义的。通常情况下，无序列表项的头部可以是几种形式，如一个点，一个圆形或方形。头部的风格并不是在页面的HTML描述定义, 但在其相关的CSS 可以用 list-style-type 属性。\")"]],[7325,7553],[7325,7325]]],[1527779280079,["Administrator@Tielemao",[[-1,7330,"["]],[7331,7331],[7330,7330]]],[1527779286521,["Administrator@Tielemao",[[-1,7336,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul \"The HTML <ul> 元素 ( 或 HTML 无序列表元素） 代表多项的无序列表，即无数值排序项的集合，且它们在列表中的顺序是没有意义的。通常情况下，无序列表项的头部可以是几种形式，如一个点，一个圆形或方形。头部的风格并不是在页面的HTML描述定义, 但在其相关的CSS 可以用 list-style-type 属性。\") "]],[7336,7565],[7336,7336]]],[1527779289336,["Administrator@Tielemao",[[-1,7340,"["]],[7341,7341],[7340,7340]]],[1527779294097,["Administrator@Tielemao",[[-1,7348,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\")"]],[7348,7467],[7348,7348]]],[1527779296120,["Administrator@Tielemao",[[-1,7352,"["]],[7353,7353],[7352,7352]]],[1527779300919,["Administrator@Tielemao",[[-1,7360,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\")"]],[7360,7479],[7360,7360]]],[1527779303186,["Administrator@Tielemao",[[-1,7361,"["]],[7362,7362],[7361,7361]]],[1527779308630,["Administrator@Tielemao",[[-1,7368,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\")"]],[7368,7713],[7368,7368]]],[1527779337554,["Administrator@Tielemao",[[1,7619,"\n"]],[7618,7618],[7619,7619]]],[1527779337856,["Administrator@Tielemao",[[1,7620,"\n"]],[7619,7619],[7620,7620]]],[1527779349479,["Administrator@Tielemao",[[1,7620,"### 重新设置所有的属性值\n\nCSS速写属性 [`all`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/all \"CSS all简写属性重设除了unicode-bidi 和 direction 之外的所有属性至它们的初始值或继承值。\") 能够被应用到每一个继承属性，一次性应用所有的继承属性。这里的值可以是继承属性里的任何一个 (`inherit`, `initial`, `unset`, or `revert`)。对于撤销对样式的修改，这是非常方便的一种方式。然后你就可以在开始新的修改之前，返回到一个已知的开始点。"]],[7620,7620],[7909,7909]]],[1527779509104,["Administrator@Tielemao",[[-1,7643," "],[1,7644," "],[-1,7767," "],[1,7768," "],[-1,7824," "],[1,7825," "],[-1,7835," "],[1,7836," "],[-1,7847," "],[1,7848," "],[1,7910,"\n"]],[7909,7909],[7910,7910]]],[1527779509312,["Administrator@Tielemao",[[1,7911,"\n"]],[7910,7910],[7911,7911]]],[1527779511628,["Administrator@Tielemao",[[-1,7911,"\n"],[1,7912,"end"]],[7911,7911],[7914,7914]]],[1527779512635,["Administrator@Tielemao",[[1,7914,"\n\n"]],[7914,7914],[7915,7915]]],[1527779522670,["Administrator@Tielemao",[[-1,7915,"\n"],[1,7916,"2018-5-31 mfk"]],[7915,7915],[7928,7928]]],[1527779523333,["Administrator@Tielemao",[[-1,7925,"mfk"]],[7928,7928],[7925,7925]]],[1527779524821,["Administrator@Tielemao",[[1,7925,"周"]],[7925,7925],[7926,7926]]],[1527779525876,["Administrator@Tielemao",[[1,7926,"四"]],[7926,7926],[7927,7927]]]]],["15bec612-2176-41bd-ad65-a6ab37c69dc8",1527838231579,"[[toc]]\n\n当有多个选择器作用在一个元素上时，哪个规则最终会应用到元素上？其实这是通过层叠机制来控制的，这也和样式继承(元素从其父元素那里获得属性值)有关。\n\n元素的最终样式可以在多个地方定义，它们以复杂的形式相互影响。这些复杂的相互作用使CSS变得非常强大，但也使其非常难于调试和理解。\n\n## 层叠\n\nCSS 是 **Cascading Style Sheets** 的缩写，这暗示层叠（cascade）的概念是很重要的。在最基本的层面上，它表明CSS规则的顺序很重要，但它比那更复杂。什么选择器在层叠中胜出取决于三个因素（这些都是按重量级顺序排列的——前面的的一种会否决后一种）：\n\n1.  重要性（Importance）\n2.  专用性（Specificity）\n3.  源代码次序（Source order）\n\n### 重要性\n\n在CSS中，有一个特别的语法可以让一条规则**总是**优先于其他规则：`!important`。（常见于应用于iconfont图标属性后面）把它加在属性值的后面可以使这条声明有无比强大的力量。  \n\n让我们看一下这个例子:\n\n```html\n<p class=\"better\">This is a paragraph.</p>\n<p class=\"better\" id=\"winning\">One selector to rule them all!</p>\n```\n\n```css\n#winning {\n  background-color: red;\n  border: 1px solid black;\n}\n\n.better {\n  background-color: gray;\n  border: none !important;\n}\n\np {\n  background-color: blue;\n  color: white;\n  padding: 5px;\n}\n```\n\n这将生成以下：\n\n![css-c01]($res/css-c01.jpg)\n\n让我们一起来看看发生了什么。\n\n1.  你可以看到第三条规则 `color` 和 `padding`被运用了, 但 `background-color`没有，为什么？实际上，这三种情况都应该应用，因为在源顺序后面的规则通常会覆盖较早的规则。\n\n2.  然而, 在前面的规则被运用了,因为 IDs/class 选择器优先于element选择器。 \n\n3.  这两个元素都有 `class`并带有 `better`属性, 但是第二个元素有 `id` 值为`winning` 。 因为比起class而言id专用性更高(在一个页面上id是唯一的, 但很多元素可以拥有相同的class — ID 选择器在它们的目标中是非常优先的)，红色背景色和1pixel的黑色边框都应应用于第二元素，第一个元素获得灰色背景色，没有边框，如类所指定。\n\n4.  第二个元素获得红色背景色，但没有边框。为什么？因为 `!important` 在第二条规则中的声明——在 `border: none`之后写入它意味着尽管id具有更高的优先性，该声明也将优先于前面规则中的边界值声明。\n\n**注意**: 重载这个 `!important` 声明的唯一方法是在后面的源码或者是一个拥有更高特殊性的源码中包含相同的 `!important` 特性的声明。\n\n知道 `!important`存在是很有用的，这样当你在别人的代码中遇到它时，你就知道它是什么了。**但是！**我们建议你千万不要使用它，除非你绝对必须使用它。您可能不得不使用它的一种情况是，当您在CMS中工作时，您不能编辑核心的CSS模块，并且您确实想要重写一种不能以其他方式覆盖的样式。 但是，如果你能避免的话，不要使用它。由于 `!important` 改变了层叠正常工作的方式，因此调试CSS问题，尤其是在大型样式表中，会变得非常困难。\n\n要注意一个CSS声明的重要性取决于它被指定在什么样式表内——用户可以设置自定义样式表覆盖开发商的样式，例如用户可能有视力障碍，想设置字体大小对所有网页的访问是双倍的正常大小，以便更容易阅读。\n\n**相互冲突的声明将按以下顺序适用，后一种将覆盖先前的声明**：\n\n1.  在用户代理样式表的声明 (例如：浏览器在没有其他声明的默认样式).\n2.  用户样式表中的普通声明（由用户设置的自定义样式）。\n3.  作者样式表中的普通声明（这是我们设置的样式，Web开发人员）。\n4.  作者样式表中的重要声明\n5.  用户样式表中的重要声明\n\nWeb开发者的样式表覆盖用户的样式表是合理的，所以设计可以保持预期，但是有时候用户有很好的理由来重写web开发人员样式，如上所述，这可以通过在用户的规则中使用`!important`。\n\n### 专用性\n\n**专用性**基本上是衡量选择器的具体程度的一种方法——它能匹配多少元素。如上面所示的示例所示，元素选择器具有很低的专用性。类选择器具有更高的专用性，所以将战胜元素选择器。ID选择器有甚至更高的专用性, 所以将战胜类选择器. 战胜ID选择器的唯一方法是使用 `!important`。\n\n一个选择器具有的专用性的量是用四种不同的值（或组件）来衡量的，它们可以被认为是千位，百位，十位和个位——在四个列中的四个简单数字：\n\n1.  千位：如果声明是在`style` 属性中该列加1分（这样的声明没有选择器，所以它们的专用性总是1000。）否则为0。\n2.  百位：在整个选择器中每包含一个ID选择器就在该列中加1分。\n3.  十位：在整个选择器中每包含一个类选择器、属性选择器、或者伪类就在该列中加1分。\n4.  个位：在整个选择器中每包含一个元素选择器或伪元素就在该列中加1分。\n\n**注意**: 通用选择器 (`*`), 复合选择器 (`+`, `>`, `~`, ' ') 和否定伪类 (`:not`) 在专用性中无影响。\n\n下表显示了几个示例。试着通过这些，并确保你理解他们为什么具有我们给予他们的专用性。\n\n| 选择器 | 千位 | 百位 | 十位 | 个位 | 合计值 |\n| --- | --- | --- | --- | --- | --- |\n| `h1` | 0 | 0 | 0 | 1 | 0001 |\n| `#important` | 0 | 1 | 0 | 0 | 0100 |\n| `h1 + p::first-letter` | 0 | 0 | 0 | 3 | 0003 |\n| `li > a[href*=\"zh-CN\"] > .inline-warning` | 0 | 0 | 2 | 2 | 0022 |\n| `#important div > div > a:hover`, 在一个元素的 `<style>`属性里 | 1 | 1 | 1 | 3 | 1113 |\n\n在我们继续之前，让我们看看一个行动中的例子。\n这是我们将要使用的HTML：\n\n```html\n<div id=\"outer\" class=\"container\">\n  <div id=\"inner\" class=\"container\">\n    <ul>\n      <li class=\"nav\"><a href=\"#\">One</a></li>\n      <li class=\"nav\"><a href=\"#\">Two</a></li>\n    </ul>\n  </div>\n</div>\n```\n\n下面是CSS的示例：\n\n```css\n/* specificity: 0101 */\n#outer a {\n  background-color: red;\n}\n\n/* specificity: 0201 */\n#outer #inner a {\n  background-color: blue;\n}\n\n/* specificity: 0104 */\n#outer div ul li a {\n  color: yellow;\n}\n\n/* specificity: 0113 */\n#outer div ul .nav a {\n  color: white;\n}\n\n/* specificity: 0024 */\ndiv div li:nth-child(2) a:hover {\n  border: 10px solid black;\n}\n\n/* specificity: 0023 */\ndiv li:nth-child(2) a:hover {\n  border: 10px dashed black;\n}\n\n/* specificity: 0033 */\ndiv div .nav:nth-child(2) a:hover {\n  border: 10px double black;\n}\n\na {\n  display: inline-block;\n  line-height: 40px;\n  font-size: 20px;\n  text-decoration: none;\n  text-align: center;\n  width: 200px;\n  margin-bottom: 10px;\n}\n\nul {\n  padding: 0;\n}\n\nli {\n  list-style-type: none;\n}\n```\n\n我们从这个代码中得到的结果如下：\n\n\n![css-c02]($res/css-c02.gif)\n\n这里发生了什么?首先，我们只对本例的前七个规则感兴趣，正如您将注意到的，我们已经在每个注释中包含了它们的专用性值。\n\n*   前两个选择器正在竞争链接的背景颜色的样式——第二个赢得并使背景色为蓝色，因为它有一个额外的ID选择器在链中：其专用性值为201比101。\n*   第三个和第四个选择器在链接文本颜色的样式上进行竞争——第二个选择器获胜，使文本变白，因为缺少一个元素选择器，缺少的选择器被换成类选择器，它的值是十，而不是个位。所以专用性值为113和104。\n*   选择器5 - 7在徘徊在链接附近时的样式进行竞争。选择器六明显地输给了了五，其专用性值为23和24——它在链中少了一个元素选择器。然而选择器七同时击败了五和六——它有与五相同数量的子选择器在链中，但一个元素已被换为了一个类选择器。所以获胜的专用性值是33比23和24。\n\n### 源代码次序\n\n如上所述，如果多个相互竞争的选择器具有相同的重要性和专用性，那么第三个因素将帮助决定哪一个规则获胜——后面的规则将战胜先前的规则。例如:\n\n```css\np {\n  color: blue;\n}\n\n/* This rule will win over the first one */\np {\n  color: red;\n}\n```\n\n而在这个例子中的第一个规则将获胜，因为专用性高于源代码顺序：\n\n```css\n/* This rule will win */\n.footnote {\n  color: blue;\n}\n\np {\n  color: red;\n}\n```\n### 关于规则混合的一点注记\n\n在考虑所有这些层叠理论和什么样式优先于其他样式被应用时，你应该记住的一件事是，所有这些都发生在属性级别上——属性覆盖其他属性，但你不会让整个规则凌驾于其他规则之上。\n当多个CSS规则匹配相同的元素时，它们都被应用到该元素中。只有在这之后，任何相互冲突的属性才会被评估，以确定哪种风格会战胜其他类型。\n\n**简记：只有相同的属性应用发生冲突后才会产生覆盖**\n\n让我们看一个例子。首先，一些HTML：\n\n```html\n<p>I'm <strong>important</strong></p>\n```\n\n现在一些CSS风格与它：\n\n```css\n/* specificity: 0002 */\np strong {\n  background-color: khaki;\n  color: green;\n}\n\n/* specificity: 0001 */\nstrong {\n  text-decoration: underline;\n  color: red;\n}\n```\nResult:\n\n![css-c03]($res/css-c03.jpg)\n\n在这个例子中，因为专用性的关系，第一条规则中的`color`属性覆盖掉了第二条中的颜色值。但是，对于第一条中的 `background-color`和第二条中的`text-decoration` 的属性都在`strong`元素之中得到了体现。你也注意到了这个元素之中的字体是加粗的：这是浏览器默认的样式规则。\n\n## 继承\n\nCSS继承是我们需要研究的最后一部分，以获取所有信息并了解什么样式应用于元素。\n\n其思想是，应用于某个元素的一些属性值将由该元素的子元素继承，而有些则不会。\n\n*   例如，对 `font-family`和 `color`进行继承是有意义的，因为这使得您可以很容易地设置一个站点范围的基本字体，方法是应用一个字体到 `<html>` 元素；然后，您可以在需要的地方覆盖单个元素的字体。如果要在每个元素上分别设置基本字体，那就太麻烦了。\n\n*   再如，让 `margin` `padding`，`border`和 `background-image`  不被继承是有意义的。想象一下，如果您将这些属性设置在一个容器元素上，并将它们继承到每个子元素，然后不得不将它们全部放在每个单独的元素上，那么将会出现的样式/布局混乱。\n\n哪些属性默认被继承哪些不被继承大部分符合常识。如果你想确定，你可以参考[CSS参考资料](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference)—— 每个单独的属性页都会从一个汇总表开始，其中包含有关该元素的各种详细信息，包括是否被继承。\n\n注：\n`font-family`允许您通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体。 属性的值用逗号隔开。浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过 ‘ `@font-face` 指定的可以直接下载的字体。\n\n`padding`属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\n\n`background-image` 属性用于为一个元素设置一个或者多个背景图像。图像在绘制时，以z方向堆叠的方式进行。先指定的图像会在之后指定的图像上面绘制。因此指定的第一个图像最接近用户。\n\n### 控制继承\n\nCSS为处理继承提供了四种特殊的通用属性值：\n\n*   `inherit`： 该值将应用到选定元素的属性值设置为与其父元素一样。\n*   `initial` ：该值将应用到选定元素的属性值设置为与浏览器默认样式表中该元素设置的值一样。如果浏览器默认样式表中没有设置值，并且该属性是自然继承的，那么该属性值就被设置为 `inherit`。\n*   `unset`：该值将属性重置为其自然值，即如果属性是自然继承的，那么它就表现得像 `inherit`，否则就是表现得像 `initial`。\n*   `revert`：如果当前的节点没有应用任何样式，则将该属性恢复到它所拥有的值。换句话说，属性值被设置成自定义样式所定义的属性（如果被设置）， 否则属性值被设置成用户代理的默认样式。\n\n**注意**: `initial` 和 `unset` 不被IE支持。\n\n`initial` 是将属性的初始值( initial value)赋给元素 . initial 适用于所有的css 属性(属性的initial值可在属性表中查到)，包括css 简写属性(全局属性)all.\n\n`inherit` 值是最有趣的——它允许我们显式地让一个元素从其父类继承一个属性值。\n\n让我们看一个例子。首先有以下一段HTML：\n```html\n<ul>\n  <li>Default <a href=\"#\">link</a> color</li>\n  <li class=\"inherit\">Inherit the <a href=\"#\">link</a> color</li>\n  <li class=\"initial\">Reset the <a href=\"#\">link</a> color</li>\n  <li class=\"unset\">Unset the <a href=\"#\">link</a> color</li>\n</ul>\n```\n\n现在用CSS给它添加样式：\n\n```css\nbody {\n  color: green;\n}\n\n.inherit a {\n  color: inherit;\n}\n\n.initial a {\n  color: initial\n}\n\n.unset a {\n  color: unset;\n}\n```\nResult:\n\n![css-c04]($res/css-c04.jpg)\n\n让我们解释这里发生了什么：\n\n*   我们首先设置`<body>` 的`color`为绿色。\n*   由于`color`属性是自然继承的，所有的body子元素都会有相同的绿色。需要注意的是默认情况下浏览器设置链接的颜色为蓝色，而不是自然继承color属性，因此在我们列表中的第一个链接是蓝色的。\n*   第二个规则设置一个类 `inherit` 的元素内的链接，并从父类继承它的颜色。在这种情况下, 意思是说链接继承了父元素`<li>` 的颜色，默认情况下`<li>`的颜色来自于它的父元素 `<ul>` , 最后`<ul>`继承自 `<body>`元素，而`<body>`的`color` 根据第一条规则设置成了绿色。\n*   第三个规则选择了在元素上使用类 `initial` 的任意链接然后设置他们的颜色为 `initial` 。通常， `initial` 的值被浏览器设置成了黑色，因此该链接被设置成了黑色。\n*   最后一个规则选择了在元素上使用类 `unset` 的所有链接然后设置它们的颜色为 `unset`  ——即我们不设置值。因为color属性是一个自然继承的属性，它实际上就像把值设置成 `inherit` 一样。结果是，该链接被设置成了与body一样的颜色——绿色。\n\n### 重新设置所有的属性值\n\nCSS速写属性 [`all`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/all \"CSS all简写属性重设除了unicode-bidi 和 direction 之外的所有属性至它们的初始值或继承值。\") 能够被应用到每一个继承属性，一次性应用所有的继承属性。这里的值可以是继承属性里的任何一个 (`inherit`, `initial`, `unset`, or `revert`)。对于撤销对样式的修改，这是非常方便的一种方式。然后你就可以在开始新的修改之前，返回到一个已知的开始点。\n\nend\n2018-5-31 周四",[[1527838182786,["Administrator@Tielemao",[[1,5252,"\n"]],[5250,5250],[5251,5251]]],[1527838183257,["Administrator@Tielemao",[[1,5253,"\n"]],[5251,5251],[5252,5252]]],[1527838187511,["Administrator@Tielemao",[[1,5252,"1.先看标签元素有没有被选中，如果选中了，就数数 （id,class,标签的数量） 谁的权重大 就显示谁的属性。权重一样大，后来者居上\r\n\t\t2.如果没有被选中标签元素，权重为0。\r\n\t\t如果属性都是被继承下来的 权重都是0 。权重都是0:\"就近原则\" ： 谁描述的近，就显示谁的属性\r\n\r\n \t\t\r\n\t\t3.继承来的，描述的一样近，数权重\r\n\t\t4.继承来的，描述的一样近，权重一样，后来者居上"]],[5252,5252],[5450,5450]]],[1527838189598,["Administrator@Tielemao",[[1,5252,"\n"],[-1,5319,"\r"],[-1,5342,"\r"],[-1,5394,"\r"],[-1,5396,"\r"],[-1,5401,"\r"],[-1,5422,"\r"]],[5251,5251],[5252,5252]]],[1527838204973,["Administrator@Tielemao",[[1,5252,"### xo"]],[5252,5252],[5258,5258]]],[1527838205679,["Administrator@Tielemao",[[-1,5256,"xo"]],[5258,5258],[5256,5256]]],[1527838208222,["Administrator@Tielemao",[[1,5256,"继"]],[5256,5256],[5257,5257]]],[1527838209073,["Administrator@Tielemao",[[-1,5256,"继"]],[5257,5257],[5256,5256]]],[1527838217520,["Administrator@Tielemao",[[1,5256,"层叠算法总结"]],[5256,5256],[5262,5262]]],[1527838227993,["Administrator@Tielemao",[[1,5263,"* "]],[5263,5263],[5265,5265]]],[1527838232148,["Administrator@Tielemao",[[-1,5265,"1."]],[5267,5267],[5265,5265]]],[1527838243256,["Administrator@Tielemao",[[-1,5310," "]],[5311,5311],[5310,5310]]],[1527838243609,["Administrator@Tielemao",[[1,5310,"，"]],[5310,5310],[5311,5311]]],[1527838248287,["Administrator@Tielemao",[[1,5319,"\n"]],[5319,5319],[5320,5320]]],[1527838250917,["Administrator@Tielemao",[[1,5320,"* "]],[5320,5320],[5322,5322]]],[1527838254064,["Administrator@Tielemao",[[1,5333,"。"]],[5333,5333],[5334,5334]]],[1527838259269,["Administrator@Tielemao",[[-1,5335,"\t\t2."]],[5339,5339],[5335,5335]]],[1527838260815,["Administrator@Tielemao",[[1,5335,"* "]],[5335,5335],[5337,5337]]],[1527838266626,["Administrator@Tielemao",[[-1,5355,"\t\t"]],[5357,5357],[5355,5355]]],[1527838268266,["Administrator@Tielemao",[[1,5355,"* "]],[5355,5355],[5357,5357]]],[1527838273443,["Administrator@Tielemao",[[-1,5369," "]],[5370,5370],[5369,5369]]],[1527838273958,["Administrator@Tielemao",[[1,5369,"，"]],[5369,5369],[5370,5370]]],[1527838284735,["Administrator@Tielemao",[[1,5405,"。"]],[5405,5405],[5406,5406]]],[1527838294508,["Administrator@Tielemao",[[-1,5399,"显示"]],[5401,5401],[5399,5399]]],[1527838295443,["Administrator@Tielemao",[[1,5399,"使用"]],[5399,5399],[5401,5401]]],[1527838302991,["Administrator@Tielemao",[[1,5405,"样式"]],[5405,5405],[5407,5407]]],[1527838306268,["Administrator@Tielemao",[[1,5263,"\n"]],[5262,5262],[5263,5263]]],[1527838317863,["Administrator@Tielemao",[[-1,5400,"使用"]],[5402,5402],[5400,5400]]],[1527838319625,["Administrator@Tielemao",[[1,5400,"显示"]],[5400,5400],[5402,5402]]],[1527838329664,["Administrator@Tielemao",[[-1,5415,"\t\t3"]],[5418,5418],[5415,5415]]],[1527838330189,["Administrator@Tielemao",[[-1,5414,"\n"]],[5415,5415],[5414,5414]]],[1527838331150,["Administrator@Tielemao",[[-1,5411," \t\t"]],[5414,5414],[5411,5411]]],[1527838331420,["Administrator@Tielemao",[[-1,5410,"\n"]],[5411,5411],[5410,5410]]],[1527838332744,["Administrator@Tielemao",[[1,5410,"8"]],[5410,5410],[5411,5411]]],[1527838333324,["Administrator@Tielemao",[[-1,5410,"8"]],[5411,5411],[5410,5410]]],[1527838334906,["Administrator@Tielemao",[[1,5410,"* "]],[5410,5410],[5412,5412]]],[1527838336864,["Administrator@Tielemao",[[-1,5412,"."]],[5413,5413],[5412,5412]]],[1527838339812,["Administrator@Tielemao",[[1,5427,"。"]],[5427,5427],[5428,5428]]],[1527838343216,["Administrator@Tielemao",[[-1,5429,"\t\t4"]],[5432,5432],[5429,5429]]],[1527838344745,["Administrator@Tielemao",[[1,5429,"* "]],[5429,5429],[5431,5431]]],[1527838348510,["Administrator@Tielemao",[[-1,5431,"."]],[5432,5432],[5431,5431]]],[1527838354731,["Administrator@Tielemao",[[1,5453,"。"]],[5453,5453],[5454,5454]]]]]]}