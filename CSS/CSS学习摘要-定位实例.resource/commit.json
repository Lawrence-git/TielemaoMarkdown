{"compress":true,"commitItems":[["43ca7b01-b317-4ae8-ae50-4f4437fe7670",1528120034141,"",[[1528120018194,["Administrator@Tielemao",[[1,0,"CSS学习摘要-定位实例\n===\n\n\n*   [跳转至主要内容](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#content)\n*   [选择语言](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#language)\n*   [跳到搜索](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#q)\n\n[MDN Web 文档](https://developer.mozilla.org/zh-CN/)\n\n*   [技术 ](https://developer.mozilla.org/zh-CN/docs/Web)\n\n*   [参考和指引 ](https://developer.mozilla.org/zh-CN/docs/Learn)\n\n*   [反馈 ](https://developer.mozilla.org/zh-CN/docs/MDN/Feedback)\n\n*   [工具](https://developer.mozilla.org/zh-CN/docs/MDN/Doc_status)\n\n*   [![tielemao](https://secure.gravatar.com/avatar/3a050999822a572365d53f7c3808f1a0?s=50&r=pg&d=https%3A%2F%2Fdeveloper.mozilla.org%2Fstatic%2Fimg%2Favatar.png) ](https://developer.mozilla.org/zh-CN/profiles/tielemao)\n\n搜索搜索\n\n*   语言\n\n*   [ 编辑](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit)\n\n*   关注\n\n*   高级\n\n[Learn web development](https://developer.mozilla.org/en-US/docs/Learn)\n\n# 定位实例练习\n\n翻译正在进行中。\n\n[ 上一页](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning)[ Overview: CSS layout](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)[下一页 ](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox)\n\n掌握了上一篇文章中的定位的基础知识，我们将着眼于实现一些现实中的例子，来演示你能用定位来做什么。\n\n| \n\n预备知识：\n\n | \n\nHTML基础(学习[Introduction to HTML](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML)),和CSS怎么工作的 (学习[Introduction to CSS](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS).)\n\n |\n| \n\n目标：\n\n | \n\n了解定位的实例\n\n |\n\n## 列表消息盒子[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E5%88%97%E8%A1%A8%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90)\n\n我们研究的第一个例子是一个经典的选项卡消息框，你想用一块小区域包括大量信息时，一个非常常用的特征。这包括含有大信息量的应用，比如策略战争游戏，比如从移动版的网页，屏幕狭小、空间有限；比如你可能想要放置许多信息的紧凑消息框，不用就会充满整个UI。我们简单的例子完成后就会像下面这样：\n\n![](https://mdn.mozillademos.org/files/13368/tabbed-info-box.png)\n\n**注意：**你能看完整的示例，可运行在 [info-box.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/info-box.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box.html))。检出它以理解你在本文章里要建立什么。\n\n你可能会想：”为什么不仅仅做独立的选项卡为一个独立的网页，然后通过点击不同的标签来在不同的页面跳转来达到这个效果？“这样代码可能会简单一些，是的。但是这样每个独立的”页面“视图将会实际上是一个新加载的网页，跨视图更难保存信息，并把这个特征融入一个更大的UI设计。另外，所谓的”单页应用“正在变得非常流行——尤其是移动网页UI——因为把一切的服务放在一个单独的文件上可以减少HTTP请求的数量来浏览所有内容，从而提高性能。\n\n**注意：**一些网络开发者甚至更超前，每次只加载一页的信息，并且使用JavaScript诸如 [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)特征动态改变信息显示。在你学习的此刻，然而，我们希望尽可能保持简单。接下来有一些JavaScript，但是只有一点。\n\n在开始之前，我们需要你拷贝文件到本地，当作起始的HTML文件—— [info-box-start.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box-start.html). 保存到你的计算机合适的位置，然后在你的编辑器里打开。让我们看看包含在 body 里的HTML代码：\n\n```html\n<section class=\"info-box\">\n  <ul>\n    <li><a href=\"#\" class=\"active\">Tab 1</a></li>\n    <li><a href=\"#\">Tab 2</a></li>\n    <li><a href=\"#\">Tab 3</a></li>\n  </ul>\n  <div class=\"panels\">\n    <article class=\"active-panel\">\n      <h2>The first tab</h2>\n\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque turpis nibh, porttitor nec venenatis eu, pulvinar in augue. Vestibulum et orci scelerisque, vulputate tellus quis, lobortis dui. Vivamus varius libero at ipsum mattis efficitur ut nec nisl. Nullam eget tincidunt metus. Donec ultrices, urna maximus consequat aliquet, dui neque eleifend lorem, a auctor libero turpis at sem. Aliquam ut porttitor urna. Nulla facilisi.</p>\n    </article>\n    <article>\n      <h2>The second tab</h2>\n\n      <p>This tab hasn't got any Lorem Ipsum in it. But the content isn't very exciting all the same.</p>\n    </article>\n    <article>\n      <h2>The third tab</h2>\n\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque turpis nibh, porttitor nec venenatis eu, pulvinar in augue. And now an ordered list: how exciting!</p>\n\n      <ol>\n        <li>dui neque eleifend lorem, a auctor libero turpis at sem.</li>\n        <li>Aliquam ut porttitor urna.</li>\n        <li>Nulla facilisi</li>\n      </ol>\n    </article>\n  </div>\n</section>\n```\n\n这样我们已经得到了一个[`<section>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\")元素带有类（`class`）为 `info-box`。此元素又包含一个 [`<ul>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul \"The HTML <ul> 元素 ( 或 HTML 无序列表元素） 代表多项的无序列表，即无数值排序项的集合，且它们在列表中的顺序是没有意义的。通常情况下，无序列表项的头部可以是几种形式，如一个点，一个圆形或方形。头部的风格并不是在页面的HTML描述定义, 但在其相关的CSS 可以用 list-style-type 属性。\") 和一个 [`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")。无序列表包含三个列表项，列表项有链接在内，实际上将成为用于点击后显示内容面板的选项卡。 `div` 包含三个[`<article>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article \"<article>元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。\") 元素，构成对应于每个选项卡的内容面板。 每个面板包含一些示例内容。\n\n这里的思路是我们将样式化选项卡看起来是一个标准的水平导航菜单，使用绝对定位样式化面板互相坐落其顶上。我们也给你一点JavaScript包含到你的页面上，当选项卡被按下时，显示对应的面板，并且样式化选项卡本身。你不需要在这个阶段了解JavaScript本身，但是你应该尽快学习一些基本的 [JavaScript](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics)——你的用户界面越复杂，越需要一些JavaScript来实现你渴望的功能。\n\n### 一般设置\n\n开始前，在[`<style>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style \"HTML的<style>元素包含了文档的样式化信息或者文档的一部分，该标签的样式信息通常是CSS的格式。\")开闭标签之间添加下面的代码：\n\n```css\nhtml {\n  font-family: sans-serif;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n}\n```\n\n这只是一些一般设置，在我们页面上设置了无衬线的字体、使用 [`box-sizing`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing \"box-sizing 属性用于更改用于计算元素宽度和高度的默认的 CSS 盒子模型。可以使用此属性来模拟不正确支持CSS盒子模型规范的浏览器的行为。\") 模型，去掉 [`<body>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\") 默认外边距。\n\n下一步，在你早先的CSS下面加入如下代码：\n\n```css\n.info-box {\n  width: 450px;\n  height: 400px;\n  margin: 0 auto;\n}\n```\n\n这对内容设置具体的高度和宽度、在屏幕居中使用老把戏 `margin: 0 auto` 。在早先的课程中我们建议尽可能不固定内容容器的高度。这个情况下是可以的，因为我们是在选项卡中固定的内容，如果每个标签都有不同的高度，看起来也有些不和谐。\n\n### 样式化我们的选项卡\n\n现在我们希望样式化选项卡看上去像选项卡——基本，这些是一个水平的导航标签，但不是点击之后加载不同的网页，和我们之前在课程中见到的不同，相反，他们在同一页面上显示不同的面板。首先，在你的CSS底部添加下列规则，从无序列表中移除默认的[`padding-left`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding-left \"CSS属性 padding-left 是指一个元素在内边距区域（padding area）中左边的宽度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种CSS缩写属性。\")和[`margin-top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin-top \" margin-top 属性用来设置元素的顶部外边距，你也可以使用负值。\")值：\n\n```css\n.info-box ul {\n  padding-left: 0;\n  margin-top: 0;\n}\n```\n\n**注意：**我们正在使用后代选择器，整个例子 `.info-box` 都位于链的开始——这样页面已经带有其他内容时，我们可以插入这个特征，不害怕与应用于页面其他部分的样式冲突。\n\n接下来，我们将样式化水平选项卡——列表项都要左浮动确保他们一行合起来，他们的[`list-style-type`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type \"属性 list-style-type 指定一个列表元素的外观。因为<li> 的display默认值是 list-item, 所以display:list-item 通常是一个<li>元素，不过任何其他元素的display也都可以取list-item值。\")被设置为 `none` 用以去除项目符号，宽度（[`width`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\")）设置为 `150px` 以便于适应这个info-box。链接（ [`<a>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a \"HTML <a> 元素  (或锚元素) 可以创建一个到其他网页、文件、同一页面内的位置、电子邮件地址或任何其他URL的超链接。\") ）元素设置为[`display`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display \"display CSS属性指定用于元素的呈现框的类型。在 HTML 中，默认的 display 属性取决于 HTML 规范所描述的行为或浏览器/用户的默认样式表。在 XML中，其默认值为 inline。\") inline-block，这样他们将在一行显示，仍然保持样式可设置，他们会被样式化合适的选项卡按钮，通过一系列的其他属性。\n\n添加下列的CSS：\n\n```css\n.info-box li {\n  float: left;\n  list-style-type: none;\n  width: 150px;\n}\n\n.info-box li a {\n  display: inline-block;\n  text-decoration: none;\n  width: 100%;\n  line-height: 3;\n  background-color: red;\n  color: black;\n  text-align: center;\n}\n```\n\n最后，对于本节，我们将会在链接状态上设置一些样式。首先，我们要设置标签的 `:focus` 和 `:hover` 状态，让他们在获得焦点/鼠标悬浮的时候看起来不同，给用户提供一些可视化反馈。其次，当某个选项卡的类（ `class` ）出现 `active` 时，我们为其设置一条相同的样式规则。我们将通过使用JavaScript来设置，当一个标签被点击时。把这些CSS放置在你的其他样式后面：\n\n```css\n.info-box li a:focus, .info-box li a:hover {\n  background-color: #a60000;\n  color: white;\n}\n\n.info-box li a.active {\n  background-color: #a60000;\n  color: white;\n}\n```\n\n### 样式化面板\n\n下一步工作是样式化我们的面板，现在开始吧！\n\n首先，添加下列的规则去样式化 `.panels` [`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\") 容器。我们简单的设置一个固定的高度，确保面板包含在info-box里面，[`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") `relative` 设置 [`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\") 为定位上下文，这样你能然后相对自身放置定位子元素，而不是相对[`<html>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/html \"HTML <html> 元素 表示一个HTML文档的根（顶级元素），所所以它也被称为根元素。其他所有其他元素必须是此元素的后代。\")元素，最后我们清除（[`clear`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/clear \"clear CSS 属性指定一个元素是否可以在它之前的浮动元素旁边，或者必须向下移动(清除浮动) 在它的下面。clear 属性适用于浮动和非浮动元素。\")）浮动，设置在上面CSS中，这样避免影响布局的剩余部分。\n\n```css\n.info-box .panels {\n  height: 352px;\n  position: relative;\n  clear: both;\n}\n```\n\n在本节的最后，我们将对包含我们面板的单独 [`<article>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article \"<article>元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。\") 元素设置样式。我们添加的第一条规则就是绝对定位面板，让他们都位于[`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")容器的左上角——这一部分对整个布局特性是关键的，就像使面板互相位于顶部。规则设置面板为和容器同样的高度，给内容一些内边距，设置字体颜色（[`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\")），和背景颜色（[`background-color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\")）。\n\n我们将添加的第二条规则，对带有类（ `class` ）为（ `active-panel` ）的面板，设置[`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index \"z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。\")为 1，会让他位于其他的面板之上（默认定位元素 `z-index` 的值是 0，会使默认元素位于下面）。同样的，我们会在合适的时候用JavaScript 来添加这个类。\n\n```css\n.info-box article {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 352px;\n  padding: 10px;\n  color: white;\n  background-color: #a60000;\n}\n\n.info-box .active-panel {\n  z-index: 1;\n}\n```\n\n### 添加我们的JavaScript\n\n让这些特性工作的最后一步是添加一些JavaScript。添加下列一块代码，准确的写在你的开始和结束的[`<script>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script \"HTML <script> 元素用于嵌入或引用可执行脚本。\")标签之间（在接下来的HTML内容中你将会发现这些）：\n\n```js\nvar tabs = document.querySelectorAll('.info-box li a');\nvar panels = document.querySelectorAll('.info-box article');\n\nfor(i = 0; i < tabs.length; i++) {\n  var tab = tabs[i];\n  setTabHandler(tab, i);\n}\n\nfunction setTabHandler(tab, tabPos) {\n  tab.onclick = function() {\n    for(i = 0; i < tabs.length; i++) {\n      if(tabs[i].getAttribute('class')) {\n        tabs[i].removeAttribute('class');\n      }\n    }\n\n    tab.setAttribute('class', 'active');\n\n    for(i = 0; i < panels.length; i++) {\n      if(panels[i].getAttribute('class')) {\n        panels[i].removeAttribute('class');\n      }\n    }\n\n    panels[tabPos].setAttribute('class', 'active-panel');\n  }\n}\n```\n\n这些代码做了如下工作：\n\n*   首先我们保存所有的选项卡和所有的面板引用到两个变量中，名为 `tabs` 和 `panels`，这样此后我们可以容易地为它们做事。\n*   然后我们使用 `for` 循环遍历所有的选项卡，并且在每一个上运行叫做`setTabHandler()` 的函数，此函数建立当每个选项卡被点击时应该发生的功能。 运行时， 函数会被传递选项卡，和一个索引数`i` 指明选项卡在`tabs` 数组中的位置。\n*   In the `setTabHandler()` function, the tab has an `onclick` event handler set on it, so that when the tab is clicked, the following occurs:\n    *   A `for` loop is used to cycle through all the tabs and remove any classes that are present on them.\n    *   A `class` of `active` is set on the tab that was clicked on — remember from earlier that this class has an associated rule in the CSS that sets the same [`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") and [`background-color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\") on the tab as the panels are styled with.\n    *   A `for` loop is used to cycle through all the panels and remove any classes that are present on them.\n    *   A class of `active-panel` is set on the panel that corresponds to the tab that was clicked on — remember from earlier that this class has an associated rule in the CSS that sets its [`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index \"z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。\") to 1, making it appear over the top of the other panels.\n\nThat's it for the first example. Keep your code open, as we'll be adding to it in the second one.\n\n在setTabHandler()函数中，这个标签创建了一个onclick事件来处理点击，所以当标签被点击的时候，接下来会发生：\n\n一个for循环用开清除所有标签当前存在的类\n\n当点击的时候在标签上创建了一个active 类——从相关联的元素中继承了CSS的一些属性，具有和panels的样式相同的颜色，背景颜色。\n\n一个for循环用开清除所有面板当前存在的类\n\n当标签被点击的时候在和标签相对应的面板上创建了一个active-panel 类——从相关联的元素中继承了CSS的一些属性，使他的z-index属性被设置为1，让他能位于所有的面板的上面。\n\n## A fixed position tabbed info-box[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#A_fixed_position_tabbed_info-box)\n\n## 一个固定位置的列表消息盒子[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E4%B8%80%E4%B8%AA%E5%9B%BA%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%88%97%E8%A1%A8%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90)\n\nIn our second example, we will take our first example — our info-box — and add it into the context of a full web page. But not only that — we'll give it fixed position so that it stays in the same position in the browser window. When the main content scrolls, the info-box will stay in the same position on the screen. Our finished example will look like this:\n\n在我们的第二个例子中，我们将会采用我们的第一个例子——我们的消息盒子——把她加到一个满的网页之中去。但是不仅仅是这样——我们将固定她的位置，以便于他能待在浏览器窗口的同一个位置。当主要内容滚动时，这个消息盒子将会待在屏幕的同一个位置。我们完工以后的例子长下面这样：\n\n![](https://mdn.mozillademos.org/files/13364/fixed-info-box.png)\n\n**Note**: You can see the finished example running live at [fixed-info-box.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/fixed-info-box.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/fixed-info-box.html)). Check it out to get an idea of what you will be building in this section of the article.\n\n笔记：你可以点击蓝字预览完成后的效果，看看哪些部分是你在这篇文章里你要制作的。\n\nAs a starting point, you can use your completed example from the first section of the article, or make a local copy of [info-box.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box.html) from our Github repo.\n\n在开始的时候，你可以使用第一部分中完成的例子，或者从我们的Github仓库中拷贝info-box.html到本地。\n\n### HTML additions\n\n### 添加HTML \n\nFirst of all, we need some additional HTML to represent the web site main content. Add the following [`<section>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\") just below your opening [`<body>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\") tag, just before the existing section:\n\n首先，我们需要一些额外的内容在当前的主内容中。添加下列部分在你的body标签之中，在已存在的部分之中前：\n\n```html\n<section class=\"fake-content\">\n  <h1>Fake content</h1>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n</section>\n```\n\n**Note**: You can feel free to change the fake content for some real content if you like.\n\n笔记：你可以随意更改更改假的内容，替换为你想要的真的内容。\n\n### Changes to the existing CSS\n\n### 更改存在的CSS\n\nNext we need to make some small changes to the existing CSS, to get the info-box placed and positioned. Change your `.info-box` rule to get rid of `margin: 0 auto;` (we no longer want the info-box centered), add [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")`: fixed;`, and stick it to the [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") of the browser viewport.\n\nIt should now look like this:\n\n接下来我们需要对之前的Css进行一些小修改，让消息盒子放置和定位的好一些。删除你的margin: 0 auto （不需要居中显示），添加fixed定位；调整top 属性把她粘在浏览器的视域。\n\n```css\n.info-box {\n  width: 450px;\n  height: 400px;\n  position: fixed;\n  top: 0;\n}\n```\n\n### Styling the main content\n\n### 对主内容样式设计\n\nThe only thing left for this example is to provide the main content with some styling. Add the following rule underneath the rest of your CSS:\n\n对于这个例子来说唯一剩下的事情就是给主内容提供一些样式设计。添加下面的规则到你剩下的Css 的下面：\n\n```css\n.fake-content {\n  background-color: #a60000;\n  color: white;\n  padding: 10px;\n  height: 2000px;\n  margin-left: 470px;\n}\n```\n\nTo start with, we give the content the same [`background-color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\"), [`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\"), and [`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\") as the info-box panels. We then give it a large [`margin-left`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin-left \"margin-left  属性 设置与元素相关联的盒子模型的左外边距。这个值可以为负值。\") to move it over to the right, making space for the info-box to sit in, so it is not overlapping anything else.\n\nThis marks the end of the second example; we hope you'll find the third just as interesting.\n\n开始我们给这个内容和消息盒子面板一样的背景颜色，颜色，内边距。然后给他一个大的margin-left使他移动到右边，为消息盒子在左边腾出位置，以便于各个部分不重叠。\n\n这标志着第二个例子的结束；我们希望你能感到第三个例子，完全是因为兴趣。\n\n## A sliding hidden panel[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#A_sliding_hidden_panel)\n\n## 一个滑动隐藏的面板[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E9%9A%90%E8%97%8F%E7%9A%84%E9%9D%A2%E6%9D%BF)\n\nThe final example we'll present here is a panel that slides on and off the screen at the press of an icon — as mentioned earlier, this is popular for situations like mobile layouts, where the available screen spaces is small, so you don't want to use up most of it by showing a menu or info panel instead of the useful content.\n\n最后一个我们在这里介绍的例子是通过按图标使面板滑动出现或者消失——就像前面提到的，这种场景在移动端的布局很流行，因为移动端的屏幕很小，所以你不希望使用大部分界面来显示一个有用的内容而是用消息面板或者菜单代替。\n\nOur finished example will look like this:\n\n我们完工后的例子长这样：\n\n![](https://mdn.mozillademos.org/files/13366/hidden-sliding-panel.png)\n\n**Note**: You can see the finished example running live at [hidden-info-panel.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/hidden-info-panel.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel.html)). Check it out to get an idea of what you will be building in this section of the article.\n\n笔记：你可以点击蓝字预览完成后的效果，仔细看看哪些部分是你在这篇文章里你要制作的。\n\nAs a starting point, make a local copy of [hidden-info-panel-start.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel-start.html) from our Github repo. This doesn't follow on from the previous example, so a fresh start file is required. Let's have a look at the HTML in the file:\n\n在一开始，老规矩在我们的Githib代码仓库拷贝[hideen-info-panel-start.html](https://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/hidden-info-panel.html)([源码](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel.html))。这个例子并没有用先前的例子，所以我们需要一个新的开始文件。让我们来仔细观察一下这个HTML文件：\n\n```css\n<label for=\"toggle\">❔</label>\n<input type=\"checkbox\" id=\"toggle\">\n<aside>\n\n  ...\n\n</aside>\n```\n\nTo start with here we've got a [`<label>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label \"HTML 元素表示用户界面中项目的标题。\") element and an [`<input>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input \"HTML <input> 元素用于为基于Web的表单创建交互式控件，以便接受来自用户的数据。\") element — `<label>`elements are normally used to associate a text label with a form element for accessibility purposes (allowing a screen user to see what description goes with what form element). Here it is associated with the `<input>` checkbox using the `for` and `id` attributes.\n\n//label 的 for属性规定label属性绑定到哪个表单元素。\n\n开始，我们看到了一个label 元素和input元素——<label>元素普遍用来联系文字标签和表单，目的是能更好的理解表单（允许用户查看表单元素的描述）。这里通过for属性绑定id到了<input>标签的checkbox元素。\n\n**Note**: We've put a special question mark character into our HTML to act as our info icon — this represents the button that will be pressed to show/hide the panel.\n\n笔记：我们已经设置了一个特殊的问题标记特性到我们的HTML中，来当作我们的信息图标——这代表着这个按钮将可以按下显示或隐藏面板。\n\nHere we are going to use these elements for a slightly different purpose — another useful side effect of `<label>` elements is that you can click a checkbox's label to check the checkbox, as well as just the checkbox itself. This has led to the well-known [checkbox hack](https://css-tricks.com/the-checkbox-hack/), which provides a JavaScript-free way of controlling an element by toggling a button. The element we'll be controlling is the [`<aside>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside \"<aside> 元素表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响。其通常表现为侧边栏或者嵌入内容。他们通常包含在工具条，例如来自词汇表的定义。也可能有其他类型的信息，例如相关的广告、笔者的传记、web 应用程序、个人资料信息，或在博客上的相关链接。\") element that follows the other two (we've left its contents out of the above code listing for brevity).\n\nIn the below sections we'll explain how this all works.\n\n现在我们使用这些元素在稍稍不同的目的——另一个<label>标签有用的副作用使你能通过点击checkbox的label标签来选择这个checkbox，就好像点击了这个checkbox自己一样。这就会实现有名的checkbox hack 技术，可以提供无JS的方法来控制一个元素，通过一个按钮的联系。我们将控制的元素使aside元素，通过其他两个（为了简洁起见，我们已将其内容从上述代码列表中删除）。\n\n在下面的部分我们将解释这一切如何运作。\n\n### Styling the form elements\n\n### 设置表单元素样式\n\nFirst let's deal with the form elements — add the following CSS in between your [`<style>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style \"HTML的<style>元素包含了文档的样式化信息或者文档的一部分，该标签的样式信息通常是CSS的格式。\")tags:\n\n首先让我们处理表单元素 - 在style标签之间添加以下CSS：\n\n```css\nlabel[for=\"toggle\"] {\n  font-size: 3rem;\n  position: absolute;\n  top: 4px;\n  right: 5px;\n  z-index: 1;\n  cursor: pointer;\n}\n\ninput[type=\"checkbox\"] {\n  position: absolute;\n  top: -100px;\n}\n```\n\nThe first rule styles the `<label>`; here we've:\n\n*   Set a large [`font-size`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-size \"font-size CSS 属性指定字体的大小。因为该属性的值会被用于计算em和ex长度单位，定义该值可能改变其他元素的大小。\") to make the icon nice and big.\n*   Set [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") `absolute` on it, and used [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") and [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\") to position it nicely in the top-right corner.\n*   Set a [`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index \"z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。\") of 1 on it — this is so that when the info panel is styled and shown, it doesn't cover up the icon; instead the icon will sit on top of it so it can be pressed again to hide the info pane.\n*   Used the [`cursor`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor \"cursor CSS属性定义鼠标指针悬浮在元素上方显示的鼠标光标。\") property to change the mouse cursor when it is hovering over the icon to a hand pointer (like the one you see when links are hovered over), as an extra visual clue to users that the icon does something interesting.\n\nThe second rule sets [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") `absolute` on the actual checkbox `<input>` element, and hides it off the top of the screen. We don't actually want to see this on our UI.\n\n第一条label样式的规则，我们有：\n\n设置字体大小使图标更美观。\n\n设置为绝对定位，使用top属性和right属性来让他能很合适的位于右上角。\n\n设置z-index属性为1——因此当信息面板被赋予样式和显示的时候，不会覆盖我们的图标；相反图标依然会位于最上层能够再次被按下来隐藏信息平板。\n\n使用cursor属性来说改变鼠标的指针，当鼠标悬浮在图标上面的时候变成一个手形指针（就像你看到的当悬浮在链接上一样），作为一个额外的可视化线索告诉用户这个图标可以做一些有趣的事情。\n\n第二条规则是在实际的<input>checkbox元素上设置绝对定位属性，并隐藏在顶部的上面，我们并不希望在我们的用户界面里看到她。\n\n### Styling the panel\n\n### 设置面板的样式\n\nNow it's time to style the actual sliding panel itself. Add the following rule to the bottom of your CSS:\n\n现在是时候为实际的滑动面板设计风格了。在你的css底部添加下列规则：\n\n```css\naside {\n  background-color: #a60000;\n  color: white;\n\n  width: 340px;\n  height: 98%;\n  padding: 10px 1%;\n\n  position: fixed;\n  top: 0;\n  right: -370px;\n\n  transition: 0.6s all;\n}\n```\n\nThere's a lot going on here — let's discuss it bit by bit:\n\n*   First, we set some simple [`background-color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\") and [`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") on the info box.\n*   Next, we set a fixed [`width`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\") on the panel, and make its [`height`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/height) the entire height of the browser viewport.\n*   We also include some [`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\") to make up the width/height to the total value we want (this was necessary as we've not set `box-sizing: border-box;` on this example).\n*   Next we set [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")`: fixed;` on the panel so it will always appear in the same place, even if the page has content to scroll. We glue it to the [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") of the viewport, and set it so that by default it is offscreen to the [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\").\n*   Finally, we set a [`transition`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition \"transition CSS 属性是一个简写属性，用于 transition-property, transition-duration, transition-timing-function, 和 transition-delay。\") on the element. Transitions are an interesting feature that allow you to make changes between states happen smoothly, rather than just going \"on\", \"off\" abruptly. In this case we are intending to make the panel slide smoothly onscreen when the checkbox is checked. (Or to put it another way, when the question mark icon is clicked — remember, clicking the `<label>` will check the associated checkbox! We told you it was a hack.) You will learn a lot more about...\n\n这里有很多项——让我们一点一点讨论：\n\n首先，我们在信息盒子中设置了一些简单的背景颜色和颜色。\n\n然后，我们在面板上设置一个固定的宽度，让她的高度充满整个浏览器窗口的高度。\n\n我们同样包括一些内边距来组成我们小那个要的高度和宽度总体的值（如果我们没有设置box-sizing：border-box来说的话是很必要的，正如这个例子）\n\n然后，我们设置面板的定位为fixed，即使页面的内容在滚动，也总是显示在同一个位置。我们把设置top属性让窗口粘在顶部，然后设置默认情况下远离屏幕，设置right属性使其位于屏幕的右边。\n\n最后我们设置transition属性，Transitions是一个有意思的特性，允许你在状态改变的时候平滑的过渡，而不是粗暴的“变”或“还原”。在这个例子中我们尝试在checkbox被选中时让面板平滑的滑动到屏幕上。（或者换句话说，当问题标记图标被点击以后——记住，点击<label>标签也会选择相对应的checkbox！我们已经告诉你这是一种hack了）你将会学到更多。。。\n\n### Setting the checked state\n\n### 设置选择后的状态\n\nThere is one final bit of CSS to add — put the following at the bottom of your CSS:\n\n这是最后的css添加——把这些放到你的css底部:\n\n```css\ninput[type=checkbox]:checked + aside {\n  right: 0px;\n}\n```\n\nThe selector is pretty complex here — we are selecting the `<aside>` element adjacent to the `<input>` element, but only when it is checked (note the use of the [`:checked`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/:checked \":checked CSS 伪类选择器表示任何处于选中状态的radio(<input type=\"radio\">), checkbox (<input type=\"checkbox\">) 或(\"select\") 元素中的option HTML元素(\"option\")) 。用户通过点击元素或选择其他的值，可以改变该元素的 :checked 状态，并:checked属性赋给一个新的对象(例如其他的option值)。\") pseudo-class to achieve this). When this is the case, we are setting the [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\") property of the `<aside>` to `0px`, which causes the panel to appear on the screen again (smoothly due to the transition). Clicking the label again unchecks the checkbox, which hides the panel again.\n\n这里的选择器是复杂的——我们选择<input>元素邻接的<aside>元素，但是仅仅在他被选择（请注意使用checked伪类来实现此目的），在这种情况下，我们将right属性设置为0px，会造成面板再次出现在屏幕上（由于过渡属性会平滑的出现）。再一次点击这个标签会取消选中checkbox，面板将会跟着再一次消失。\n\nSo there you have it — a rather clever JavaScript-free way to create a toggling button effect. This will work in IE9 and above (the smooth transition will work in IE10 and above.) This effect does have some concerns — this is a bit of an abuse of form elements (they weren't intended for this purpose), and the effect is not great in terms of accessibilty — the label is not focusable by default, and the non-semantic use of the form elements could cause issues with screenreaders. JavaScript and a link or button might be more appropriate, but it is still fun to experiment with.\n\n所以你有它 ——一个相当巧妙的避免使用JavaScript来创建一个切换按钮效果方式。 这将在IE9及以上版本中起作用（平滑过渡将在IE10及更高版本中起作用）。这种效果确实有一些问题 ——这是有点滥用表单元素（它们不是为了这个目的），并且在可访问性方面效果不是很好 - 标签在默认情况下不可聚焦，并且表单元素的非语义使用可能会导致屏幕朗读器出现问题。 JavaScript和链接或按钮可能更合适，但这样的实验仍然很有趣。\n\n## 总结[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E6%80%BB%E7%BB%93)\n\n这样完成了我们对定位的关注——现在，你应该理解基本机制的工作原理，同样理解了怎样应用这些知识去构建一些有趣的用户界面功能，不要由于你还未完全理解所有的知识而担心——定位是一个相当高级的话题，你可以随时读这篇文章来帮助你的理解。下一个主题我们将转向Flexbox。\n\n[ 上一页](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning)[ Overview: CSS layout](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)[下一页 ](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox)\n\n## 文档标签和贡献者\n\n **标签：**  \n\n*   [选项卡](https://developer.mozilla.org/zh-CN/docs/tag/%E9%80%89%E9%A1%B9%E5%8D%A1)\n\n **此页面的贡献者：** [saifeiLee](https://developer.mozilla.org/zh-CN/profiles/saifeiLee), [Yangxulei](https://developer.mozilla.org/zh-CN/profiles/Yangxulei), [xp44mm](https://developer.mozilla.org/zh-CN/profiles/xp44mm), [ddtyjmyjm](https://developer.mozilla.org/zh-CN/profiles/ddtyjmyjm), [wsy](https://developer.mozilla.org/zh-CN/profiles/wsy), [1986slayer](https://developer.mozilla.org/zh-CN/profiles/1986slayer)\n\n **最后编辑者:** [saifeiLee](https://developer.mozilla.org/zh-CN/profiles/saifeiLee), Jun 2, 2018, 2:21:06 AM\n\n1.  [学习 Web 开发 ](https://developer.mozilla.org/zh-CN/docs/learn)\n2.  [CSS ](https://developer.mozilla.org/zh-CN/docs/Learn/CSS)\n3.  [CSS 布局](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n4.  定位实例练习\n\n相关主题\n\n1.  [**新手请从这开始！**](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web)\n2.  [Web 入门](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web)\n3.  [**HTML — 构建 Web**](https://developer.mozilla.org/zh-CN/docs/Learn/HTML)\n4.  [HTML 介绍](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML)\n5.  [多媒体与嵌入](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding)\n6.  [HTML 表格](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Tables)\n7.  [HTML 表单](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms)\n8.  [**CSS — 设计 Web**](https://developer.mozilla.org/zh-CN/docs/Learn/CSS)\n9.  [CSS 介绍](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS)\n10.  [样式化文字](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Styling_text)\n11.  [样式化区块](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Styling_boxes)\n12.  [CSS 排版概述](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n    1.  [CSS 版面配置概述](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n    2.  [介绍](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction)\n    3.  [浮动](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats)\n    4.  [定位](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning)\n    5.  [实际定位示例](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples)\n    6.  [弹性区块](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox)\n    7.  [网格](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids)\n13.  [**JavaScript — 用户端动态脚本**](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript)\n14.  [JavaScript 第一步](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps)\n15.  [JavaScript 基础要件](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Building_blocks)\n16.  [JavaScript 对象介绍](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects)\n17.  [客户端网页 API](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs)\n18.  [**可访问性 — 使每个人都能使用 Web**](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility)\n19.  [可访问性指南](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility)\n20.  [可访问性测评](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility)\n21.  [**工具与测试**](https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing)\n22.  [跨浏览器测试](https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing)\n23.  [**服务端网页编程**](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side)\n24.  [第一步](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/First_steps)\n25.  [Django 网站框架 (Python)](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Django)\n26.  [Express 网页框架 (node.js/JavaScript)](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs)\n27.  [**更多资源**](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#)\n28.  [高级学习材料](https://developer.mozilla.org/zh-CN/docs/Learn/Other_learning_material)\n29.  [常见问题](https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions)\n30.  [如何贡献](https://developer.mozilla.org/zh-CN/docs/Learn/How_to_contribute)\n\n这篇文章需要如下复核：\n\n*   [x] 文法 - 措辞、语法或内容。[能来帮忙吗？](https://developer.mozilla.org/docs/MDN/Contribute/Howto/Do_an_editorial_review)\n\n保存\n\n## 学习 Web 开发的最佳实践\n\n让 MDN 将最新、最棒的内容直接投递到您的邮箱。\n\n目前仅提供英文版新闻报。\n\n电子邮件地址\n\n立即注册\n\n隐藏新闻报注册\n\n[MDN Web 文档](https://developer.mozilla.org/zh-CN/)\n\n## MDN\n\n*   [网络技术](https://developer.mozilla.org/zh-CN/docs/Web)\n*   [了解 Web 开发](https://developer.mozilla.org/zh-CN/docs/Learn)\n*   [关于 MDN](https://developer.mozilla.org/docs/MDN/About)\n*   [反馈](https://developer.mozilla.org/zh-CN/docs/MDN/Feedback)\n*   [](https://twitter.com/mozdevnet)\n\n*   [](https://github.com/mdn/)\n\n[Mozilla](https://mozilla.org/)\n\n## Mozilla\n\n*   [关于](https://www.mozilla.org/about/)\n*   [联系我们](https://www.mozilla.org/contact/)\n*   [Firefox](https://www.mozilla.org/firefox/?utm_source=developer.mozilla.org&utm_campaign=footer&utm_medium=referral)\n*   [](https://twitter.com/mozilla)\n\n*   [](https://www.facebook.com/mozilla)\n\n*   [](https://www.instagram.com/mozillagram/)\n\n其他语言：                    中文 (简体) (zh-CN)                                          English (US) (en-US)                                   Català (ca)                                   Русский (ru)                  \n\n*   [条款](https://www.mozilla.org/about/legal/terms/mozilla)\n\n*   [隐私](https://www.mozilla.org/privacy/websites/)\n\n*   [Cookie](https://www.mozilla.org/privacy/websites/#cookies)\n\n© 2005-2018 Mozilla 及各贡献者\n\n内容可按[这些许可协议](https://developer.mozilla.org/en-US/docs/MDN/About#Copyrights_and_licenses)使用。"]],[0,0],[37962,37962]]],[1528120028454,["Administrator@Tielemao",[[-1,19,"*   [跳转至主要内容](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#content)\n*   [选择语言](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#language)\n*   [跳到搜索](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#q)\n\n[MDN Web 文档](https://developer.mozilla.org/zh-CN/)\n\n*   [技术 ](https://developer.mozilla.org/zh-CN/docs/Web)\n\n*   [参考和指引 ](https://developer.mozilla.org/zh-CN/docs/Learn)\n\n*   [反馈 ](https://developer.mozilla.org/zh-CN/docs/MDN/Feedback)\n\n*   [工具](https://developer.mozilla.org/zh-CN/docs/MDN/Doc_status)\n\n*   [![tielemao](https://secure.gravatar.com/avatar/3a050999822a572365d53f7c3808f1a0?s=50&r=pg&d=https%3A%2F%2Fdeveloper.mozilla.org%2Fstatic%2Fimg%2Favatar.png) ](https://developer.mozilla.org/zh-CN/profiles/tielemao)\n\n搜索搜索\n\n*   语言\n\n*   [ 编辑](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit)\n\n*   关注\n\n*   高级\n\n[Learn web development](https://developer.mozilla.org/en-US/docs/Learn)\n"],[-1,1115," "],[1,1116," "],[-1,1196," "],[1,1197," "],[-1,1285," "],[1,1286," "],[-1,2073," "],[1,2074," "],[-1,2185," "],[1,2186," "],[-1,2591," "],[1,2592," "],[-1,2765," "],[1,2766," "],[-1,4467," "],[1,4468," "],[-1,4528," "],[1,4529," "],[-1,4548," "],[1,4549," "],[-1,4640," "],[1,4641," "],[-1,4653," "],[1,4654," "],[-1,4762," "],[1,4763," "],[-1,4784," 和一个 "],[1,4789," 和一个 "],[-1,4878," "],[1,4879," "],[-1,4954," "],[1,4955," "],[-1,4960," 或 "],[1,4963," 或 "],[-1,5019," "],[1,5020," "],[-1,5035," "],[1,5036," "],[-1,5090," "],[1,5091," "],[-1,5096," "],[1,5097," "],[-1,5286," "],[1,5287," "],[-1,5464," "],[1,5465," "],[-1,5905," "],[1,5906," "],[-1,5992," "],[1,5993," "],[-1,6014," "],[1,6015," "],[-1,6058," "],[1,6059," "],[-1,6064," "],[1,6065," "],[-1,6180," "],[1,6181," "],[-1,6187," "],[1,6188," "],[-1,6193," "],[1,6194," "],[-1,6327," "],[1,6328," "],[-1,6344," "],[1,6345," "],[-1,6886," "],[1,6887," "],[-1,6897," "],[1,6898," "],[-1,7016," "],[1,7017," "],[-1,7028," "],[1,7029," "],[-1,7340," "],[1,7341," "],[-1,7347," "],[1,7348," "],[-1,7483," "],[1,7484," "],[-1,7491," "],[1,7492," "],[-1,7511," "],[1,7512," "],[-1,7585," <a> 元素 "],[1,7593," <a> 元素 "],[-1,7646," "],[1,7647," "],[-1,7762," "],[1,7763," "],[-1,7770," "],[1,7771," "],[-1,7816," "],[1,7817," "],[-1,7826," "],[1,7827," "],[-1,8188," "],[1,8189," "],[-1,8197," 和 "],[1,8200," 和 "],[-1,8208," "],[1,8209," "],[-1,8259," "],[1,8260," "],[-1,8267," ）出现 "],[1,8272," ）出现 "],[-1,8280," "],[1,8281," "],[-1,8574," "],[1,8575," "],[-1,8584," "],[1,8585," "],[-1,8674," "],[1,8675," "],[-1,8750," "],[1,8751," "],[-1,8756," 或 "],[1,8759," 或 "],[-1,8815," "],[1,8816," "],[-1,8831," "],[1,8832," "],[-1,8842," "],[1,8843," "],[-1,9001," "],[1,9002," "],[-1,9024," "],[1,9025," "],[-1,9035," 设置 "],[1,9039," 设置 "],[-1,9128," "],[1,9129," "],[-1,9204," "],[1,9205," "],[-1,9210," 或 "],[1,9213," 或 "],[-1,9269," "],[1,9270," "],[-1,9285," "],[1,9286," "],[-1,9296," "],[1,9297," "],[-1,9406," "],[1,9407," "],[-1,9549," "],[1,9550," "],[-1,9759," "],[1,9760," "],[-1,9945," "],[1,9946," "],[-1,10067," "],[1,10068," "],[-1,10143," "],[1,10144," "],[-1,10149," 或 "],[1,10152," 或 "],[-1,10208," "],[1,10209," "],[-1,10224," "],[1,10225," "],[-1,10759," "],[1,10760," "],[-1,10776," "],[1,10777," "],[-1,10842," "],[1,10843," "],[-1,10850," ）为（ "],[1,10855," ）为（ "],[-1,10869," "],[1,10870," "],[-1,10954," "],[1,10955," "],[-1,11080," "],[1,11081," "],[-1,11090," "],[1,11091," "],[-1,11505," "],[1,11506," "],[-1,12265," "],[1,12266," "],[-1,12272," 和 "],[1,12275," 和 "],[-1,12312," "],[1,12313," "],[-1,12318," "],[1,12319," "],[-1,12358," "],[1,12359," "],[-1,12386," "],[1,12387," "],[-1,12391," "],[1,12392," "],[-1,12411," "],[1,12412," "],[-1,12424," "],[1,12425," "],[-1,12443," "],[1,12444," "],[-1,12461," "],[1,12462," "],[-1,12486," "],[1,12487," "],[-1,12496," "],[1,12497," "],[-1,12586," "],[1,12587," "],[-1,12592," "],[1,12593," "],[-1,12694," "],[1,12695," "],[-1,12702," of "],[1,12706," of "],[-1,12714," "],[1,12715," "],[-1,12845," "],[1,12846," "],[-1,13199," and "],[1,13204," and "],[-1,13299," "],[1,13300," "],[-1,13316," "],[1,13317," "],[-1,13361," "],[1,13362," "],[-1,13413," "],[1,13414," "],[-1,13419," "],[1,13420," "],[-1,13532," "],[1,13533," "],[-1,13547," "],[1,13548," "],[-1,13703," "],[1,13704," "],[-1,13781," "],[1,13782," "],[-1,13884," "],[1,13885," "],[-1,15354," "],[1,15355," "],[-1,15478," "],[1,15479," "],[-1,15861," "],[1,15862," "],[-1,15987," "],[1,15988," "],[-1,16100," "],[1,16101," "],[-1,16203," "],[1,16204," "],[-1,16375," "],[1,16376," "],[-1,16421," "],[1,16422," "],[-1,16445," "],[1,16446," "],[-1,16561," "],[1,16562," "],[-1,16568," "],[1,16569," "],[-1,16574," "],[1,16575," "],[-1,17696," "],[1,17697," "],[-1,17708," "],[1,17709," "],[-1,17727," "],[1,17728," "],[-1,17745," "],[1,17746," "],[-1,17792," "],[1,17793," "],[-1,17915," "],[1,17916," "],[-1,17969," "],[1,17970," "],[-1,18082," "],[1,18083," "],[-1,18740," "],[1,18741," "],[-1,18836," "],[1,18837," "],[-1,18853," "],[1,18854," "],[-1,18899," "],[1,18900," "],[-1,19258," "],[1,19259," "],[-1,19388," "],[1,19389," "],[-1,19436," "],[1,19437," "],[-1,19526,"  属性 "],[1,19531,"  属性 "],[-1,19561," "],[1,19562," "],[-1,20867," "],[1,20868," "],[-1,20997," "],[1,20998," "],[-1,21308," "],[1,21309," "],[-1,21464," "],[1,21465," "],[-1,22085," "],[1,22086," "],[-1,22185," "],[1,22186," "],[-1,22200," "],[1,22201," "],[-1,22282," "],[1,22283," "],[-1,22290," "],[1,22291," "],[-1,22326," "],[1,22327," "],[-1,22336," "],[1,22337," "],[-1,22554," "],[1,22555," "],[-1,22564," "],[1,22565," "],[-1,22583," "],[1,22584," "],[-1,22589," and "],[1,22594," and "],[-1,22598," "],[1,22599," "],[-1,23101," "],[1,23102," "],[-1,23111," "],[1,23112," "],[-1,23252," "],[1,23253," "],[-1,23437," "],[1,23438," "],[-1,23673," "],[1,23674," "],[-1,24182," "],[1,24183," "],[-1,24581," "],[1,24582," "],[-1,24621," "],[1,24622," "],[-1,24709," "],[1,24710," "],[-1,24761," "],[1,24762," "],[-1,24800," "],[1,24801," "],[-1,24923," "],[1,24924," "],[-1,24946," "],[1,24947," "],[-1,24957," "],[1,24958," "],[-1,24973," "],[1,24974," "],[-1,25086," and "],[1,25091," and "],[-1,25209," "],[1,25210," "],[-1,25266," "],[1,25267," "],[-1,25344," "],[1,25345," "],[-1,25447," "],[1,25448," "],[-1,25649," "],[1,25650," "],[-1,25753," "],[1,25754," "],[-1,25990," "],[1,25991," "],[-1,26113," "],[1,26114," "],[-1,26136," "],[1,26137," "],[-1,26147," "],[1,26148," "],[-1,26170," "],[1,26171," "],[-1,26180," "],[1,26181," "],[-1,27043," "],[1,27044," "],[-1,27139," "],[1,27140," "],[-1,27156," "],[1,27157," "],[-1,27201," and "],[1,27206," and "],[-1,27559," "],[1,27560," "],[-1,27601," "],[1,27602," "],[-1,27721," "],[1,27722," "],[-1,27748," "],[1,27749," "],[-1,27816," "],[1,27817," "],[-1,27884," "],[1,27885," "],[-1,28014," "],[1,28015," "],[-1,28106," "],[1,28107," "],[-1,28132," "],[1,28133," "],[-1,28166," "],[1,28167," "],[-1,28289," "],[1,28290," "],[-1,28322," "],[1,28323," "],[-1,28437," "],[1,28438," "],[-1,28550," "],[1,28551," "],[-1,28620," "],[1,28621," "],[-1,28762," "],[1,28763," "],[-1,28849," CSS "],[1,28854," CSS "],[-1,28866," "],[1,28867," "],[-1,28958," "],[1,28959," "],[-1,29314," "],[1,29315," "],[-1,29324," "],[1,29325," "],[-1,30159," "],[1,30160," "],[-1,30169," "],[1,30170," "],[-1,30193," "],[1,30194," "],[-1,30203," "],[1,30204," "],[-1,30261," "],[1,30262," "],[-1,30438," "],[1,30439," "],[-1,30449," "],[1,30450," "],[-1,30467," "],[1,30468," "],[-1,30542," "],[1,30543," "],[-1,30615," "],[1,30616," "],[-1,30734," "],[1,30735," "],[-1,30750," "],[1,30751," "],[-1,30760," to "],[1,30764," to "],[-1,32155," "],[1,32156," "],[-1,32236," "],[1,32237," "],[-1,32325," "],[1,32326," "],[-1,32413," "],[1,32414," "],[-1,32421,"  "],[1,32423,"  "],[-1,32510," "],[1,32511," "],[-1,32523," "],[1,32524," "],[-1,32592," "],[1,32593," "],[-1,32661," "],[1,32662," "],[-1,32724," "],[1,32725," "],[-1,32793," "],[1,32794," "],[-1,32850," "],[1,32851," "],[-1,32922," "],[1,32923," "],[-1,32933," "],[1,32934," "],[-1,33002," "],[1,33003," "],[-1,33042," "],[1,33043," "],[-1,33101," "],[1,33102," "],[-1,37455,"                    "],[1,37475,"                    "],[-1,37490,"                                          "],[1,37532,"                                          "],[-1,37552,"                                   "],[1,37587,"                                   "],[-1,37598,"                                   "],[1,37633,"                                   "],[-1,37645,"                  "],[1,37663,"                  "]],[19,1093],[19,19]]],[1528120028570,["Administrator@Tielemao",[[-1,19,"\n"]],[19,19],[18,18]]],[1528120042353,["Administrator@Tielemao",[[-1,29,"翻译正在进行中。\n\n[ 上一页](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning)[ Overview: CSS layout](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)[下一页 ](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox)\n\n掌握了上一篇文章中的定位的基础知识，我们将着眼于实现一些现实中的例子，来演示你能用定位来做什么。\n\n| \n\n预备知识：\n\n | \n\nHTML基础(学习[Introduction to HTML](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML)),和CSS怎么工作的 (学习[Introduction to CSS](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS).)\n\n |\n| \n\n目标：\n\n | \n\n了解定位的实例\n\n |\n"]],[29,597],[29,29]]],[1528120046556,["Administrator@Tielemao",[[-1,19,"# 定位实例练习\n"]],[19,28],[19,19]]],[1528120047677,["Administrator@Tielemao",[[-1,20,"\n"]],[20,20],[19,19]]],[1528120047908,["Administrator@Tielemao",[[-1,19,"\n"]],[19,19],[18,18]]],[1528120048186,["Administrator@Tielemao",[[-1,18,"\n"]],[18,18],[17,17]]],[1528120053093,["Administrator@Tielemao",[[-1,27,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E5%88%97%E8%A1%A8%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90)"]],[27,187],[27,27]]],[1528120088293,["Administrator@Tielemao",[[-1,30339,"[ 上一页](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning)[ Overview: CSS layout](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)[下一页 ](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox)\n\n## 文档标签和贡献者\n\n **标签：**  \n\n*   [选项卡](https://developer.mozilla.org/zh-CN/docs/tag/%E9%80%89%E9%A1%B9%E5%8D%A1)\n\n **此页面的贡献者：** [saifeiLee](https://developer.mozilla.org/zh-CN/profiles/saifeiLee), [Yangxulei](https://developer.mozilla.org/zh-CN/profiles/Yangxulei), [xp44mm](https://developer.mozilla.org/zh-CN/profiles/xp44mm), [ddtyjmyjm](https://developer.mozilla.org/zh-CN/profiles/ddtyjmyjm), [wsy](https://developer.mozilla.org/zh-CN/profiles/wsy), [1986slayer](https://developer.mozilla.org/zh-CN/profiles/1986slayer)\n\n **最后编辑者:** [saifeiLee](https://developer.mozilla.org/zh-CN/profiles/saifeiLee), Jun 2, 2018, 2:21:06 AM\n\n1.  [学习 Web 开发 ](https://developer.mozilla.org/zh-CN/docs/learn)\n2.  [CSS ](https://developer.mozilla.org/zh-CN/docs/Learn/CSS)\n3.  [CSS 布局](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n4.  定位实例练习\n\n相关主题\n\n1.  [**新手请从这开始！**](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web)\n2.  [Web 入门](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web)\n3.  [**HTML — 构建 Web**](https://developer.mozilla.org/zh-CN/docs/Learn/HTML)\n4.  [HTML 介绍](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML)\n5.  [多媒体与嵌入](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding)\n6.  [HTML 表格](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Tables)\n7.  [HTML 表单](https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms)\n8.  [**CSS — 设计 Web**](https://developer.mozilla.org/zh-CN/docs/Learn/CSS)\n9.  [CSS 介绍](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS)\n10.  [样式化文字](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Styling_text)\n11.  [样式化区块](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Styling_boxes)\n12.  [CSS 排版概述](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n    1.  [CSS 版面配置概述](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n    2.  [介绍](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction)\n    3.  [浮动](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats)\n    4.  [定位](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning)\n    5.  [实际定位示例](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples)\n    6.  [弹性区块](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox)\n    7.  [网格](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids)\n13.  [**JavaScript — 用户端动态脚本**](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript)\n14.  [JavaScript 第一步](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps)\n15.  [JavaScript 基础要件](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Building_blocks)\n16.  [JavaScript 对象介绍](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects)\n17.  [客户端网页 API](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs)\n18.  [**可访问性 — 使每个人都能使用 Web**](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility)\n19.  [可访问性指南](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility)\n20.  [可访问性测评](https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility)\n21.  [**工具与测试**](https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing)\n22.  [跨浏览器测试](https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing)\n23.  [**服务端网页编程**](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side)\n24.  [第一步](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/First_steps)\n25.  [Django 网站框架 (Python)](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Django)\n26.  [Express 网页框架 (node.js/JavaScript)](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs)\n27.  [**更多资源**](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#)\n28.  [高级学习材料](https://developer.mozilla.org/zh-CN/docs/Learn/Other_learning_material)\n29.  [常见问题](https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions)\n30.  [如何贡献](https://developer.mozilla.org/zh-CN/docs/Learn/How_to_contribute)\n\n这篇文章需要如下复核：\n\n*   [x] 文法 - 措辞、语法或内容。[能来帮忙吗？](https://developer.mozilla.org/docs/MDN/Contribute/Howto/Do_an_editorial_review)\n\n保存\n\n## 学习 Web 开发的最佳实践\n\n让 MDN 将最新、最棒的内容直接投递到您的邮箱。\n\n目前仅提供英文版新闻报。\n\n电子邮件地址\n\n立即注册\n\n隐藏新闻报注册\n\n[MDN Web 文档](https://developer.mozilla.org/zh-CN/)\n\n## MDN\n\n*   [网络技术](https://developer.mozilla.org/zh-CN/docs/Web)\n*   [了解 Web 开发](https://developer.mozilla.org/zh-CN/docs/Learn)\n*   [关于 MDN](https://developer.mozilla.org/docs/MDN/About)\n*   [反馈](https://developer.mozilla.org/zh-CN/docs/MDN/Feedback)\n*   [](https://twitter.com/mozdevnet)\n\n*   [](https://github.com/mdn/)\n\n[Mozilla](https://mozilla.org/)\n\n## Mozilla\n\n*   [关于](https://www.mozilla.org/about/)\n*   [联系我们](https://www.mozilla.org/contact/)\n*   [Firefox](https://www.mozilla.org/firefox/?utm_source=developer.mozilla.org&utm_campaign=footer&utm_medium=referral)\n*   [](https://twitter.com/mozilla)\n\n*   [](https://www.facebook.com/mozilla)\n\n*   [](https://www.instagram.com/mozillagram/)\n\n其他语言：                    中文 (简体) (zh-CN)                                          English (US) (en-US)                                   Català (ca)                                   Русский (ru)                  \n\n*   [条款](https://www.mozilla.org/about/legal/terms/mozilla)\n\n*   [隐私](https://www.mozilla.org/privacy/websites/)\n\n*   [Cookie](https://www.mozilla.org/privacy/websites/#cookies)\n\n© 2005-2018 Mozilla 及各贡献者\n\n内容可按[这些许可协议](https://developer.mozilla.org/en-US/docs/MDN/About#Copyrights_and_licenses)使用。"]],[30339,36147],[30339,30339]]],[1528120094138,["Administrator@Tielemao",[[-1,30079,"结[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E6%80%BB%E7%BB%93)"]],[30080,30204],[30079,30079]]],[1528120096944,["Administrator@Tielemao",[[1,30079,"结"]],[30079,30079],[30080,30080]]],[1528120110437,["Administrator@Tielemao",[[-1,12694,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E4%B8%80%E4%B8%AA%E5%9B%BA%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%88%97%E8%A1%A8%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90)"]],[12694,12917],[12694,12694]]],[1528120115783,["Administrator@Tielemao",[[-1,12538,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#A_fixed_position_tabbed_info-box)"]],[12538,12676],[12538,12538]]],[1528120119153,["Administrator@Tielemao",[[-1,12539,"\n"]],[12539,12539],[12538,12538]]],[1528120173184,["Administrator@Tielemao",[[-1,171,"![](https://mdn.mozillademos.org/files/13368/tabbed-info-box.png)"]],[171,236],[171,171]]],[1528120178795,["Administrator@Tielemao",[[1,172,"![tabbed-info-box]($res/tabbed-info-box.png)\n\n"]],[171,171],[217,217]]],[1528120180994,["Administrator@Tielemao",[[-1,171,"\n"]],[171,171],[170,170]]],[1528120182063,["Administrator@Tielemao",[[-1,217,"\n"]],[217,217],[216,216]]],[1528120190639,["Administrator@Tielemao",[[1,224," "]],[224,224],[225,225]]],[1528120205657,["Administrator@Tielemao",[[1,716," "]],[716,716],[717,717]]],[1528120462871,["Administrator@Tielemao",[[-1,2462,"["]],[2463,2463],[2462,2462]]],[1528120471155,["Administrator@Tielemao",[[-1,2473,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\")"]],[2473,2678],[2473,2473]]],[1528120475254,["Administrator@Tielemao",[[-1,2509,"["]],[2510,2510],[2509,2509]]],[1528120489245,["Administrator@Tielemao",[[-1,2515,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul \"The HTML <ul> 元素 ( 或 HTML 无序列表元素） 代表多项的无序列表，即无数值排序项的集合，且它们在列表中的顺序是没有意义的。通常情况下，无序列表项的头部可以是几种形式，如一个点，一个圆形或方形。头部的风格并不是在页面的HTML描述定义, 但在其相关的CSS 可以用 list-style-type 属性。\")"]],[2515,2743],[2515,2515]]],[1528120492681,["Administrator@Tielemao",[[-1,2520,"["]],[2521,2521],[2520,2520]]],[1528120499193,["Administrator@Tielemao",[[-1,2527,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[2527,2776],[2527,2527]]],[1528120504241,["Administrator@Tielemao",[[-1,2582,"["]],[2583,2583],[2582,2582]]],[1528120522370,["Administrator@Tielemao",[[-1,2593,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article \""]],[2593,2662],[2593,2593]]],[1528120527158,["Administrator@Tielemao",[[1,2593," ‘"]],[2593,2593],[2595,2595]]],[1528120530574,["Administrator@Tielemao",[[1,2604,"’"]],[2604,2604],[2605,2605]]],[1528120533783,["Administrator@Tielemao",[[-1,2604,"’"]],[2605,2605],[2604,2604]]],[1528120538634,["Administrator@Tielemao",[[1,2604,"`"]],[2604,2604],[2605,2605]]],[1528120539700,["Administrator@Tielemao",[[-1,2604,"`"]],[2605,2605],[2604,2604]]],[1528120542442,["Administrator@Tielemao",[[1,2604,"`"]],[2604,2604],[2605,2605]]],[1528120545446,["Administrator@Tielemao",[[-1,2594,"‘"]],[2595,2595],[2594,2594]]],[1528120545955,["Administrator@Tielemao",[[1,2594,"`"]],[2594,2594],[2595,2595]]],[1528120547693,["Administrator@Tielemao",[[1,2594,"("]],[2594,2594],[2595,2595]]],[1528120554145,["Administrator@Tielemao",[[-1,2699,"\""]],[2700,2700],[2699,2699]]],[1528120597117,["Administrator@Tielemao",[[-1,3040,"["]],[3041,3041],[3040,3040]]],[1528120600443,["Administrator@Tielemao",[[-1,3049,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style \"HTML的<style>元素包含了文档的样式化信息或者文档的一部分，该标签的样式信息通常是CSS的格式。\")"]],[3049,3170],[3049,3049]]],[1528120799243,["Administrator@Tielemao",[[-1,3357,"["]],[3358,3358],[3357,3357]]],[1528120803694,["Administrator@Tielemao",[[-1,3365,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\")"]],[3365,3484],[3365,3365]]],[1528120918191,["Administrator@Tielemao",[[-1,3725,"["]],[3726,3726],[3725,3725]]],[1528120923571,["Administrator@Tielemao",[[-1,3739,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding-left \"CSS属性 padding-left 是指一个元素在内边距区域（padding area）中左边的宽度。内边距（padding）是指一个元素的内容和边框之间的区域。和外边距（margin）不同，内边距（padding）是不允许有负值的。内边距（padding）可以用四个值声明一个元素的四个方向的内边距（paddings），这是一种CSS缩写属性。\")"]],[3739,3980],[3739,3739]]],[1528120925330,["Administrator@Tielemao",[[-1,3740,"["]],[3741,3741],[3740,3740]]],[1528120932663,["Administrator@Tielemao",[[-1,3752,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin-top \" margin-top 属性用来设置元素的顶部外边距，你也可以使用负值。\")"]],[3752,3853],[3752,3752]]],[1528121003927,["Administrator@Tielemao",[[1,3828," "]],[3828,3828],[3829,3829]]],[1528121046355,["Administrator@Tielemao",[[-1,3951,"["]],[3952,3952],[3951,3951]]],[1528121061380,["Administrator@Tielemao",[[-1,3968,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type \"属性 list-style-type 指定一个列表元素的外观。因为<li> 的display默认值是 list-item, 所以display:list-item 通常是一个<li>元素，不过任何其他元素的display也都可以取list-item值。\")"]],[3968,4164],[3968,3968]]],[1528121067275,["Administrator@Tielemao",[[-1,3992,"["]],[3993,3993],[3992,3992]]],[1528121073191,["Administrator@Tielemao",[[-1,3999,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\")"]],[3999,4110],[3999,3999]]],[1528121077300,["Administrator@Tielemao",[[-1,4032,"["]],[4033,4033],[4032,4032]]],[1528121081788,["Administrator@Tielemao",[[-1,4037,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a \"HTML <a> 元素  (或锚元素) 可以创建一个到其他网页、文件、同一页面内的位置、电子邮件地址或任何其他URL的超链接。\") "]],[4037,4166],[4037,4037]]],[1528121085397,["Administrator@Tielemao",[[-1,4043,"["]],[4044,4044],[4043,4043]]],[1528121089786,["Administrator@Tielemao",[[-1,4052,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display \"display CSS属性指定用于元素的呈现框的类型。在 HTML 中，默认的 display 属性取决于 HTML 规范所描述的行为或浏览器/用户的默认样式表。在 XML中，其默认值为 inline。\")"]],[4052,4215],[4052,4052]]],[1528121815739,["Administrator@Tielemao",[[-1,4811,"["]],[4812,4812],[4811,4811]]],[1528121821698,["Administrator@Tielemao",[[-1,4818,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[4818,5067],[4818,4818]]],[1528121824885,["Administrator@Tielemao",[[-1,4855,"["]],[4856,4856],[4855,4855]]],[1528121831420,["Administrator@Tielemao",[[-1,4865,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") "]],[4865,5000],[4865,4865]]],[1528121833053,["Administrator@Tielemao",[[1,4865," "]],[4865,4865],[4866,4866]]],[1528121835973,["Administrator@Tielemao",[[-1,4880,"["]],[4881,4881],[4880,4880]]],[1528121840734,["Administrator@Tielemao",[[-1,4887,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\") "]],[4887,5137],[4887,4887]]],[1528121843638,["Administrator@Tielemao",[[-1,4917,"["]],[4918,4918],[4917,4917]]],[1528121847949,["Administrator@Tielemao",[[-1,4925,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/html \"HTML <html> 元素 表示一个HTML文档的根（顶级元素），所所以它也被称为根元素。其他所有其他元素必须是此元素的后代。\")"]],[4925,5057],[4925,4925]]],[1528121850237,["Administrator@Tielemao",[[-1,4935,"["]],[4936,4936],[4935,4935]]],[1528121856379,["Administrator@Tielemao",[[-1,4942,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/clear \"clear CSS 属性指定一个元素是否可以在它之前的浮动元素旁边，或者必须向下移动(清除浮动) 在它的下面。clear 属性适用于浮动和非浮动元素。\")"]],[4942,5077],[4942,4942]]],[1528121974138,["Administrator@Tielemao",[[-1,5081,"["]],[5082,5082],[5081,5081]]],[1528121978216,["Administrator@Tielemao",[[-1,5092,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article \"<article>元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。\") "]],[5092,5266],[5092,5092]]],[1528121980695,["Administrator@Tielemao",[[-1,5124,"["]],[5125,5125],[5124,5124]]],[1528121999881,["Administrator@Tielemao",[[-1,5131,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[5131,5380],[5131,5131]]],[1528122002992,["Administrator@Tielemao",[[-1,5199,"["]],[5200,5200],[5199,5199]]],[1528122007653,["Administrator@Tielemao",[[-1,5206,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\")"]],[5206,5551],[5206,5206]]],[1528122009937,["Administrator@Tielemao",[[-1,5214,"["]],[5215,5215],[5214,5214]]],[1528122013814,["Administrator@Tielemao",[[-1,5232,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\")"]],[5232,5370],[5232,5232]]],[1528122020085,["Administrator@Tielemao",[[-1,5288,"["]],[5289,5289],[5288,5288]]],[1528122023654,["Administrator@Tielemao",[[-1,5297,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index \"z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。\")"]],[5297,5467],[5297,5297]]],[1528122288841,["Administrator@Tielemao",[[-1,5653,"["]],[5654,5654],[5653,5653]]],[1528122293428,["Administrator@Tielemao",[[-1,5663,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script \"HTML <script> 元素用于嵌入或引用可执行脚本。\")"]],[5663,5762],[5663,5663]]],[1528123043971,["Administrator@Tielemao",[[-1,6986,"["]],[6987,6987],[6986,6986]]],[1528123048302,["Administrator@Tielemao",[[-1,6993,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\") "]],[6993,7339],[6993,6993]]],[1528123050271,["Administrator@Tielemao",[[1,6993," "]],[6993,6993],[6994,6994]]],[1528123052996,["Administrator@Tielemao",[[-1,6998,"["]],[6999,6999],[6998,6998]]],[1528123056861,["Administrator@Tielemao",[[-1,7016,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\")"]],[7016,7154],[7016,7016]]],[1528123064108,["Administrator@Tielemao",[[-1,7359,"["]],[7360,7360],[7359,7359]]],[1528123069387,["Administrator@Tielemao",[[-1,7368,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index \"z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。\")"]],[7368,7538],[7368,7368]]],[1528123087255,["Administrator@Tielemao",[[1,7612,"."]],[7612,7612],[7613,7613]]],[1528123088328,["Administrator@Tielemao",[[-1,7612,"."]],[7613,7613],[7612,7612]]],[1528123088990,["Administrator@Tielemao",[[1,7612,"。"]],[7612,7612],[7613,7613]]],[1528123309108,["Administrator@Tielemao",[[1,7803,"\n"]],[7801,7801],[7802,7802]]],[1528123309323,["Administrator@Tielemao",[[1,7804,"\n"]],[7802,7802],[7803,7803]]],[1528123314157,["Administrator@Tielemao",[[1,7803,"效果如下："]],[7803,7803],[7808,7808]]],[1528123314423,["Administrator@Tielemao",[[1,7810,"\n"]],[7808,7808],[7809,7809]]],[1528123329186,["Administrator@Tielemao",[[1,7810,"![css-position06]($res/css-position06.gif)\n\n"]],[7809,7809],[7853,7853]]],[1528125129530,["Administrator@Tielemao",[[-1,7909,"In our second example, we will take our first example — our info-box — and add it into the context of a full web page. But not only that — we'll give it fixed position so that it stays in the same position in the browser window. When the main content scrolls, the info-box will stay in the same position on the screen. Our finished example will look like this:"]],[7909,8269],[7909,7909]]],[1528125131683,["Administrator@Tielemao",[[-1,7910,"\n"]],[7910,7910],[7909,7909]]],[1528125134031,["Administrator@Tielemao",[[-1,7855,"## A fixed position tabbed info-box"]],[7855,7890],[7855,7855]]],[1528125134837,["Administrator@Tielemao",[[-1,7855,"\n"]],[7855,7855],[7854,7854]]],[1528125135886,["Administrator@Tielemao",[[-1,7873,"\n"]],[7873,7873],[7872,7872]]],[1528125136689,["Administrator@Tielemao",[[-1,7854,"\n"]],[7854,7854],[7853,7853]]],[1528125185192,["Administrator@Tielemao",[[1,7526,"* "]],[7526,7526],[7528,7528]]],[1528125204644,["Administrator@Tielemao",[[-1,7427,"That's it for the first example. Keep your code open, as we'll be adding to it in the second one.\n\n"]],[7426,7525],[7426,7426]]],[1528125223283,["Administrator@Tielemao",[[1,7494,"\t* "]],[7494,7494],[7497,7497]]],[1528125231431,["Administrator@Tielemao",[[-1,7505,"开"]],[7506,7506],[7505,7505]]],[1528125232250,["Administrator@Tielemao",[[1,7505,"来"]],[7505,7505],[7506,7506]]],[1528125235528,["Administrator@Tielemao",[[1,7521,"* "]],[7521,7521],[7523,7523]]],[1528125237340,["Administrator@Tielemao",[[1,7521,"\t"]],[7521,7521],[7522,7522]]],[1528125248389,["Administrator@Tielemao",[[1,7594,"* "]],[7594,7594],[7596,7596]]],[1528125249773,["Administrator@Tielemao",[[1,7594,"\t"]],[7594,7594],[7595,7595]]],[1528125252550,["Administrator@Tielemao",[[1,7618,"。"]],[7618,7618],[7619,7619]]],[1528125255360,["Administrator@Tielemao",[[-1,7605,"开"]],[7606,7606],[7605,7605]]],[1528125257145,["Administrator@Tielemao",[[1,7605,"于"]],[7605,7605],[7606,7606]]],[1528125263931,["Administrator@Tielemao",[[1,7621,"* "]],[7621,7621],[7623,7623]]],[1528125264877,["Administrator@Tielemao",[[1,7621,"\t"]],[7621,7621],[7622,7622]]],[1528125302350,["Administrator@Tielemao",[[-1,6573,"*   In the `setTabHandler()` function, the tab has an `onclick` event handler set on it, so that when the tab is clicked, the following occurs:\n    *   A `for` loop is used to cycle through all the tabs and remove any classes that are present on them.\n    *   A `class` of `active` is set on the tab that was clicked on — remember from earlier that this class has an associated rule in the CSS that sets the same `color` and `background-color` on the tab as the panels are styled with.\n    *   A `for` loop is used to cycle through all the panels and remove any classes that are present on them.\n    *   A class of `active-panel` is set on the panel that corresponds to the tab that was clicked on — remember from earlier that this class has an associated rule in the CSS that sets its `z-index` to 1, making it appear over the top of the other panels."]],[6573,7425],[6573,6573]]],[1528125303203,["Administrator@Tielemao",[[-1,6574,"\n"]],[6573,6573],[6572,6572]]],[1528125307499,["Administrator@Tielemao",[[1,6442,"\n"]],[6441,6441],[6442,6442]]],[1528125321938,["Administrator@Tielemao",[[-1,7070,"![](https://mdn.mozillademos.org/files/13364/fixed-info-box.png)"]],[7070,7134],[7070,7070]]],[1528125329176,["Administrator@Tielemao",[[1,7071,"![fixed-info-box]($res/fixed-info-box.png)\n\n"]],[7070,7070],[7114,7114]]],[1528125331316,["Administrator@Tielemao",[[-1,7070,"\n"]],[7070,7070],[7069,7069]]],[1528125332393,["Administrator@Tielemao",[[-1,7114,"\n"]],[7114,7114],[7113,7113]]],[1528125335802,["Administrator@Tielemao",[[1,7124," "]],[7124,7124],[7125,7125]]],[1528125460694,["Administrator@Tielemao",[[-1,7173," [fixed-info-box.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/fixed-info-box.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/fixed-info-box.html))"]],[7173,7429],[7173,7173]]],[1528125471130,["Administrator@Tielemao",[[1,7275," [fixed-info-box.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/fixed-info-box.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/fixed-info-box.html))"]],[7275,7275],[7531,7531]]],[1528125485760,["Administrator@Tielemao",[[-1,7114,"**Note**:  You can see the finished example running live at. Check it out to get an idea of what you will be building in this section of the article.\n"]],[7113,7263],[7113,7113]]],[1528125486930,["Administrator@Tielemao",[[-1,7114,"\n"]],[7113,7113],[7112,7112]]],[1528125490502,["Administrator@Tielemao",[[-1,7114,"笔记"]],[7116,7116],[7114,7114]]],[1528125492907,["Administrator@Tielemao",[[1,7114,"注"]],[7114,7114],[7115,7115]]],[1528125504838,["Administrator@Tielemao",[[-1,7529,"[info-box.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box.html) "]],[7529,7655],[7529,7529]]],[1528125512449,["Administrator@Tielemao",[[1,7590,"[info-box.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box.html) "]],[7590,7590],[7716,7716]]],[1528125516159,["Administrator@Tielemao",[[-1,7410,"As a starting point, you can use your completed example from the first section of the article, or make a local copy of from our Github repo."]],[7410,7550],[7410,7410]]],[1528125516989,["Administrator@Tielemao",[[-1,7411,"\n"]],[7410,7410],[7409,7409]]],[1528125517854,["Administrator@Tielemao",[[-1,7410,"\n"]],[7410,7410],[7409,7409]]],[1528125527639,["Administrator@Tielemao",[[-1,7595,"### HTML additions"]],[7595,7613],[7595,7595]]],[1528125529645,["Administrator@Tielemao",[[-1,7595,"\n"]],[7594,7594],[7593,7593]]],[1528125559684,["Administrator@Tielemao",[[-1,7608,"First of all, we need some additional HTML to represent the web site main content. Add the following [`<section>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\") just below your opening [`<body>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body \"HTML <body> 元素表示HTML文档内容所在之处。一个文档中只允许有一个 <body> 元素。\") tag, just before the existing section:"]],[7608,8118],[7608,7608]]],[1528125561463,["Administrator@Tielemao",[[-1,7609,"\n"]],[7609,7609],[7608,7608]]],[1528125561931,["Administrator@Tielemao",[[-1,7608,"\n"]],[7608,7608],[7607,7607]]],[1528125576735,["Administrator@Tielemao",[[-1,8496,"笔记"]],[8498,8498],[8496,8496]]],[1528125578198,["Administrator@Tielemao",[[1,8496,"注"]],[8496,8496],[8497,8497]]],[1528125648674,[null,[[-1,7595,"\n"],[1,8496,"\n"],[-1,8497,"记"]],[7595,7595],[8497,8497]]],[1528125648675,[null,[[1,7595,"\n"],[-1,8495,"\n"],[1,8497,"记"]],[8497,8497],[7595,7595]]],[1528125588903,["Administrator@Tielemao",[[-1,8405,"**Note**: You can feel free to change the fake content for some real content if you like.\n"]],[8404,8494],[8404,8404]]],[1528125589351,["Administrator@Tielemao",[[-1,8405,"\n"]],[8404,8404],[8403,8403]]],[1528125595604,["Administrator@Tielemao",[[-1,8414,"更改假的"]],[8414,8418],[8414,8414]]],[1528125602967,["Administrator@Tielemao",[[-1,8423,"的真的"]],[8423,8426],[8423,8423]]],[1528125604723,["Administrator@Tielemao",[[-1,8404,"\n"]],[8404,8404],[8403,8403]]],[1528125613619,["Administrator@Tielemao",[[-1,8427,"### Changes to the existing CSS"]],[8427,8458],[8427,8427]]],[1528125614094,["Administrator@Tielemao",[[-1,8428,"\n"]],[8427,8427],[8426,8426]]],[1528125615227,["Administrator@Tielemao",[[-1,8427,"\n"]],[8426,8426],[8425,8425]]],[1528125640670,["Administrator@Tielemao",[[-1,8441,"Next we need to make some small changes to the existing CSS, to get the info-box placed and positioned. Change your `.info-box` rule to get rid of `margin: 0 auto;` (we no longer want the info-box centered), add [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")`: fixed;`, and stick it to the [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") of the browser viewport.\n\nIt should now look like this:"]],[8441,8998],[8441,8441]]],[1528125641579,["Administrator@Tielemao",[[-1,8442,"\n"]],[8441,8441],[8440,8440]]],[1528125643095,["Administrator@Tielemao",[[-1,8441,"\n"]],[8441,8441],[8440,8440]]],[1528125708672,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"]],[7595,7595],[8424,8424]]],[1528125708673,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"]],[8424,8424],[7595,7595]]],[1528125651908,["Administrator@Tielemao",[[-1,8626,"### Styling the main content\n"]],[8625,8654],[8625,8625]]],[1528125652350,["Administrator@Tielemao",[[-1,8626,"\n"]],[8625,8625],[8624,8624]]],[1528125657738,["Administrator@Tielemao",[[-1,8640,"The only thing left for this example is to provide the main content with some styling. Add the following rule underneath the rest of your CSS:"]],[8640,8782],[8640,8640]]],[1528125658217,["Administrator@Tielemao",[[-1,8641,"\n"]],[8640,8640],[8639,8639]]],[1528125659078,["Administrator@Tielemao",[[-1,8640,"\n"]],[8640,8640],[8639,8639]]],[1528125661612,["Administrator@Tielemao",[[-1,8625,"\n"]],[8625,8625],[8624,8624]]],[1528125672830,["Administrator@Tielemao",[[-1,8823,"To start with, we give the content the same [`background-color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\"), [`color`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.\"), and [`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\") as the info-box panels. We then give it a large [`margin-left`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin-left \"margin-left  属性 设置与元素相关联的盒子模型的左外边距。这个值可以为负值。\") to move it over to the right, making space for the info-box to sit in, so it is not overlapping anything else.\n\nThis marks the end of the second example; we hope you'll find the third just as interesting."]],[8823,9892],[8823,8823]]],[1528125673997,["Administrator@Tielemao",[[-1,8824,"\n"]],[8824,8824],[8823,8823]]],[1528125674397,["Administrator@Tielemao",[[-1,8823,"\n"]],[8823,8823],[8822,8822]]],[1528125682611,["Administrator@Tielemao",[[-1,8944,"## A sliding hidden panel[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#A_sliding_hidden_panel)"]],[8944,9097],[8944,8944]]],[1528125684459,["Administrator@Tielemao",[[-1,8945,"\n"]],[8945,8945],[8944,8944]]],[1528125684878,["Administrator@Tielemao",[[-1,8944,"\n"]],[8944,8944],[8943,8943]]],[1528125688673,["Administrator@Tielemao",[[-1,8956,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples$edit#%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E9%9A%90%E8%97%8F%E7%9A%84%E9%9D%A2%E6%9D%BF)"]],[8956,9143],[8956,8956]]],[1528125768683,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"]],[7595,7595],[8958,8958]]],[1528125768683,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"]],[8958,8958],[7595,7595]]],[1528125713330,["Administrator@Tielemao",[[-1,8958,"The final example we'll present here is a panel that slides on and off the screen at the press of an icon — as mentioned earlier, this is popular for situations like mobile layouts, where the available screen spaces is small, so you don't want to use up most of it by showing a menu or info panel instead of the useful content."]],[8958,9285],[8958,8958]]],[1528125714978,["Administrator@Tielemao",[[-1,8959,"\n"]],[8960,8960],[8959,8959]]],[1528125715479,["Administrator@Tielemao",[[-1,8958,"\n"]],[8959,8959],[8958,8958]]],[1528125721898,["Administrator@Tielemao",[[-1,9064,"Our finished example will look like this:"]],[9064,9105],[9064,9064]]],[1528125722598,["Administrator@Tielemao",[[-1,9065,"\n"]],[9064,9064],[9063,9063]]],[1528125725949,["Administrator@Tielemao",[[-1,9064,"\n"]],[9064,9064],[9063,9063]]],[1528125828684,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"]],[7595,7595],[8958,8958]]],[1528125828684,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"]],[8958,8958],[7595,7595]]],[1528125792391,["Administrator@Tielemao",[[-1,9078,"![](https://mdn.mozillademos.org/files/13366/hidden-sliding-panel.png)\n"]],[9077,9148],[9077,9077]]],[1528125794357,["Administrator@Tielemao",[[1,9079,"\n"]],[9077,9077],[9078,9078]]],[1528125802858,["Administrator@Tielemao",[[1,9079,"![hidden-sliding-panel]($res/hidden-sliding-panel.png)\n\n"]],[9078,9078],[9134,9134]]],[1528125804887,["Administrator@Tielemao",[[-1,9078,"\n"]],[9078,9078],[9077,9077]]],[1528125805879,["Administrator@Tielemao",[[-1,9134,"\n"]],[9134,9134],[9133,9133]]],[1528125818674,["Administrator@Tielemao",[[-1,9193,"[hidden-info-panel.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/hidden-info-panel.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel.html))"]],[9193,9457],[9193,9193]]],[1528125822017,["Administrator@Tielemao",[[1,9295,"[hidden-info-panel.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/hidden-info-panel.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel.html))"]],[9295,9295],[9559,9559]]],[1528125826897,["Administrator@Tielemao",[[-1,9285,"笔记"]],[9287,9287],[9285,9285]]],[1528125888667,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9134,"\n"],[-1,9193,")"],[1,9194," "],[-1,9285,"记"],[1,9286,"\n"],[1,9293,"字"],[-1,9557,"字"]],[7595,7595],[9557,9557]]],[1528125888667,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9134,"\n"],[1,9192,")"],[-1,9192," "],[1,9284,"记"],[-1,9284,"\n"],[-1,9292,"字"],[1,9557,"字"]],[9557,9557],[7595,7595]]],[1528125829572,["Administrator@Tielemao",[[1,9285,"重要"]],[9285,9285],[9287,9287]]],[1528125831350,["Administrator@Tielemao",[[-1,9285,"重要"]],[9287,9287],[9285,9285]]],[1528125832586,["Administrator@Tielemao",[[1,9285,"提示"]],[9285,9285],[9287,9287]]],[1528125835740,["Administrator@Tielemao",[[-1,9134,"**Note**: You can see the finished example running live at . Check it out to get an idea of what you will be building in this section of the article."]],[9134,9283],[9134,9134]]],[1528125836358,["Administrator@Tielemao",[[-1,9135,"\n"]],[9134,9134],[9133,9133]]],[1528125837046,["Administrator@Tielemao",[[-1,9134,"\n"]],[9134,9134],[9133,9133]]],[1528125840933,["Administrator@Tielemao",[[-1,9441,"As a starting point, make a local copy of [hidden-info-panel-start.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel-start.html) from our Github repo. This doesn't follow on from the previous example, so a fresh start file is required. Let's have a look at the HTML in the file:"]],[9441,9788],[9441,9441]]],[1528125841936,["Administrator@Tielemao",[[-1,9442,"\n"]],[9442,9442],[9441,9441]]],[1528125842700,["Administrator@Tielemao",[[-1,9441,"\n"]],[9441,9441],[9440,9440]]],[1528125948696,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9136,"记"],[1,9144,"字"],[-1,9408,"字"]],[7595,7595],[9408,9408]]],[1528125948696,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9136,"记"],[-1,9143,"字"],[1,9408,"字"]],[9408,9408],[7595,7595]]],[1528125891621,["Administrator@Tielemao",[[-1,9880,"To start with here we've got a [`<label>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label \"HTML 元素表示用户界面中项目的标题。\") element and an [`<input>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input \"HTML <input> 元素用于为基于Web的表单创建交互式控件，以便接受来自用户的数据。\") element — `<label>`elements are normally used to associate a text label with a form element for accessibility purposes (allowing a screen user to see what description goes with what form element). Here it is associated with the `<input>` checkbox using the `for` and `id` attributes."]],[9880,10435],[9880,9880]]],[1528125893150,["Administrator@Tielemao",[[-1,9881,"\n"]],[9881,9881],[9880,9880]]],[1528125893438,["Administrator@Tielemao",[[-1,9880,"\n"]],[9880,9880],[9879,9879]]],[1528125900945,["Administrator@Tielemao",[[1,9944,"`"]],[9944,9944],[9945,9945]]],[1528125902175,["Administrator@Tielemao",[[1,9952,"`"]],[9952,9952],[9953,9953]]],[1528125905916,["Administrator@Tielemao",[[1,10011,"`"]],[10011,10011],[10012,10012]]],[1528125906923,["Administrator@Tielemao",[[1,10019,"`"]],[10019,10019],[10020,10020]]],[1528125912907,["Administrator@Tielemao",[[-1,10036,"**Note**: We've put a special question mark character into our HTML to act as our info icon — this represents the button that will be pressed to show/hide the panel."]],[10036,10201],[10036,10036]]],[1528125914125,["Administrator@Tielemao",[[-1,10037,"\n"]],[10037,10037],[10036,10036]]],[1528125914612,["Administrator@Tielemao",[[-1,10036,"\n"]],[10036,10036],[10035,10035]]],[1528125916142,["Administrator@Tielemao",[[-1,10036,"笔记"]],[10038,10038],[10036,10036]]],[1528125917187,["Administrator@Tielemao",[[1,10036,"rjfi"]],[10036,10036],[10040,10040]]],[1528125918101,["Administrator@Tielemao",[[-1,10036,"rjfi"]],[10040,10040],[10036,10036]]],[1528125919349,["Administrator@Tielemao",[[1,10036,"提示"]],[10036,10036],[10038,10038]]],[1528125934996,["Administrator@Tielemao",[[1,9880,"`"]],[9880,9880],[9881,9881]]],[1528125936372,["Administrator@Tielemao",[[1,9889,"`"]],[9889,9889],[9890,9890]]],[1528125943714,["Administrator@Tielemao",[[-1,9888," "]],[9889,9889],[9888,9888]]],[1528126008684,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9136,"记"],[1,9144,"字"],[-1,9408,"字"],[-1,9880,"`"],[1,9882,"`"],[1,9888,"l"],[-1,9889," "],[-1,9945,"`"],[1,9947,"`"],[-1,9953,"`"],[1,9955,"`"],[-1,10012,"`"],[1,10014,"`"],[-1,10020,"`"],[1,10022,"`"],[1,10037,"\n"],[-1,10039,"记"]],[7595,7595],[10039,10039]]],[1528126008684,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9136,"记"],[-1,9143,"字"],[1,9408,"字"],[1,9879,"`"],[-1,9880,"`"],[-1,9887,"l"],[1,9889," "],[1,9944,"`"],[-1,9945,"`"],[1,9952,"`"],[-1,9953,"`"],[1,10011,"`"],[-1,10012,"`"],[1,10019,"`"],[-1,10020,"`"],[-1,10036,"\n"],[1,10039,"记"]],[10039,10039],[7595,7595]]],[1528125976171,["Administrator@Tielemao",[[-1,10103,"Here we are going to use these elements for a slightly different purpose — another useful side effect of `<label>` elements is that you can click a checkbox's label to check the checkbox, as well as just the checkbox itself. This has led to the well-known [checkbox hack](https://css-tricks.com/the-checkbox-hack/), which provides a JavaScript-free way of controlling an element by toggling a button. The element we'll be controlling is the [`<aside>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside \"<aside> 元素表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响。其通常表现为侧边栏或者嵌入内容。他们通常包含在工具条，例如来自词汇表的定义。也可能有其他类型的信息，例如相关的广告、笔者的传记、web 应用程序、个人资料信息，或在博客上的相关链接。\") element that follows the other two (we've left its contents out of the above code listing for brevity).\n\nIn the below sections we'll explain how this all works."]],[10103,10940],[10103,10103]]],[1528125977558,["Administrator@Tielemao",[[-1,10104,"\n"]],[10104,10104],[10103,10103]]],[1528125978174,["Administrator@Tielemao",[[-1,10103,"\n"]],[10103,10103],[10102,10102]]],[1528125980190,["Administrator@Tielemao",[[1,10126,"`"]],[10126,10126],[10127,10127]]],[1528125981092,["Administrator@Tielemao",[[1,10134,"`"]],[10134,10134],[10135,10135]]],[1528126006418,["Administrator@Tielemao",[[-1,10138,"用的"]],[10140,10140],[10138,10138]]],[1528126068686,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9136,"记"],[1,9144,"字"],[-1,9408,"字"],[-1,9880,"`"],[1,9882,"`"],[1,9888,"l"],[-1,9889," "],[-1,9945,"`"],[1,9947,"`"],[-1,9953,"`"],[1,9955,"`"],[-1,10012,"`"],[1,10014,"`"],[-1,10020,"`"],[1,10022,"`"],[1,10037,"\n"],[-1,10039,"记"],[-1,10126,"`"],[1,10128,"`"],[-1,10134,"`"],[1,10136,"`"],[-1,10138,"的"],[1,10139,"有"]],[7595,7595],[10140,10140]]],[1528126068686,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9136,"记"],[-1,9143,"字"],[1,9408,"字"],[1,9879,"`"],[-1,9880,"`"],[-1,9887,"l"],[1,9889," "],[1,9944,"`"],[-1,9945,"`"],[1,9952,"`"],[-1,9953,"`"],[1,10011,"`"],[-1,10012,"`"],[1,10019,"`"],[-1,10020,"`"],[-1,10036,"\n"],[1,10039,"记"],[1,10125,"`"],[-1,10126,"`"],[1,10133,"`"],[-1,10134,"`"],[1,10137,"的"],[-1,10137,"有"]],[10140,10140],[7595,7595]]],[1528126022331,["Administrator@Tielemao",[[-1,10113,"在"]],[10113,10114],[10113,10113]]],[1528126033499,["Administrator@Tielemao",[[-1,10324,"### Styling the form elements\n"]],[10323,10353],[10323,10323]]],[1528126034783,["Administrator@Tielemao",[[-1,10324,"\n"]],[10324,10324],[10323,10323]]],[1528126041547,["Administrator@Tielemao",[[-1,10338,"First let's deal with the form elements — add the following CSS in between your [`<style>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/style \"HTML的<style>元素包含了文档的样式化信息或者文档的一部分，该标签的样式信息通常是CSS的格式。\")tags:"]],[10338,10554],[10338,10338]]],[1528126043326,["Administrator@Tielemao",[[-1,10339,"\n"]],[10338,10338],[10337,10337]]],[1528126044250,["Administrator@Tielemao",[[-1,10338,"\n"]],[10337,10337],[10336,10336]]],[1528126058739,["Administrator@Tielemao",[[-1,10573,"The first rule styles the `<label>`; here we've:\n\n*   Set a large [`font-size`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-size \"font-size CSS 属性指定字体的大小。因为该属性的值会被用于计算em和ex长度单位，定义该值可能改变其他元素的大小。\") to make the icon nice and big.\n*   Set [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") `absolute` on it, and used [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") and [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\") to position it nicely in the top-right corner.\n*   Set a [`z-index`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index \"z-index 属性指定了一个具有定位属性的元素及其子代元素的 z-order。 当元素之间重叠的时候，z-order 决定哪一个元素覆盖在其余元素的上方显示。 通常来说 z-index 较大的元素会覆盖较小的一个。\") of 1 on it — this is so that when the info panel is styled and shown, it doesn't cover up the icon; instead the icon will sit on top of it so it can be pressed again to hide the info pane.\n*   Used the [`cursor`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor \"cursor CSS属性定义鼠标指针悬浮在元素上方显示的鼠标光标。\") property to change the mouse cursor when it is hovering over the icon to a hand pointer (like the one you see when links are hovered over), as an extra visual clue to users that the icon does something interesting.\n\nThe second rule sets [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") `absolute` on the actual checkbox `<input>` element, and hides it off the top of the screen. We don't actually want to see this on our UI."]],[10573,12292],[10573,10573]]],[1528126060583,["Administrator@Tielemao",[[-1,10574,"\n"]],[10574,10574],[10573,10573]]],[1528126061028,["Administrator@Tielemao",[[-1,10573,"\n"]],[10573,10573],[10572,10572]]],[1528126067409,["Administrator@Tielemao",[[1,10593,"* "]],[10593,10593],[10595,10595]]],[1528126128702,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9136,"记"],[1,9144,"字"],[-1,9408,"字"],[-1,9880,"`"],[1,9882,"`"],[1,9888,"l"],[-1,9889," "],[-1,9945,"`"],[1,9947,"`"],[-1,9953,"`"],[1,9955,"`"],[-1,10012,"`"],[1,10014,"`"],[-1,10020,"`"],[1,10022,"`"],[1,10037,"\n"],[-1,10039,"记"],[-1,10113,"在"],[1,10114,"素"],[-1,10125,"`"],[1,10127,"`"],[-1,10133,"`"],[1,10135,"`"],[-1,10137,"的"],[1,10138,"有"],[1,10593,"\n"],[-1,10595,"\n"]],[7595,7595],[10595,10595]]],[1528126128702,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9136,"记"],[-1,9143,"字"],[1,9408,"字"],[1,9879,"`"],[-1,9880,"`"],[-1,9887,"l"],[1,9889," "],[1,9944,"`"],[-1,9945,"`"],[1,9952,"`"],[-1,9953,"`"],[1,10011,"`"],[-1,10012,"`"],[1,10019,"`"],[-1,10020,"`"],[-1,10036,"\n"],[1,10039,"记"],[1,10112,"在"],[-1,10112,"素"],[1,10124,"`"],[-1,10125,"`"],[1,10132,"`"],[-1,10133,"`"],[1,10136,"的"],[-1,10136,"有"],[-1,10592,"\n"],[1,10595,"\n"]],[10595,10595],[7595,7595]]],[1528126070543,["Administrator@Tielemao",[[1,10610,"* "]],[10610,10610],[10612,10612]]],[1528126074753,["Administrator@Tielemao",[[1,10651,"* "]],[10651,10651],[10653,10653]]],[1528126077843,["Administrator@Tielemao",[[1,10726,"* "]],[10726,10726],[10728,10728]]],[1528126081941,["Administrator@Tielemao",[[1,10573,"* "]],[10573,10573],[10575,10575]]],[1528126083642,["Administrator@Tielemao",[[1,10595,"\t"]],[10595,10595],[10596,10596]]],[1528126084559,["Administrator@Tielemao",[[1,10613,"\t"]],[10613,10613],[10614,10614]]],[1528126085517,["Administrator@Tielemao",[[1,10655,"\t"]],[10655,10655],[10656,10656]]],[1528126086467,["Administrator@Tielemao",[[1,10731,"\t"]],[10731,10731],[10732,10732]]],[1528126089890,["Administrator@Tielemao",[[1,10826,"* "]],[10826,10826],[10828,10828]]],[1528126102951,["Administrator@Tielemao",[[1,10838,"`"]],[10838,10838],[10839,10839]]],[1528126103951,["Administrator@Tielemao",[[1,10846,"`"]],[10846,10846],[10847,10847]]],[1528126111165,["Administrator@Tielemao",[[-1,10898,"### Styling the panel\n"]],[10897,10919],[10897,10897]]],[1528126112274,["Administrator@Tielemao",[[-1,10898,"\n"]],[10898,10898],[10897,10897]]],[1528126114815,["Administrator@Tielemao",[[-1,10911,"Now it's time to style the actual sliding panel itself. Add the following rule to the bottom of your CSS:\n"]],[10910,11016],[10910,10910]]],[1528126115299,["Administrator@Tielemao",[[-1,10911,"\n"]],[10910,10910],[10909,10909]]],[1528126188713,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9136,"记"],[1,9144,"字"],[-1,9408,"字"],[-1,9880,"`"],[1,9882,"`"],[1,9888,"l"],[-1,9889," "],[-1,9945,"`"],[1,9947,"`"],[-1,9953,"`"],[1,9955,"`"],[-1,10012,"`"],[1,10014,"`"],[-1,10020,"`"],[1,10022,"`"],[1,10037,"\n"],[-1,10039,"记"],[-1,10113,"在"],[1,10114,"素"],[-1,10125,"`"],[1,10127,"`"],[-1,10133,"`"],[1,10135,"`"],[-1,10137,"的"],[1,10138,"有"],[1,10573,"\n"],[-1,10575,"\n"],[1,10595,"\n"],[-1,10598,"\n"],[1,10613,"\n"],[-1,10616,"\n"],[1,10655,"\n"],[-1,10658,"\n"],[1,10731,"\n"],[-1,10734,"\n"],[1,10826,"\n"],[-1,10828,"\n"],[-1,10838,"`"],[1,10840,"`"],[-1,10846,"`"],[1,10848,"`"]],[7595,7595],[10849,10849]]],[1528126188713,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9136,"记"],[-1,9143,"字"],[1,9408,"字"],[1,9879,"`"],[-1,9880,"`"],[-1,9887,"l"],[1,9889," "],[1,9944,"`"],[-1,9945,"`"],[1,9952,"`"],[-1,9953,"`"],[1,10011,"`"],[-1,10012,"`"],[1,10019,"`"],[-1,10020,"`"],[-1,10036,"\n"],[1,10039,"记"],[1,10112,"在"],[-1,10112,"素"],[1,10124,"`"],[-1,10125,"`"],[1,10132,"`"],[-1,10133,"`"],[1,10136,"的"],[-1,10136,"有"],[-1,10572,"\n"],[1,10575,"\n"],[-1,10594,"\n"],[1,10598,"\n"],[-1,10612,"\n"],[1,10616,"\n"],[-1,10654,"\n"],[1,10658,"\n"],[-1,10730,"\n"],[1,10734,"\n"],[-1,10825,"\n"],[1,10828,"\n"],[1,10837,"`"],[-1,10838,"`"],[1,10845,"`"],[-1,10846,"`"]],[10849,10849],[7595,7595]]],[1528126139966,["Administrator@Tielemao",[[-1,11139,"\n"]],[11138,11138],[11137,11137]]],[1528126140840,["Administrator@Tielemao",[[-1,11138,"\n"]],[11138,11138],[11137,11137]]],[1528126141304,["Administrator@Tielemao",[[-1,11137,"\n"]],[11137,11137],[11136,11136]]],[1528126145578,["Administrator@Tielemao",[[1,11157,"* "]],[11157,11157],[11159,11159]]],[1528126149123,["Administrator@Tielemao",[[1,11188,"* "]],[11188,11188],[11190,11190]]],[1528126153091,["Administrator@Tielemao",[[1,11229,"* "]],[11229,11229],[11231,11231]]],[1528126161828,["Administrator@Tielemao",[[1,11248,"yu"]],[11248,11248],[11250,11250]]],[1528126162395,["Administrator@Tielemao",[[-1,11248,"yu"]],[11250,11250],[11248,11248]]],[1528126164576,["Administrator@Tielemao",[[1,11248,"于"]],[11248,11248],[11249,11249]]],[1528126170906,["Administrator@Tielemao",[[1,11311,"* "]],[11311,11311],[11313,11313]]],[1528126177328,["Administrator@Tielemao",[[1,11408,"* "]],[11408,11408],[11410,11410]]],[1528126183537,["Administrator@Tielemao",[[-1,11600,"### Setting the checked state"]],[11600,11629],[11600,11600]]],[1528126184238,["Administrator@Tielemao",[[-1,11601,"\n"]],[11600,11600],[11599,11599]]],[1528126187238,["Administrator@Tielemao",[[-1,11615,"There is one final bit of CSS to add — put the following at the bottom of your CSS:"]],[11615,11698],[11615,11615]]],[1528126187913,["Administrator@Tielemao",[[-1,11616,"\n"]],[11615,11615],[11614,11614]]],[1528126188569,["Administrator@Tielemao",[[-1,11615,"\n"]],[11614,11614],[11613,11613]]],[1528126249010,[null,[[-1,7595,"\n"],[1,8404,"\n"],[-1,8405,"记"],[-1,8413,"的"],[1,8414,"改"],[-1,8422,"的"],[1,8423,"要"],[-1,8956,")"],[1,8957,"板"],[1,9078,"\n"],[-1,9136,"记"],[1,9144,"字"],[-1,9408,"字"],[-1,9880,"`"],[1,9882,"`"],[1,9888,"l"],[-1,9889," "],[-1,9945,"`"],[1,9947,"`"],[-1,9953,"`"],[1,9955,"`"],[-1,10012,"`"],[1,10014,"`"],[-1,10020,"`"],[1,10022,"`"],[1,10037,"\n"],[-1,10039,"记"],[-1,10113,"在"],[1,10114,"素"],[-1,10125,"`"],[1,10127,"`"],[-1,10133,"`"],[1,10135,"`"],[-1,10137,"的"],[1,10138,"有"],[1,10573,"\n"],[-1,10575,"\n"],[1,10595,"\n"],[-1,10598,"\n"],[1,10613,"\n"],[-1,10616,"\n"],[1,10655,"\n"],[-1,10658,"\n"],[1,10731,"\n"],[-1,10734,"\n"],[1,10826,"\n"],[-1,10828,"\n"],[-1,10838,"`"],[1,10840,"`"],[-1,10846,"`"],[1,10848,"`"],[-1,11137,"here's a lot going o* n here — let's discuss it bit*  by bit:\n\n*   First, we set some simple*  [`background-col于or`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/backgrou* nd-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\") and [`color`](h* ttps://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteris eally be calleance in CSS Level 1.\") on the info box.\n*   Next, we set a fixed [`width`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\") on the panel, and make its [`height`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/height) the entire height of the browser viewport.\n*   We also include some [`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\") to make up the width/height to the total value we want (this was necessary as we've not set `box-sizing: border-box;` on this example).\n*   Next we set [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")`: fixed;` on the panel so it will always appear in the same place, even if the page has content to scroll. We glue it to the [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") of the viewport, and set it so that by default it is offscreen to the [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\").\n*   Finally, we set a [`transition`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition \"transition CSS 属性是一个简写属性，用于 transition-property, transition-duration, transition-timing-function, 和 transition-delay。\") on the element. Transitions are an interesting feature that allow you to make changes between states happen smoothly, rather than just going \"on\", \"off\" abruptly. In this case we are intending to make the panel slide smoothly onscreen when the checkbox is checked. (Or to put it another way, when the question mark icon is clicked — remember, clicking the `<label>` will check the associated checkbox! We told you it was a hack.) You will learn a lot more about...\n"],[1,13523,"* "],[1,13552,"* "],[1,13591,"* "],[1,13608,"于"],[1,13670,"* "],[1,13765,"* "],[-1,13955,"### Setting the checked state\n"],[-1,13998,"\n\nThere is one final bit of CSS to add — put the following at the bottom of your CSS:"]],[7595,7595],[13998,13998]]],[1528126249010,[null,[[1,7595,"\n"],[-1,8403,"\n"],[1,8405,"记"],[1,8412,"的"],[-1,8412,"改"],[1,8421,"的"],[-1,8421,"要"],[1,8955,")"],[-1,8955,"板"],[-1,9077,"\n"],[1,9136,"记"],[-1,9143,"字"],[1,9408,"字"],[1,9879,"`"],[-1,9880,"`"],[-1,9887,"l"],[1,9889," "],[1,9944,"`"],[-1,9945,"`"],[1,9952,"`"],[-1,9953,"`"],[1,10011,"`"],[-1,10012,"`"],[1,10019,"`"],[-1,10020,"`"],[-1,10036,"\n"],[1,10039,"记"],[1,10112,"在"],[-1,10112,"素"],[1,10124,"`"],[-1,10125,"`"],[1,10132,"`"],[-1,10133,"`"],[1,10136,"的"],[-1,10136,"有"],[-1,10572,"\n"],[1,10575,"\n"],[-1,10594,"\n"],[1,10598,"\n"],[-1,10612,"\n"],[1,10616,"\n"],[-1,10654,"\n"],[1,10658,"\n"],[-1,10730,"\n"],[1,10734,"\n"],[-1,10825,"\n"],[1,10828,"\n"],[1,10837,"`"],[-1,10838,"`"],[1,10845,"`"],[-1,10846,"`"],[1,11136,"here's a lot going o* n here — let's discuss it bit*  by bit:\n\n*   First, we set some simple*  [`background-col于or`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/backgrou* nd-color \"CSS属性中的 background-color 会设置元素的背景色, 属性的值为颜色值或关键字\"transparent\"二者选其一.\") and [`color`](h* ttps://developer.mozilla.org/zh-CN/docs/Web/CSS/color \"The color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteris eally be calleance in CSS Level 1.\") on the info box.\n*   Next, we set a fixed [`width`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\") on the panel, and make its [`height`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/height) the entire height of the browser viewport.\n*   We also include some [`padding`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding \"padding属性设置一个元素的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值。\") to make up the width/height to the total value we want (this was necessary as we've not set `box-sizing: border-box;` on this example).\n*   Next we set [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")`: fixed;` on the panel so it will always appear in the same place, even if the page has content to scroll. We glue it to the [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") of the viewport, and set it so that by default it is offscreen to the [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\").\n*   Finally, we set a [`transition`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition \"transition CSS 属性是一个简写属性，用于 transition-property, transition-duration, transition-timing-function, 和 transition-delay。\") on the element. Transitions are an interesting feature that allow you to make changes between states happen smoothly, rather than just going \"on\", \"off\" abruptly. In this case we are intending to make the panel slide smoothly onscreen when the checkbox is checked. (Or to put it another way, when the question mark icon is clicked — remember, clicking the `<label>` will check the associated checkbox! We told you it was a hack.) You will learn a lot more about...\n"],[-1,11157,"* "],[-1,11188,"* "],[-1,11229,"* "],[-1,11248,"于"],[-1,11311,"* "],[-1,11408,"* "],[1,11600,"### Setting the checked state\n"],[1,11613,"\n\nThere is one final bit of CSS to add — put the following at the bottom of your CSS:"]],[13998,13998],[7595,7595]]],[1528126189259,["Administrator@Tielemao",[[-1,11600,"\n"]],[11600,11600],[11599,11599]]],[1528126194083,["Administrator@Tielemao",[[-1,11708,"The selector is pretty complex here — we are selecting the `<aside>` element adjacent to the `<input>` element, but only when it is checked (note the use of the [`:checked`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/:checked \":checked CSS 伪类选择器表示任何处于选中状态的radio(<input type=\"radio\">), checkbox (<input type=\"checkbox\">) 或(\"select\") 元素中的option HTML元素(\"option\")) 。用户通过点击元素或选择其他的值，可以改变该元素的 :checked 状态，并:checked属性赋给一个新的对象(例如其他的option值)。\") pseudo-class to achieve this). When this is the case, we are setting the [`right`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/right \"right样式属性定义了定位元素的右外边距边界与其包含块右边界之间的偏移，非定位元素设置此属性无效。\") property of the `<aside>` to `0px`, which causes the panel to appear on the screen again (smoothly due to the transition). Clicking the label again unchecks the checkbox, which hides the panel again."]],[11708,12541],[11708,11708]]],[1528126194644,["Administrator@Tielemao",[[-1,11709,"\n"]],[11708,11708],[11707,11707]]],[1528126195444,["Administrator@Tielemao",[[-1,11708,"\n"]],[11707,11707],[11706,11706]]],[1528126199505,["Administrator@Tielemao",[[1,11724,"`"]],[11724,11724],[11725,11725]]],[1528126200384,["Administrator@Tielemao",[[1,11732,"`"]],[11732,11732],[11733,11733]]],[1528126201667,["Administrator@Tielemao",[[1,11738,"`"]],[11738,11738],[11739,11739]]],[1528126202582,["Administrator@Tielemao",[[1,11746,"`"]],[11746,11746],[11747,11747]]],[1528126206864,["Administrator@Tielemao",[[-1,11871,"So there you have it — a rather clever JavaScript-free way to create a toggling button effect. This will work in IE9 and above (the smooth transition will work in IE10 and above.) This effect does have some concerns — this is a bit of an abuse of form elements (they weren't intended for this purpose), and the effect is not great in terms of accessibilty — the label is not focusable by default, and the non-semantic use of the form elements could cause issues with screenreaders. JavaScript and a link or button might be more appropriate, but it is still fun to experiment with.\n"]],[11870,12451],[11870,11870]]],[1528126207919,["Administrator@Tielemao",[[-1,11871,"\n"]],[11870,11870],[11869,11869]]]]],["81c06464-cbf3-4c93-994b-801923a1fa0f",1528185111117,"CSS学习摘要-定位实例\n===\n\n## 列表消息盒子\n\n我们研究的第一个例子是一个经典的选项卡消息框，你想用一块小区域包括大量信息时，一个非常常用的特征。这包括含有大信息量的应用，比如策略战争游戏，比如从移动版的网页，屏幕狭小、空间有限；比如你可能想要放置许多信息的紧凑消息框，不用就会充满整个UI。我们简单的例子完成后就会像下面这样：\n\n![tabbed-info-box]($res/tabbed-info-box.png)\n\n**注意：** 你能看完整的示例，可运行在 [info-box.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/info-box.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box.html))。检出它以理解你在本文章里要建立什么。\n\n你可能会想：”为什么不仅仅做独立的选项卡为一个独立的网页，然后通过点击不同的标签来在不同的页面跳转来达到这个效果？“这样代码可能会简单一些，是的。但是这样每个独立的”页面“视图将会实际上是一个新加载的网页，跨视图更难保存信息，并把这个特征融入一个更大的UI设计。另外，所谓的”单页应用“正在变得非常流行——尤其是移动网页UI——因为把一切的服务放在一个单独的文件上可以减少HTTP请求的数量来浏览所有内容，从而提高性能。\n\n**注意：** 一些网络开发者甚至更超前，每次只加载一页的信息，并且使用JavaScript诸如 [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)特征动态改变信息显示。在你学习的此刻，然而，我们希望尽可能保持简单。接下来有一些JavaScript，但是只有一点。\n\n在开始之前，我们需要你拷贝文件到本地，当作起始的HTML文件—— [info-box-start.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box-start.html). 保存到你的计算机合适的位置，然后在你的编辑器里打开。让我们看看包含在 body 里的HTML代码：\n\n```html\n<section class=\"info-box\">\n  <ul>\n    <li><a href=\"#\" class=\"active\">Tab 1</a></li>\n    <li><a href=\"#\">Tab 2</a></li>\n    <li><a href=\"#\">Tab 3</a></li>\n  </ul>\n  <div class=\"panels\">\n    <article class=\"active-panel\">\n      <h2>The first tab</h2>\n\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque turpis nibh, porttitor nec venenatis eu, pulvinar in augue. Vestibulum et orci scelerisque, vulputate tellus quis, lobortis dui. Vivamus varius libero at ipsum mattis efficitur ut nec nisl. Nullam eget tincidunt metus. Donec ultrices, urna maximus consequat aliquet, dui neque eleifend lorem, a auctor libero turpis at sem. Aliquam ut porttitor urna. Nulla facilisi.</p>\n    </article>\n    <article>\n      <h2>The second tab</h2>\n\n      <p>This tab hasn't got any Lorem Ipsum in it. But the content isn't very exciting all the same.</p>\n    </article>\n    <article>\n      <h2>The third tab</h2>\n\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque turpis nibh, porttitor nec venenatis eu, pulvinar in augue. And now an ordered list: how exciting!</p>\n\n      <ol>\n        <li>dui neque eleifend lorem, a auctor libero turpis at sem.</li>\n        <li>Aliquam ut porttitor urna.</li>\n        <li>Nulla facilisi</li>\n      </ol>\n    </article>\n  </div>\n</section>\n```\n\n这样我们已经得到了一个`<section>`元素带有类（`class`）为 `info-box`。此元素又包含一个 `<ul>` 和一个 `<div>`。无序列表包含三个列表项，列表项有链接在内，实际上将成为用于点击后显示内容面板的选项卡。 `div` 包含三个`<article>` (`<article>`元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。) 元素，构成对应于每个选项卡的内容面板。 每个面板包含一些示例内容。\n\n这里的思路是我们将样式化选项卡看起来是一个标准的水平导航菜单，使用绝对定位样式化面板互相坐落其顶上。我们也给你一点JavaScript包含到你的页面上，当选项卡被按下时，显示对应的面板，并且样式化选项卡本身。你不需要在这个阶段了解JavaScript本身，但是你应该尽快学习一些基本的 [JavaScript](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics)——你的用户界面越复杂，越需要一些JavaScript来实现你渴望的功能。\n\n### 一般设置\n\n开始前，在`<style>`开闭标签之间添加下面的代码：\n\n```css\nhtml {\n  font-family: sans-serif;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n}\n```\n\n这只是一些一般设置，在我们页面上设置了无衬线的字体、使用 [`box-sizing`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing \"box-sizing 属性用于更改用于计算元素宽度和高度的默认的 CSS 盒子模型。可以使用此属性来模拟不正确支持CSS盒子模型规范的浏览器的行为。\") 模型，去掉 `<body>` 默认外边距。\n\n下一步，在你早先的CSS下面加入如下代码：\n\n```css\n.info-box {\n  width: 450px;\n  height: 400px;\n  margin: 0 auto;\n}\n```\n\n这对内容设置具体的高度和宽度、在屏幕居中使用老把戏 `margin: 0 auto` 。在早先的课程中我们建议尽可能不固定内容容器的高度。这个情况下是可以的，因为我们是在选项卡中固定的内容，如果每个标签都有不同的高度，看起来也有些不和谐。\n\n### 样式化我们的选项卡\n\n现在我们希望样式化选项卡看上去像选项卡——基本，这些是一个水平的导航标签，但不是点击之后加载不同的网页，和我们之前在课程中见到的不同，相反，他们在同一页面上显示不同的面板。首先，在你的CSS底部添加下列规则，从无序列表中移除默认的`padding-left`和`margin-top`值：\n\n```css\n.info-box ul {\n  padding-left: 0;\n  margin-top: 0;\n}\n```\n\n**注意：** 我们正在使用后代选择器，整个例子 `.info-box` 都位于链的开始——这样页面已经带有其他内容时，我们可以插入这个特征，不害怕与应用于页面其他部分的样式冲突。\n\n接下来，我们将样式化水平选项卡——列表项都要左浮动确保他们一行合起来，他们的`list-style-type`被设置为 `none` 用以去除项目符号，宽度（`width`）设置为 `150px` 以便于适应这个info-box。链接（ `<a>`）元素设置为`display` inline-block，这样他们将在一行显示，仍然保持样式可设置，他们会被样式化合适的选项卡按钮，通过一系列的其他属性。\n\n添加下列的CSS：\n\n```css\n.info-box li {\n  float: left;\n  list-style-type: none;\n  width: 150px;\n}\n\n.info-box li a {\n  display: inline-block;\n  text-decoration: none;\n  width: 100%;\n  line-height: 3;\n  background-color: red;\n  color: black;\n  text-align: center;\n}\n```\n\n最后，对于本节，我们将会在链接状态上设置一些样式。首先，我们要设置标签的 `:focus` 和 `:hover` 状态，让他们在获得焦点/鼠标悬浮的时候看起来不同，给用户提供一些可视化反馈。其次，当某个选项卡的类（ `class` ）出现 `active` 时，我们为其设置一条相同的样式规则。我们将通过使用JavaScript来设置，当一个标签被点击时。把这些CSS放置在你的其他样式后面：\n\n```css\n.info-box li a:focus, .info-box li a:hover {\n  background-color: #a60000;\n  color: white;\n}\n\n.info-box li a.active {\n  background-color: #a60000;\n  color: white;\n}\n```\n\n### 样式化面板\n\n下一步工作是样式化我们的面板，现在开始吧！\n\n首先，添加下列的规则去样式化 `.panels` `<div>` 容器。我们简单的设置一个固定的高度，确保面板包含在info-box里面，`position` `relative` 设置 `<div>`为定位上下文，这样你能然后相对自身放置定位子元素，而不是相对`<html>`元素，最后我们清除（`clear`）浮动，设置在上面CSS中，这样避免影响布局的剩余部分。\n\n```css\n.info-box .panels {\n  height: 352px;\n  position: relative;\n  clear: both;\n}\n```\n\n在本节的最后，我们将对包含我们面板的单独 `<article>`元素设置样式。我们添加的第一条规则就是绝对定位面板，让他们都位于`<div>`容器的左上角——这一部分对整个布局特性是关键的，就像使面板互相位于顶部。规则设置面板为和容器同样的高度，给内容一些内边距，设置字体颜色（`color`），和背景颜色（`background-color`）。\n\n我们将添加的第二条规则，对带有类（ `class` ）为（ `active-panel` ）的面板，设置`z-index`为 1，会让他位于其他的面板之上（默认定位元素 `z-index` 的值是 0，会使默认元素位于下面）。同样的，我们会在合适的时候用JavaScript 来添加这个类。\n\n```css\n.info-box article {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 352px;\n  padding: 10px;\n  color: white;\n  background-color: #a60000;\n}\n\n.info-box .active-panel {\n  z-index: 1;\n}\n```\n\n### 添加我们的JavaScript\n\n让这些特性工作的最后一步是添加一些JavaScript。添加下列一块代码，准确的写在你的开始和结束的`<script>`标签之间（在接下来的HTML内容中你将会发现这些）：\n\n```js\nvar tabs = document.querySelectorAll('.info-box li a');\nvar panels = document.querySelectorAll('.info-box article');\n\nfor(i = 0; i < tabs.length; i++) {\n  var tab = tabs[i];\n  setTabHandler(tab, i);\n}\n\nfunction setTabHandler(tab, tabPos) {\n  tab.onclick = function() {\n    for(i = 0; i < tabs.length; i++) {\n      if(tabs[i].getAttribute('class')) {\n        tabs[i].removeAttribute('class');\n      }\n    }\n\n    tab.setAttribute('class', 'active');\n\n    for(i = 0; i < panels.length; i++) {\n      if(panels[i].getAttribute('class')) {\n        panels[i].removeAttribute('class');\n      }\n    }\n\n    panels[tabPos].setAttribute('class', 'active-panel');\n  }\n}\n```\n\n这些代码做了如下工作：\n\n*   首先我们保存所有的选项卡和所有的面板引用到两个变量中，名为 `tabs` 和 `panels`，这样此后我们可以容易地为它们做事。\n\n*   然后我们使用 `for` 循环遍历所有的选项卡，并且在每一个上运行叫做`setTabHandler()` 的函数，此函数建立当每个选项卡被点击时应该发生的功能。 运行时， 函数会被传递选项卡，和一个索引数`i` 指明选项卡在`tabs` 数组中的位置。\n\n* 在setTabHandler()函数中，这个标签创建了一个onclick事件来处理点击，所以当标签被点击的时候，接下来会发生：\n\n\t* 一个for循环用来清除所有标签当前存在的类。\n\n\t* 当点击的时候在标签上创建了一个active 类——从相关联的元素中继承了CSS的一些属性，具有和panels的样式相同的颜色，背景颜色。\n\n\t* 一个for循环用于清除所有面板当前存在的类。\n\n\t* 当标签被点击的时候在和标签相对应的面板上创建了一个active-panel 类——从相关联的元素中继承了CSS的一些属性，使他的z-index属性被设置为1，让他能位于所有的面板的上面。\n\n效果如下：\n\n![css-position06]($res/css-position06.gif)\n\n## 一个固定位置的列表消息盒子\n\n在我们的第二个例子中，我们将会采用我们的第一个例子——我们的消息盒子——把她加到一个满的网页之中去。但是不仅仅是这样——我们将固定她的位置，以便于他能待在浏览器窗口的同一个位置。当主要内容滚动时，这个消息盒子将会待在屏幕的同一个位置。我们完工以后的例子长下面这样：\n\n![fixed-info-box]($res/fixed-info-box.png)\n\n注：你可以点击蓝字 [fixed-info-box.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/fixed-info-box.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/fixed-info-box.html))预览完成后的效果，看看哪些部分是你在这篇文章里你要制作的。\n\n在开始的时候，你可以使用第一部分中完成的例子，或者从我们的Github仓库中[info-box.html](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/info-box.html) 拷贝info-box.html到本地。\n\n### 添加HTML \n\n首先，我们需要一些额外的内容在当前的主内容中。添加下列部分在你的body标签之中，在已存在的部分之中前：\n\n```html\n<section class=\"fake-content\">\n  <h1>Fake content</h1>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n  <p>This is fake content. Your main web page contents would probably go here.</p>\n</section>\n```\n注：你可以随意更改内容，替换为你想要内容。\n\n### 更改存在的CSS\n\n接下来我们需要对之前的Css进行一些小修改，让消息盒子放置和定位的好一些。删除你的margin: 0 auto （不需要居中显示），添加fixed定位；调整top 属性把她粘在浏览器的视域。\n\n```css\n.info-box {\n  width: 450px;\n  height: 400px;\n  position: fixed;\n  top: 0;\n}\n```\n### 对主内容样式设计\n\n对于这个例子来说唯一剩下的事情就是给主内容提供一些样式设计。添加下面的规则到你剩下的Css 的下面：\n\n```css\n.fake-content {\n  background-color: #a60000;\n  color: white;\n  padding: 10px;\n  height: 2000px;\n  margin-left: 470px;\n}\n```\n\n开始我们给这个内容和消息盒子面板一样的背景颜色，颜色，内边距。然后给他一个大的margin-left使他移动到右边，为消息盒子在左边腾出位置，以便于各个部分不重叠。\n\n这标志着第二个例子的结束；我们希望你能感到第三个例子，完全是因为兴趣。\n\n## 一个滑动隐藏的面板\n\n最后一个我们在这里介绍的例子是通过按图标使面板滑动出现或者消失——就像前面提到的，这种场景在移动端的布局很流行，因为移动端的屏幕很小，所以你不希望使用大部分界面来显示一个有用的内容而是用消息面板或者菜单代替。\n\n我们完工后的例子长这样：\n\n![hidden-sliding-panel]($res/hidden-sliding-panel.png)\n\n提示：你可以点击蓝字[hidden-info-panel.html](http://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/hidden-info-panel.html) ([source code](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel.html))预览完成后的效果，仔细看看哪些部分是你在这篇文章里你要制作的。\n\n在一开始，老规矩在我们的Githib代码仓库拷贝[hideen-info-panel-start.html](https://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/hidden-info-panel.html)([源码](https://github.com/mdn/learning-area/blob/master/css/css-layout/practical-positioning-examples/hidden-info-panel.html))。这个例子并没有用先前的例子，所以我们需要一个新的开始文件。让我们来仔细观察一下这个HTML文件：\n\n```css\n<label for=\"toggle\">❔</label>\n<input type=\"checkbox\" id=\"toggle\">\n<aside>\n\n  ...\n\n</aside>\n```\n\n`//label`的 for属性规定label属性绑定到哪个表单元素。\n\n开始，我们看到了一个label 元素和input元素——`<label>`元素普遍用来联系文字标签和表单，目的是能更好的理解表单（允许用户查看表单元素的描述）。这里通过for属性绑定id到了`<input>`标签的checkbox元素。\n\n提示：我们已经设置了一个特殊的问题标记特性到我们的HTML中，来当作我们的信息图标——这代表着这个按钮将可以按下显示或隐藏面板。\n\n现在我们使用这些元素稍稍不同的目的——另一个`<label>`标签有副作用使你能通过点击checkbox的label标签来选择这个checkbox，就好像点击了这个checkbox自己一样。这就会实现有名的checkbox hack 技术，可以提供无JS的方法来控制一个元素，通过一个按钮的联系。我们将控制的元素使aside元素，通过其他两个（为了简洁起见，我们已将其内容从上述代码列表中删除）。\n\n在下面的部分我们将解释这一切如何运作。\n\n### 设置表单元素样式\n\n首先让我们处理表单元素 - 在style标签之间添加以下CSS：\n\n```css\nlabel[for=\"toggle\"] {\n  font-size: 3rem;\n  position: absolute;\n  top: 4px;\n  right: 5px;\n  z-index: 1;\n  cursor: pointer;\n}\n\ninput[type=\"checkbox\"] {\n  position: absolute;\n  top: -100px;\n}\n```\n\n* 第一条label样式的规则，我们有：\n\n\t* 设置字体大小使图标更美观。\n\n\t* 设置为绝对定位，使用top属性和right属性来让他能很合适的位于右上角。\n\n\t* 设置z-index属性为1——因此当信息面板被赋予样式和显示的时候，不会覆盖我们的图标；相反图标依然会位于最上层能够再次被按下来隐藏信息平板。\n\n\t* 使用cursor属性来说改变鼠标的指针，当鼠标悬浮在图标上面的时候变成一个手形指针（就像你看到的当悬浮在链接上一样），作为一个额外的可视化线索告诉用户这个图标可以做一些有趣的事情。\n\n* 第二条规则是在实际的`<input>`checkbox元素上设置绝对定位属性，并隐藏在顶部的上面，我们并不希望在我们的用户界面里看到她。\n\n### 设置面板的样式\n\n现在是时候为实际的滑动面板设计风格了。在你的css底部添加下列规则：\n\n```css\naside {\n  background-color: #a60000;\n  color: white;\n\n  width: 340px;\n  height: 98%;\n  padding: 10px 1%;\n\n  position: fixed;\n  top: 0;\n  right: -370px;\n\n  transition: 0.6s all;\n}\n```\n这里有很多项——让我们一点一点讨论：\n\n* 首先，我们在信息盒子中设置了一些简单的背景颜色和颜色。\n\n* 然后，我们在面板上设置一个固定的宽度，让她的高度充满整个浏览器窗口的高度。\n\n* 我们同样包括一些内边距来组成我们小于那个要的高度和宽度总体的值（如果我们没有设置box-sizing：border-box来说的话是很必要的，正如这个例子）\n\n* 然后，我们设置面板的定位为fixed，即使页面的内容在滚动，也总是显示在同一个位置。我们把设置top属性让窗口粘在顶部，然后设置默认情况下远离屏幕，设置right属性使其位于屏幕的右边。\n\n* 最后我们设置transition属性，Transitions是一个有意思的特性，允许你在状态改变的时候平滑的过渡，而不是粗暴的“变”或“还原”。在这个例子中我们尝试在checkbox被选中时让面板平滑的滑动到屏幕上。（或者换句话说，当问题标记图标被点击以后——记住，点击<label>标签也会选择相对应的checkbox！我们已经告诉你这是一种hack了）你将会学到更多。。。\n\n### 设置选择后的状态\n\n这是最后的css添加——把这些放到你的css底部:\n\n```css\ninput[type=checkbox]:checked + aside {\n  right: 0px;\n}\n```\n\n这里的选择器是复杂的——我们选择`<input>`元素邻接的`<aside>`元素，但是仅仅在他被选择（请注意使用checked伪类来实现此目的），在这种情况下，我们将right属性设置为0px，会造成面板再次出现在屏幕上（由于过渡属性会平滑的出现）。再一次点击这个标签会取消选中checkbox，面板将会跟着再一次消失。\n\n所以你有它 ——一个相当巧妙的避免使用JavaScript来创建一个切换按钮效果方式。 这将在IE9及以上版本中起作用（平滑过渡将在IE10及更高版本中起作用）。这种效果确实有一些问题 ——这是有点滥用表单元素（它们不是为了这个目的），并且在可访问性方面效果不是很好 - 标签在默认情况下不可聚焦，并且表单元素的非语义使用可能会导致屏幕朗读器出现问题。 JavaScript和链接或按钮可能更合适，但这样的实验仍然很有趣。\n\n## 总结\n\n这样完成了我们对定位的关注——现在，你应该理解基本机制的工作原理，同样理解了怎样应用这些知识去构建一些有趣的用户界面功能，不要由于你还未完全理解所有的知识而担心——定位是一个相当高级的话题，你可以随时读这篇文章来帮助你的理解。下一个主题我们将转向Flexbox。\n\n",[[1528185054402,["Administrator@Tielemao",[[1,9727,"\n"]],[9727,9727],[9728,9728]]],[1528185054845,["Administrator@Tielemao",[[1,9728,"\n"]],[9728,9728],[9729,9729]]],[1528185055093,["Administrator@Tielemao",[[1,9729,"\n"]],[9729,9729],[9730,9730]]],[1528185055529,["Administrator@Tielemao",[[1,9730,"\n"]],[9730,9730],[9731,9731]]],[1528185057611,["Administrator@Tielemao",[[1,9731,"\n"]],[9728,9728],[9729,9729]]],[1528185062070,["Administrator@Tielemao",[[1,9729,"```html"]],[9729,9729],[9736,9736]]],[1528185062896,["Administrator@Tielemao",[[1,9739,"\n"]],[9736,9736],[9737,9737]]],[1528185064098,["Administrator@Tielemao",[[1,9737,"```"]],[9737,9737],[9740,9740]]],[1528185068979,["Administrator@Tielemao",[[1,9737,"\n"]],[9736,9736],[9737,9737]]],[1528185071444,["Administrator@Tielemao",[[1,9737,"<!DOCTYPE html>\r\n<html lang=\"en-us\">\r\n<head>\r\n\t<meta charset=\"utf-8\">\r\n\t<title>Hidden info panel</title>\r\n\r\n  <style>\r\n    /* || Checkbox hack to control information box display */\r\n    label[for=\"toggle\"] {\r\n      font-size: 3rem;\r\n      position: absolute;\r\n      top: 4px;\r\n      right: 5px;\r\n      z-index: 1;\r\n      cursor: pointer;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n       position: absolute;\r\n       top: -100px;\r\n    }\r\n    /* information box styling */\r\n    aside {\r\n      background-color: #a60000;\r\n      color: white;\r\n      width: 340px;\r\n      height: 100%;\r\n      padding: 0 20px;\r\n      position: fixed;\r\n      top: 0;\r\n      right: -370px;\r\n      transition: 0.6s all;\r\n    }\r\n    /* Second part of the checkbox hack — the checked state */\r\n    input[type=checkbox]:checked + aside {\r\n      right: 0px;\r\n    }\r\n  </style>\r\n\r\n</head>\r\n<body>\r\n\r\n\r\n  <label for=\"toggle\">?</label>\r\n  <input type=\"checkbox\" id=\"toggle\">\r\n  <aside>\r\n    <h2>Information</h2>\r\n\r\n    <p>Some very important information about your app:</p>\r\n\r\n    <ol>\r\n      <li>It has a really cool slide-out information box.</li>\r\n      <li>This information box uses a combination of fixed positioning and a CSS transition for the smooth sliding.</li>\r\n      <li>It also uses a cool technique called the <a href=\"https://css-tricks.com/the-checkbox-hack/\">checkbox hack</a>.</li>\r\n      <li>This allows you to create a nice \"toggle on/toggle off\" UI effect without using any JavaScript, which will work in IE9 and above (the smooth transition will work in IE10 and above.)</li>\r\n\r\n    </ol>\r\n\r\n  </aside>\r\n</body>\r\n</html>"]],[9737,9737],[11342,11342]]],[1528185080947,["Administrator@Tielemao",[[-1,9752,"\r"],[-1,9773,"\r"],[-1,9781,"\r"],[-1,9806,"\r"],[-1,9841,"\r"],[-1,9843,"\r"],[-1,9854,"\r"],[-1,9917,"\r"],[-1,9944,"\r"],[-1,9968,"\r"],[-1,9995,"\r"],[-1,10012,"\r"],[-1,10031,"\r"],[-1,10050,"\r"],[-1,10074,"\r"],[-1,10081,"\r"],[-1,10111,"\r"],[-1,10139,"\r"],[-1,10160,"\r"],[-1,10167,"\r"],[-1,10202,"\r"],[-1,10215,"\r"],[-1,10249,"\r"],[-1,10270,"\r"],[-1,10291,"\r"],[-1,10312,"\r"],[-1,10336,"\r"],[-1,10360,"\r"],[-1,10375,"\r"],[-1,10397,"\r"],[-1,10426,"\r"],[-1,10433,"\r"],[-1,10497,"\r"],[-1,10541,"\r"],[-1,10560,"\r"],[-1,10567,"\r"],[-1,10579,"\r"],[-1,10581,"\r"],[-1,10590,"\r"],[-1,10598,"\r"],[-1,10600,"\r"],[-1,10602,"\r"],[-1,10635,"\r"],[-1,10674,"\r"],[-1,10685,"\r"],[-1,10711,"\r"],[-1,10713,"\r"],[-1,10773,"\r"],[-1,10775,"\r"],[-1,10785,"\r"],[-1,10849,"\r"],[-1,10971,"\r"],[-1,11099,"\r"],[-1,11297,"\r"],[-1,11299,"\r"],[-1,11310,"\r"],[-1,11312,"\r"],[-1,11324,"\r"],[-1,11333,"\r"],[1,11343,""],[-1,11346,"\n"]],[11289,11289],[11288,11288]]],[1528185312346,["Administrator@Tielemao",[[1,13646,"\n"]],[13644,13644],[13645,13645]]],[1528185312579,["Administrator@Tielemao",[[1,13647,"\n"]],[13645,13645],[13646,13646]]],[1528185313692,["Administrator@Tielemao",[[1,13646,"jb"]],[13646,13646],[13648,13648]]],[1528185314310,["Administrator@Tielemao",[[-1,13646,"jb"]],[13648,13648],[13646,13646]]],[1528185322573,["Administrator@Tielemao",[[1,13646,"最后完成的代码如下："]],[13646,13646],[13656,13656]]],[1528185324305,["Administrator@Tielemao",[[1,13658,"\n"]],[13656,13656],[13657,13657]]],[1528185328181,["Administrator@Tielemao",[[1,13657,"（另外这遝"]],[13657,13657],[13662,13662]]],[1528185328964,["Administrator@Tielemao",[[-1,13661,"遝"]],[13662,13662],[13661,13661]]],[1528185333875,["Administrator@Tielemao",[[1,13661,"里我使用了？"]],[13661,13661],[13667,13667]]],[1528185335495,["Administrator@Tielemao",[[1,13666,"‘"]],[13666,13666],[13667,13667]]],[1528185337409,["Administrator@Tielemao",[[1,13668,"’"]],[13668,13668],[13669,13669]]],[1528185339458,["Administrator@Tielemao",[[-1,13666,"‘？’"]],[13669,13669],[13666,13666]]],[1528185350131,["Administrator@Tielemao",[[1,13666,"`?`来取代那个"]],[13666,13666],[13674,13674]]],[1528185360581,["Administrator@Tielemao",[[1,13674,"问号的图标，效果是一样的。）"]],[13674,13674],[13688,13688]]],[1528185361066,["Administrator@Tielemao",[[1,13690,"\n"]],[13688,13688],[13689,13689]]],[1528185395549,["Administrator@Tielemao",[[1,13689,"```"]],[13689,13689],[13692,13692]]],[1528185396274,["Administrator@Tielemao",[[1,13694,"\n"]],[13692,13692],[13693,13693]]],[1528185397082,["Administrator@Tielemao",[[-1,13694,"\n"]],[13693,13693],[13692,13692]]],[1528185398268,["Administrator@Tielemao",[[1,13692,"html"]],[13692,13692],[13696,13696]]],[1528185399116,["Administrator@Tielemao",[[1,13698,"\n"]],[13696,13696],[13697,13697]]],[1528185400312,["Administrator@Tielemao",[[1,13697,"```"]],[13697,13697],[13700,13700]]],[1528185404105,["Administrator@Tielemao",[[1,13697,"\n"]],[13696,13696],[13697,13697]]],[1528185405356,["Administrator@Tielemao",[[1,13697,"<!DOCTYPE html>\r\n<html lang=\"en-us\">\r\n<head>\r\n\t<meta charset=\"utf-8\">\r\n\t<title>Hidden info panel</title>\r\n\r\n  <style>\r\n    /* || Checkbox hack to control information box display */\r\n    label[for=\"toggle\"] {\r\n      font-size: 3rem;\r\n      position: absolute;\r\n      top: 4px;\r\n      right: 5px;\r\n      z-index: 1;\r\n      cursor: pointer;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n       position: absolute;\r\n       top: -100px;\r\n    }\r\n    /* information box styling */\r\n    aside {\r\n      background-color: #a60000;\r\n      color: white;\r\n      width: 340px;\r\n      height: 98%;\r\n      padding: 10px 1%;\r\n      position: fixed;\r\n      top: 0;\r\n      right: -370px;\r\n      transition: 0.6s all;\r\n    }\r\n    /* Second part of the checkbox hack — the checked state */\r\n    input[type=checkbox]:checked + aside {\r\n      right: 0px;\r\n    }\r\n  </style>\r\n\r\n</head>\r\n<body>\r\n\r\n\r\n  <label for=\"toggle\">?</label>\r\n  <input type=\"checkbox\" id=\"toggle\">\r\n  <aside>\r\n    <h2>Information</h2>\r\n\r\n    <p>Some very important information about your app:</p>\r\n\r\n    <ol>\r\n      <li>It has a really cool slide-out information box.</li>\r\n      <li>This information box uses a combination of fixed positioning and a CSS transition for the smooth sliding.</li>\r\n      <li>It also uses a cool technique called the <a href=\"https://css-tricks.com/the-checkbox-hack/\">checkbox hack</a>.</li>\r\n      <li>This allows you to create a nice \"toggle on/toggle off\" UI effect without using any JavaScript, which will work in IE9 and above (the smooth transition will work in IE10 and above.)</li>\r\n\r\n    </ol>\r\n\r\n  </aside>\r\n</body>\r\n</html>"]],[13697,13697],[15302,15302]]],[1528185408132,["Administrator@Tielemao",[[1,13689,"\n"],[-1,13712,"\r"],[-1,13733,"\r"],[-1,13741,"\r"],[-1,13766,"\r"],[-1,13801,"\r"],[-1,13803,"\r"],[-1,13814,"\r"],[-1,13877,"\r"],[-1,13904,"\r"],[-1,13928,"\r"],[-1,13955,"\r"],[-1,13972,"\r"],[-1,13991,"\r"],[-1,14010,"\r"],[-1,14034,"\r"],[-1,14041,"\r"],[-1,14071,"\r"],[-1,14099,"\r"],[-1,14120,"\r"],[-1,14127,"\r"],[-1,14162,"\r"],[-1,14175,"\r"],[-1,14209,"\r"],[-1,14230,"\r"],[-1,14251,"\r"],[-1,14271,"\r"],[-1,14296,"\r"],[-1,14320,"\r"],[-1,14335,"\r"],[-1,14357,"\r"],[-1,14386,"\r"],[-1,14393,"\r"],[-1,14457,"\r"],[-1,14501,"\r"],[-1,14520,"\r"],[-1,14527,"\r"],[-1,14539,"\r"],[-1,14541,"\r"],[-1,14550,"\r"],[-1,14558,"\r"],[-1,14560,"\r"],[-1,14562,"\r"],[-1,14595,"\r"],[-1,14634,"\r"],[-1,14645,"\r"],[-1,14671,"\r"],[-1,14673,"\r"],[-1,14733,"\r"],[-1,14735,"\r"],[-1,14745,"\r"],[-1,14809,"\r"],[-1,14931,"\r"],[-1,15059,"\r"],[-1,15257,"\r"],[-1,15259,"\r"],[-1,15270,"\r"],[-1,15272,"\r"],[-1,15284,"\r"],[-1,15293,"\r"]],[13688,13688],[13689,13689]]],[1528185416599,["Administrator@Tielemao",[[1,15250,"\n"]],[15249,15249],[15250,15250]]],[1528185422182,["Administrator@Tielemao",[[1,15249,"uqt"]],[15249,15249],[15252,15252]]],[1528185422898,["Administrator@Tielemao",[[-1,15249,"uqt"]],[15252,15252],[15249,15249]]],[1528185427534,["Administrator@Tielemao",[[1,15249,"效果图："]],[15249,15249],[15253,15253]]],[1528185429791,["Administrator@Tielemao",[[1,15249,"gif"]],[15249,15249],[15252,15252]]],[1528185431527,["Administrator@Tielemao",[[1,15258,"\n"]],[15256,15256],[15257,15257]]],[1528185645808,["Administrator@Tielemao",[[1,15258,"![js-hidden]($res/js-hidden.gif)\n\n"]],[15257,15257],[15291,15291]]],[1528185651263,["Administrator@Tielemao",[[1,15433,"\n"]],[15432,15432],[15433,15433]]],[1528185652850,["Administrator@Tielemao",[[-1,15433,"\n"],[1,15434,"end"]],[15433,15433],[15436,15436]]],[1528185656077,["Administrator@Tielemao",[[1,15433,"【"]],[15433,15433],[15434,15434]]],[1528185658121,["Administrator@Tielemao",[[1,15437,"】"]],[15437,15437],[15438,15438]]],[1528185674462,["Administrator@Tielemao",[[1,17,"[toc]"]],[17,17],[22,22]]],[1528185676886,["Administrator@Tielemao",[[1,23,"\n"]],[22,22],[23,23]]],[1528185679011,["Administrator@Tielemao",[[1,17,"\n"]],[17,17],[18,18]]],[1528185681809,["Administrator@Tielemao",[[1,19,"["]],[19,19],[20,20]]],[1528185683874,["Administrator@Tielemao",[[1,24,"]"]],[23,23],[24,24]]],[1528185711840,["Administrator@Tielemao",[[1,18,"\n"]],[16,16],[17,17]]],[1528185712802,["Administrator@Tielemao",[[1,17,"注：全文摘自[MDN-CSS定位](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/%E5%AE%9A%E4%BD%8D)"]],[17,17],[116,116]]],[1528185716784,["Administrator@Tielemao",[[1,33,"pu"]],[33,33],[35,35]]],[1528185717276,["Administrator@Tielemao",[[-1,33,"pu"]],[35,35],[33,33]]],[1528185719281,["Administrator@Tielemao",[[1,33,"实例"]],[33,33],[35,35]]],[1528185742365,["Administrator@Tielemao",[[-1,99,"%E5%AE%9A%E4%BD%8D"],[1,117,"Practical_positioning_examples"]],[37,117],[129,129]]]]]]}