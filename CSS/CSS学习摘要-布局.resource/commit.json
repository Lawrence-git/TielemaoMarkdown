{"compress":true,"commitItems":[["2065d770-7318-4a15-af64-d2202f9dc141",1528098062965,"",[[1528098004455,["Administrator@Tielemao",[[1,0,"CSS页面布局技术允许我们拾取网页中的元素，并且控制它们相对正常布局流、周边元素、父容器或者主视口/窗口的位置。在这个模块中将涉及更多关于页面[布局技术](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Layout_mode)的细节：\n\n*   浮动\n*   定位\n*   CSS 表格\n*   弹性盒子\n*   网格\n\n每种技术都有它们的用途，各有优缺点。"]],[0,0],[205,205]]],[1528098024497,["Administrator@Tielemao",[[1,205,"\n\n"]],[205,205],[206,206]]],[1528098024863,["Administrator@Tielemao",[[1,207,"\n"]],[206,206],[207,207]]],[1528098026324,["Administrator@Tielemao",[[1,207,"## 正常布局流[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E6%AD%A3%E5%B8%B8%E5%B8%83%E5%B1%80%E6%B5%81)\n\n正常布局流是指在不对页面进行任何布局控制时，浏览器默认的HTML布局方式。让我们快速地看一个HTML的例子：\n\n```html\n<p>I love my cat.</p>\n\n<ul>\n  <li>Buy cat food</li>\n  <li>Exercise</li>\n  <li>Cheer up friend</li>\n</ul>\n\n<p>The end!</p>\n```\n\n默认情况下，浏览器的显示如下:"]],[207,207],[556,556]]],[1528098029340,["Administrator@Tielemao",[[-1,215,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E6%AD%A3%E5%B8%B8%E5%B8%83%E5%B1%80%E6%B5%81)"]],[215,348],[215,215]]],[1528098730253,["Administrator@Tielemao",[[1,424,"\n"]],[423,423],[424,424]]],[1528098738318,["Administrator@Tielemao",[[1,425,"![css-layout01]($res/css-layout01.jpg)\n\n"]],[424,424],[464,464]]],[1528098741717,["Administrator@Tielemao",[[1,465,"\n"]],[464,464],[465,465]]],[1528098757877,["Administrator@Tielemao",[[1,465,"注意，HTML元素完全按照源码中出现的先后次序显示——第一个段落、无序列表、第二个段落。\n\n布局技术会覆盖默认的布局行为：\n\n*   [`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") 属性 — 正常布局流中，默认为 `static` ，使用其它值会引起元素不同的布局方式，例如将元素固定到浏览器视口的左上角。\n*   浮动——应用 [`float`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/float \"此页面仍未被本地化, 期待您的翻译!\") 值，诸如 `left` 能够让块级元素互相并排成一行，而不是一个堆叠在另一个上面。\n*   [`display`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display \"display CSS属性指定用于元素的呈现框的类型。在 HTML 中，默认的 display 属性取决于 HTML 规范所描述的行为或浏览器/用户的默认样式表。在 XML中，其默认值为 inline。\") 属性——标准值 `block`, `inline` or `inline-block` 会改变元素在正常布局流中的行为方式(见 [Types of CSS boxes](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model#Types_of_CSS_boxes) )，而一些不常见或特殊的值允许我们使用完全不同的方式进行布局，使用工具比如Flexbox。"]],[465,465],[1290,1290]]],[1528098797690,["Administrator@Tielemao",[[-1,654," "],[1,655," "],[-1,677," "],[1,678," "],[-1,693," "],[1,694," "],[-1,702," "],[1,703," "],[-1,751," "],[1,752," "],[-1,760,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/float \"此页面仍未被本地化, 期待您的翻译!\") "],[-1,843," "],[1,844," "],[-1,850," "],[1,851," "],[-1,994," "],[1,995," "],[-1,1002," "],[1,1003," "],[-1,1048," "],[1,1049," "],[-1,1058," "],[1,1059," "],[-1,1066," "],[1,1067," "],[-1,1075," "],[1,1076," "],[-1,1084," or "],[1,1088," or "],[-1,1102," "],[1,1103," "],[-1,1122," "],[1,1123," "],[-1,1244," "],[1,1245," "]],[760,839],[760,760]]],[1528098799218,["Administrator@Tielemao",[[-1,752,"["]],[753,753],[752,752]]],[1528098803271,["Administrator@Tielemao",[[-1,543,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") "]],[543,678],[543,543]]],[1528098804602,["Administrator@Tielemao",[[-1,532,"["]],[533,533],[532,532]]],[1528098808966,["Administrator@Tielemao",[[-1,679,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display \"display CSS属性指定用于元素的呈现框的类型。在 HTML 中，默认的 display 属性取决于 HTML 规范所描述的行为或浏览器/用户的默认样式表。在 XML中，其默认值为 inline。\")"]],[679,842],[679,679]]],[1528098810304,["Administrator@Tielemao",[[-1,669,"["]],[670,670],[669,669]]],[1528098883725,["Administrator@Tielemao",[[-1,770,"//developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model#Types_of_CSS_boxes) )"]],[797,866],[770,770]]],[1528098894715,["Administrator@Tielemao",[[1,770,"//developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model#Types_of_CSS_boxes) )"]],[770,770],[797,866]]],[1528099000556,["Administrator@Tielemao",[[1,911,"\n"]],[910,910],[911,911]]],[1528099000857,["Administrator@Tielemao",[[1,912,"\n"]],[911,911],[912,912]]],[1528099001586,["Administrator@Tielemao",[[1,912,"## 浮动[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E6%B5%AE%E5%8A%A8)\n\n浮动技术允许元素浮动到另外一个元素的左侧或右侧，而不是默认的一个堆叠另一个。float 的主要用途是布置出多个列并且浮动文字以环绕图片。下面我们快速浏览一下 [`float`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/float \"此页面仍未被本地化, 期待您的翻译!\") 属性并通过一个例子来说明。\n\nfloat 属性有四个可能的值：\n\n*   `left` — 将元素浮动到左侧。\n*   `right` — 将元素浮动到右侧。\n*   `none` — 默认值, 不浮动。\n*   inherit — 继承父元素的浮动属性。\n\n### 简单HTML示例\n\n下面展示了如何用浮动来创建一个简单的两列布局。首先看一下HTML：\n\n```html\n<h1>2 column layout example</h1>\n<div>\n  <h2>First column</h2>\n  <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla luctus aliquam dolor, eu lacinia lorem placerat vulputate. </p>\n</div>\n\n<div>\n  <h2>Second column</h2>\n  <p>Nam vulputate diam nec tempor bibendum. Donec luctus augue eget malesuada ultrices. Phasellus turpis est, posuere sit amet dapibus ut.</p>\n</div>\n```\n\n代码中有一个一级标题和两个简单的 `<div>`元素。每个又各自包含一个二级标题和一个段落。默认情况下。HTML内容自上而下显示："]],[912,912],[1834,1834]]],[1528099005430,["Administrator@Tielemao",[[-1,917,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E6%B5%AE%E5%8A%A8)"],[-1,1103," "],[1,1104," "],[-1,1190," "],[1,1191," "],[-1,1234," "],[1,1235," "],[-1,1258," "],[1,1259," "],[-1,1281," "],[1,1282," "],[-1,1785," "],[1,1786," "]],[917,1023],[917,917]]],[1528099027649,["Administrator@Tielemao",[[-1,208,"#"]],[209,209],[208,208]]],[1528099031979,["Administrator@Tielemao",[[-1,912,"#"]],[913,913],[912,912]]],[1528099050112,["Administrator@Tielemao",[[1,912,"#"]],[912,912],[913,913]]],[1528099053008,["Administrator@Tielemao",[[1,208,"#"]],[208,208],[209,209]]],[1528099062782,["Administrator@Tielemao",[[-1,1006,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/float \"此页面仍未被本地化, 期待您的翻译!\")"]],[1006,1084],[1006,1006]]],[1528099064123,["Administrator@Tielemao",[[-1,998,"["]],[999,999],[998,998]]],[1528099082249,["Administrator@Tielemao",[[1,1650,"\n"]],[1649,1649],[1650,1650]]],[1528099082583,["Administrator@Tielemao",[[1,1651,"\n"]],[1650,1650],[1651,1651]]],[1528099133267,["Administrator@Tielemao",[[1,1652,"![css-layout02]($res/css-layout02.jpg)\n\n"]],[1651,1651],[1691,1691]]],[1528099135921,["Administrator@Tielemao",[[-1,1651,"\n"]],[1651,1651],[1650,1650]]],[1528099137086,["Administrator@Tielemao",[[1,1691,"\n"]],[1690,1690],[1691,1691]]],[1528099152000,["Administrator@Tielemao",[[1,1691,"### 整列浮动\n\n下面让我们将两个  `<div>`元素排成一行。下面的代码可以实现这个效果. 注意这两个 `<div>`一个浮动值为 `left`，另外一个浮动为 `right`。这意味着它们其中一个往左靠，另外一个往右靠。给这两个元素分别设置 [`width`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\") 值，使得它们能够在同一行放下来，并且设置一个水平的间距(总宽度不要大于100!).\n\n```css\ndiv:nth-of-type(1) {\n  width: 48%;\n  float: left;\n}\n\ndiv:nth-of-type(2) {\n  width: 48%;\n  float: right;\n}\n```\n\n修改过的代码如下："]],[1691,1691],[2106,2106]]],[1528099165427,["Administrator@Tielemao",[[-1,1710," "],[1,1711," "],[-1,1745," "],[1,1746," "],[-1,1759," "],[1,1760," "],[-1,1774," "],[1,1775," "],[-1,1815," "],[1,1816," "],[-1,1824,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/width \"width 属性指定了元素内容区的宽度. 内容区在元素padding，border和margin里面。\") "]],[1824,1936],[1824,1824]]],[1528099167832,["Administrator@Tielemao",[[-1,1816,"["]],[1817,1817],[1816,1816]]],[1528099183233,["Administrator@Tielemao",[[-1,1983,"\n"]],[1983,1983],[1982,1982]]],[1528099185212,["Administrator@Tielemao",[[1,1993,"\n"]],[1992,1992],[1993,1993]]],[1528099185482,["Administrator@Tielemao",[[1,1994,"\n"]],[1993,1993],[1994,1994]]],[1528099235814,["Administrator@Tielemao",[[1,1995,"![css-layout03]($res/css-layout03.jpg)\n\n"]],[1994,1994],[2034,2034]]],[1528099238525,["Administrator@Tielemao",[[-1,1994,"\n"]],[1994,1994],[1993,1993]]],[1528099239602,["Administrator@Tielemao",[[1,2034,"\n"]],[2032,2032],[2033,2033]]],[1528099239800,["Administrator@Tielemao",[[1,2035,"\n"]],[2033,2033],[2034,2034]]],[1528099255867,["Administrator@Tielemao",[[1,2034,"## 定位技术[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E5%AE%9A%E4%BD%8D%E6%8A%80%E6%9C%AF)\n\n定位技术(position)允许我们将一个元素从它在页面的原始位置准确地移动到另外一个位置。\n\n有四种主要的定位类型需要我们了解：\n\n*   **静态定位(Static positioning)**是每个元素默认的属性——它表示“将元素放在文档布局流的默认位置——没有什么特殊的地方”。\n*   **相对定位(Relative positioning)**允许我们相对元素在正常的文档流中的位置移动它——包括将两个元素叠放在页面上。这对于微调和精准设计(design pinpointing)非常有用。\n*   **绝对定位(Absolute positioning)**将元素完全从页面的正常布局流中移出，类似将它单独放在一个图层中. 我们可以将元素相对于页面的 `<html>` 元素边缘固定，或者相对于离元素最近的被定位的祖先元素(ancestor element)。绝对定位在创建复杂布局效果时非常有用，例如通过标签显示和隐藏的内容面板或者通过按钮控制滑动到屏幕中的信息面板.\n*   **固定定位(Fixed positioning)**与绝对定位非常类似，除了它是将一个元素相对浏览器视口固定，而不是相对另外一个元素。 在创建类似页面滚动总是处于页面上方的导航菜单时非常有用。\n\n### 简单定位示例\n\n我们将展示一些示例代码来熟悉这些布局技术. 这些示例代码都作用在相同的HTML上：\n\n```html\n<h1>Positioning</h1>\n\n<p>I am a basic block level element.</p>\n<p class=\"positioned\">I am a basic block level element.</p>\n<p>I am a basic block level element.</p>\n```\n\n该HTML将使用以下CSS默认样式：\n\n```css\nbody {\n  width: 500px;\n  margin: 0 auto;\n}\n\np {\n  background: aqua;\n  border: 3px solid blue;\n  padding: 10px;\n  margin: 10px;\n}\n\nspan {\n  background: red;\n  border: 1px solid black;\n}\n```\n\n渲染效果如下:"]],[2034,2034],[3169,3169]]],[1528099259850,["Administrator@Tielemao",[[-1,2041,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E5%AE%9A%E4%BD%8D%E6%8A%80%E6%9C%AF)"],[-1,2499," "],[1,2500," "],[-1,2508," "],[1,2509," "],[-1,2682," "],[1,2683," "]],[2041,2165],[2041,2041]]],[1528099278320,["Administrator@Tielemao",[[1,2142," "]],[2142,2142],[2143,2143]]],[1528099281650,["Administrator@Tielemao",[[1,2222," "]],[2222,2222],[2223,2223]]],[1528099283802,["Administrator@Tielemao",[[1,2331," "]],[2331,2331],[2332,2332]]],[1528099285591,["Administrator@Tielemao",[[1,2520," "]],[2520,2520],[2521,2521]]],[1528099314691,["Administrator@Tielemao",[[-1,2824,"\n"]],[2824,2824],[2823,2823]]],[1528099369168,["Administrator@Tielemao",[[1,3050,"\n"]],[3049,3049],[3050,3050]]],[1528099377697,["Administrator@Tielemao",[[1,3050,"![css-layout04]($res/css-layout04.jpg)\n\n"]],[3049,3049],[3089,3089]]],[1528099380063,["Administrator@Tielemao",[[1,3091,"\n"]],[3089,3089],[3090,3090]]],[1528099392080,["Administrator@Tielemao",[[1,3090,"### 相对定位\n\n相对定位通常用来对布局进行微调，比如将一个图标往下调一点，以便放置文字. 我们可以通过下面的规则添加相对定位来实现效果: \n\n```html\n.positioned {\n  position: relative;\n  background: yellow;\n  top: 30px;\n  left: 30px;\n}\n```\n\n这里我们给中间段落一个[`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") `relative`值——这属性本身不做任何事情，所以我们还添加了[`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\")和[`left`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/left \"CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。\")属性。这些可以将受影响的元素向下向右移——这可能看起来和你所期待的相反，但你需要把它看成是左边和顶部的元素被“推开”一定距离，这就导致了它的向下向右移动。\n\n添加此代码将给出以下结果："]],[3090,3090],[3775,3775]]],[1528099425780,["Administrator@Tielemao",[[-1,3160," "],[1,3161," "],[-1,3285,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\") "],[-1,3633," "],[1,3634," "]],[3285,3420],[3285,3285]]],[1528099429023,["Administrator@Tielemao",[[-1,3274,"["]],[3275,3275],[3274,3274]]],[1528099451264,["Administrator@Tielemao",[[-1,3317,"["]],[3318,3318],[3317,3317]]],[1528099457032,["Administrator@Tielemao",[[-1,3322,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\")"]],[3322,3428],[3322,3322]]],[1528099461671,["Administrator@Tielemao",[[-1,3330,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/left \"CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。\")"]],[3330,3440],[3330,3330]]],[1528099463482,["Administrator@Tielemao",[[-1,3323,"["]],[3324,3324],[3323,3323]]],[1528099518488,["Administrator@Tielemao",[[1,3423,"![css-layout05]($res/css-layout05.jpg)\n\n"]],[3422,3422],[3462,3462]]],[1528099520754,["Administrator@Tielemao",[[1,3463,"\n"]],[3462,3462],[3463,3463]]],[1528099531306,["Administrator@Tielemao",[[1,3463,"### 绝对定位\n\n绝对定位用于将元素移动到web页面的任何位置，以创建复杂的布局。有趣的是，它经常被用于与相对定位和浮动的协同工作。\n\n回到我们最初的非定位示例，我们可以添加以下的CSS规则来实现绝对定位：\n\n```css\n.positioned {\n  position: absolute;\n  background: yellow;\n  top: 30px;\n  left: 30px;\n}\n```\n\n这里我们给我们的中间段一个[`position`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")的 `absolute`值，并且和前面一样加上 [`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") 和[`left`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/left \"CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。\") 属性。但是，添加此代码将给出以下结果："]],[3463,3463],[4101,4101]]],[1528099541212,["Administrator@Tielemao",[[-1,3681,"["],[-1,3803," "],[1,3804," "],[-1,3827," "],[1,3828," "],[-1,3849," "],[1,3850," "],[-1,3962," "],[1,3963," "],[-1,4031," "],[1,4032," "],[-1,4081," "],[1,4082," "]],[3682,3682],[3681,3681]]],[1528099545817,["Administrator@Tielemao",[[-1,3691,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/position \"CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。\")"]],[3691,3825],[3691,3691]]],[1528099550219,["Administrator@Tielemao",[[-1,3715,"["]],[3716,3716],[3715,3715]]],[1528099555864,["Administrator@Tielemao",[[-1,3720,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\") "]],[3720,3827],[3720,3720]]],[1528099557514,["Administrator@Tielemao",[[-1,3721,"["]],[3722,3722],[3721,3721]]],[1528099560316,["Administrator@Tielemao",[[-1,3727,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/left \"CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。\") "]],[3727,3838],[3727,3727]]],[1528099563909,["Administrator@Tielemao",[[1,3747,"\n"]],[3746,3746],[3747,3747]]],[1528099564441,["Administrator@Tielemao",[[1,3748,"\n"]],[3747,3747],[3748,3748]]],[1528099636958,["Administrator@Tielemao",[[1,3749,"![css-layout06]($res/css-layout06.jpg)\n\n"]],[3748,3748],[3788,3788]]],[1528099639818,["Administrator@Tielemao",[[-1,3748,"\n"]],[3748,3748],[3747,3747]]],[1528099641087,["Administrator@Tielemao",[[1,3788,"\n"]],[3787,3787],[3788,3788]]],[1528099661921,["Administrator@Tielemao",[[1,3788,"这和之前截然不同！定位元素现在已经与页面布局的其余部分完全分离，并位于页面的顶部。其他两段现在靠在一起，好像之前那个中间段落不存在一样。[`top`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\")和[`left`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/left \"CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。\")属性对绝对位置元素的影响不同于相对位置元素。在这种情况下，他们没有指定元素相对于原始位置的移动程度。相反，它们指定元素应该从页面边界的顶部和左边的距离(确切地说，是 `<html>`元素的距离)。\n\n我们现在暂时不讨论固定定位（ fixed positioning ）——它基本上以相同的方式工作，除了它仍然固定在浏览器窗口的边缘，而不是它定位的父节点的边缘。"]],[3788,3788],[4266,4266]]],[1528099668803,["Administrator@Tielemao",[[-1,3856,"["],[-1,4036," "],[1,4037," "],[-1,4168," "],[1,4169," "]],[3857,3857],[3856,3856]]],[1528099672640,["Administrator@Tielemao",[[-1,3861,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/top \"top样式属性定义了定位元素的上外边距边界与其包含块上边界之间的偏移，非定位元素设置此属性无效。\")"]],[3861,3967],[3861,3861]]],[1528099674152,["Administrator@Tielemao",[[-1,3862,"["]],[3863,3863],[3862,3862]]],[1528099677058,["Administrator@Tielemao",[[-1,3868,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/left \"CSS left属性定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效。\")"]],[3868,3978],[3868,3868]]],[1528099681267,["Administrator@Tielemao",[[1,4049,"\n"]],[4048,4048],[4049,4049]]],[1528099681523,["Administrator@Tielemao",[[1,4050,"\n"]],[4049,4049],[4050,4050]]],[1528099695535,["Administrator@Tielemao",[[1,4050,"## CSS 表格[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#CSS_%E8%A1%A8%E6%A0%BC)\n\nHTML表格对于显示表格数据是很好的，但是很多年前——在浏览器中支持基本的CSS之前——web开发人员过去也常常使用表格来完成整个网页布局——将它们的页眉、页脚、不同的列等等放在不同的表行和列中。这在当时是有效的，但它有很多问题——表布局是不灵活的，非常重的标记，难以调试和语义上的错误（比如，屏幕阅读器用户在导航表布局方面有问题）。\n\nCSS表格的存在是为了让您能够像表格一样布局元素，而不需要上面描述的任何问题——这听起来可能有些奇怪，您应该使用表格元素作为表格数据，但有时这可能是有用的。例如，您可能想要列出一个表单，其中有标签和文本输入；这可能很棘手，但是CSS表使其变得容易。\n\n让我们来看一个例子。首先，创建HTML表单的一些简单标记。每个输入元素都有一个标签，我们还在一个段落中包含了一个标题。为了进行布局，每个标签/输入对都封装在[`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")中。\n\n```html\n<form>\n  <p>First of all, tell us your name and age.</p>\n  <div>\n    <label for=\"fname\">First name:</label>\n    <input type=\"text\" id=\"fname\">\n  </div>\n  <div>\n    <label for=\"lname\">Last name:</label>\n    <input type=\"text\" id=\"lname\">\n  </div>\n  <div>\n    <label for=\"age\">Age:</label>\n    <input type=\"text\" id=\"age\">\n  </div>\n</form>\n```\n\n现在，我们例子中的CSS。除了使用 [`display`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display \"display CSS属性指定用于元素的呈现框的类型。在 HTML 中，默认的 display 属性取决于 HTML 规范所描述的行为或浏览器/用户的默认样式表。在 XML中，其默认值为 inline。\") 属性外，大多数CSS都是相当普通的。 [`<form>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form \"HTML <form> 元素 表示了文档中的一个区域，这个区域包含有交互控制元件，用来向web服务器提交信息。\"), [`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\"),  [`<label>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label \"HTML 元素表示用户界面中项目的标题。\")和[`<input>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input \"HTML <input> 元素用于为基于Web的表单创建交互式控件，以便接受来自用户的数据。\")被告知要分别显示表、表行和表单元——基本上，它们会像HTML表格标记一样，导致标签和输入在默认情况下排列整齐。我们所要做的就是添加一些大小、边缘等等，让一切看起来都好一点，我们就完成了。\n\n你会注意到标题段落已经给出了 `display: table-caption;`——这使得它看起来就像一个表格[`<caption>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/caption \"HTML <caption> 元素 (or HTML 表格标题元素) 展示一个表格的标题， 它常常作为 <table> 的第一个子元素出现，同时显示在表格内容的最前面，但是，它同样可以被CSS样式化，所以，它同样可以出现在任何一个一个相对于表格的做任意位置。\") ——和`caption-side: bottom;` 让标题在表格的底部下进行设计，即使标记是在源的输入之前。这就能让你有一点灵活的弹性。\n\n```css\nhtml {\n  font-family: sans-serif;\n}\n\nform {\n  display: table;\n  margin: 0 auto;\n}\n\nform div {\n  display: table-row;\n}\n\nform label, form input {\n  display: table-cell;\n  margin-bottom: 10px;\n}\n\nform label {\n  width: 200px;\n  padding-right: 5%;\n  text-align: right;\n}\n\nform input {\n  width: 300px;\n}\n\nform p {\n  display: table-caption;\n  caption-side: bottom;\n  width: 300px;\n  color: #999;\n  font-style: italic;\n}\n```\n\n结果如下："]],[4050,4050],[6850,6850]]],[1528099729734,["Administrator@Tielemao",[[-1,4059,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#CSS_%E8%A1%A8%E6%A0%BC)"],[1,4169,""],[-1,4633," "],[1,4634," "],[-1,4709," "],[1,4710," "],[-1,4715," 或 "],[1,4718," 或 "],[-1,4774," "],[1,4775," "],[-1,4790," "],[1,4791," "],[-1,5173," "],[1,5174," "],[-1,5283," "],[1,5284," "],[-1,5291," "],[1,5292," "],[-1,5337," "],[1,5338," "],[-1,5347," "],[1,5348," "],[-1,5366," "],[1,5367," "],[-1,5453," "],[1,5454," "],[-1,5500," "],[1,5501," "],[-1,5590," "],[1,5591," "],[-1,5666," "],[1,5667," "],[-1,5672," 或 "],[1,5675," 或 "],[-1,5731," "],[1,5732," "],[-1,5747," "],[1,5748," "],[-1,5760," "],[1,5761," "],[-1,5942," "],[1,5943," "],[-1,5950," "],[1,5951," "],[-1,6095," "],[1,6096," "],[-1,6231," 元素 "],[1,6235," 元素 "],[-1,6268," "],[1,6269," "],[-1,6348," "],[1,6349," "],[-1,6375," "],[1,6376," "]],[4059,4169],[4059,4059]]],[1528099758869,["Administrator@Tielemao",[[-1,4434,"["]],[4435,4435],[4434,4434]]],[1528099790148,["Administrator@Tielemao",[[-1,4441,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[4441,4690],[4441,4441]]],[1528099816106,["Administrator@Tielemao",[[-1,4814,"["]],[4815,4815],[4814,4814]]],[1528099820600,["Administrator@Tielemao",[[-1,4823,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display \"display CSS属性指定用于元素的呈现框的类型。在 HTML 中，默认的 display 属性取决于 HTML 规范所描述的行为或浏览器/用户的默认样式表。在 XML中，其默认值为 inline。\") "]],[4823,4987],[4823,4823]]],[1528099822876,["Administrator@Tielemao",[[-1,4842,"["]],[4843,4843],[4842,4842]]],[1528099826392,["Administrator@Tielemao",[[-1,4850,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form \"HTML <form> 元素 表示了文档中的一个区域，这个区域包含有交互控制元件，用来向web服务器提交信息。\")"]],[4850,4973],[4850,4850]]],[1528099828132,["Administrator@Tielemao",[[-1,4852,"["]],[4853,4853],[4852,4852]]],[1528099836774,["Administrator@Tielemao",[[-1,4859,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[4859,5108],[4859,4859]]],[1528099839253,["Administrator@Tielemao",[[-1,4862,"["]],[4863,4863],[4862,4862]]],[1528099842661,["Administrator@Tielemao",[[-1,4871,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label \"HTML 元素表示用户界面中项目的标题。\")"]],[4871,4960],[4871,4871]]],[1528099844948,["Administrator@Tielemao",[[-1,4872,"["]],[4873,4873],[4872,4872]]],[1528099851439,["Administrator@Tielemao",[[-1,4881,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input \"HTML <input> 元素用于为基于Web的表单创建交互式控件，以便接受来自用户的数据。\")"]],[4882,4882],[4881,4881]]],[1528099869707,["Administrator@Tielemao",[[-1,5031,"["]],[5032,5032],[5031,5031]]],[1528099875147,["Administrator@Tielemao",[[-1,5042,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/caption \"HTML <caption> 元素 (or HTML 表格标题元素) 展示一个表格的标题， 它常常作为 <table> 的第一个子元素出现，同时显示在表格内容的最前面，但是，它同样可以被CSS样式化，所以，它同样可以出现在任何一个一个相对于表格的做任意位置。\")"]],[5042,5242],[5042,5042]]],[1528099950698,["Administrator@Tielemao",[[-1,5538,"\n"]],[5538,5538],[5537,5537]]],[1528099953477,["Administrator@Tielemao",[[1,5544,"\n"]],[5543,5543],[5544,5544]]],[1528099954077,["Administrator@Tielemao",[[1,5545,"\n"]],[5544,5544],[5545,5545]]],[1528100047560,["Administrator@Tielemao",[[1,5546,"![css-layout07]($res/css-layout07.jpg)\n\n"]],[5545,5545],[5585,5585]]],[1528100050058,["Administrator@Tielemao",[[-1,5545,"\n"]],[5545,5545],[5544,5544]]],[1528100051786,["Administrator@Tielemao",[[1,5585,"\n"]],[5584,5584],[5585,5585]]],[1528100079493,["Administrator@Tielemao",[[1,5585,"## 柔性盒子[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E6%9F%94%E6%80%A7%E7%9B%92%E5%AD%90)\n\nCSS是一种功能强大的语言，它可以做很多事情，但它却在布局上有所下降。传统的老式布局方法，如[`float`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/float \"此页面仍未被本地化, 期待您的翻译!\")和[`positioning`](https://developer.mozilla.org/zh-CN/docs/Web/CSS/positioning \"此页面仍未被本地化, 期待您的翻译!\")工作，但有时它们会感觉比他们需要的更复杂、更灵活、更有弹性。例如，如果你想要：\n\n*   垂直中心盒子的内容(不仅仅是文本；`line-height` 将会失效)。\n*   制作几列有相同的高度包含不同数量内容的列，不使用固定的高度，或用背景图像伪装。\n*   在一行中创建几个盒子，占用相同数量的可用空间，不管有多少个，并且如果它们有内边距，外边距等就应用它。\n\n上面的例子几乎不可能通过常规的CSS实现——柔性盒子(或flexbox)是为了让这些东西更容易实现而被发明的。\n\n让我们来看一个例子；首先，一些简单的HTML：\n\n```html\n<section>\n  <div>This is a box</div>\n  <div>This is a box</div>\n  <div>This is a box</div>\n</section>\n\n<button class=\"create\">Create box</button>\n<button class=\"reset\">Reset demo</button>\n```\n\n这里我们有一个[`<section>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\")元素，里面有三个[`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")，再加上几个按钮来创建一个新盒子，和重新设置demo。默认情况下，子元素不会被布局或改变大小，使用传统的方法，我们必须仔细地对每个元素设置大小，允许宽度、外边距、边框和内边距，如果我们添加了另一个子元素，我们就必须完全改变所有的值。\n\n使用Flexbox替代它：\n\n```css\nhtml {\n  font-family: sans-serif;\n}\n\nsection {\n  width: 93%;\n  height: 240px;\n  margin: 20px auto;\n  background: purple;\n  display: flex;\n}\n\ndiv {\n  color: white;\n  background: orange;\n  flex: 1;\n  margin-right: 10px;\n  text-shadow: 1px 1px 1px black;\n}\n\ndiv:last-child {\n  margin-right: 0;\n}\n\nsection, div {\n  border: 5px solid rgba(0,0,0,0.85);\n  padding: 10px;\n}\n```\n\n这个CSS的两行非常有趣：\n\n*   `display: flex;` 告诉[`<section>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\")元素的子元素作为flexible boxes——默认情况下，它们都将展开以填充父类的可用高度，不管它是什么，并将其列出来——有足够的宽度来包装他们的内容。\n*   `flex: 1;` 告诉每个[`<div>`](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")元素，在行中获得相同数量的空间，不管有多少。\n\n为了进一步说明这是多么的神奇，我们还将添加一些JavaScript，以便您可以通过按下_Create box_按钮来添加进一步的子 `<div>`。\n\n这是一个例子——多试试见证Flexbox作为一个布局工具的强大。"]],[5585,5585],[8156,8156]]],[1528100084621,["Administrator@Tielemao",[[-1,5592,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E6%9F%94%E6%80%A7%E7%9B%92%E5%AD%90)"],[1,5716,""],[-1,6024," "],[1,6025," "],[-1,6593," "],[1,6594," "],[-1,6736," "],[1,6737," "],[-1,6812," "],[1,6813," "],[-1,6818," 或 "],[1,6821," 或 "],[-1,6877," "],[1,6878," "],[-1,6893," "],[1,6894," "],[-1,7450," "],[1,7451," "],[-1,7624," "],[1,7625," "],[-1,7762," "],[1,7763," "],[-1,7856," "],[1,7857," "],[-1,7932," "],[1,7933," "],[-1,7938," 或 "],[1,7941," 或 "],[-1,7997," "],[1,7998," "],[-1,8013," "],[1,8014," "],[-1,8113," "],[1,8114," "]],[5592,5716],[5592,5592]]],[1528100099241,["Administrator@Tielemao",[[-1,5640,"["]],[5641,5641],[5640,5640]]],[1528100104502,["Administrator@Tielemao",[[-1,5647,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/float \"此页面仍未被本地化, 期待您的翻译!\")"]],[5647,5725],[5647,5647]]],[1528100106413,["Administrator@Tielemao",[[-1,5648,"["]],[5649,5649],[5648,5648]]],[1528100109881,["Administrator@Tielemao",[[-1,5661,"](https://developer.mozilla.org/zh-CN/docs/Web/CSS/positioning \"此页面仍未被本地化, 期待您的翻译!\")"]],[5661,5745],[5661,5661]]],[1528100122596,["Administrator@Tielemao",[[-1,6134,"["]],[6135,6135],[6134,6134]]],[1528100130281,["Administrator@Tielemao",[[-1,6145,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\")"]],[6145,6350],[6145,6145]]],[1528100132188,["Administrator@Tielemao",[[-1,6153,"["]],[6154,6154],[6153,6153]]],[1528100138991,["Administrator@Tielemao",[[-1,6160,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[6160,6409],[6160,6160]]],[1528100198216,["Administrator@Tielemao",[[-1,6709,"["]],[6710,6710],[6709,6709]]],[1528100206222,["Administrator@Tielemao",[[-1,6720,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section \"HTML Section 元素 (<section>) 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。\")"]],[6720,6925],[6720,6720]]],[1528100212752,["Administrator@Tielemao",[[-1,6817,"["]],[6818,6818],[6817,6817]]],[1528100217335,["Administrator@Tielemao",[[-1,6824,"](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div \"HTML <div> 元素 (或 HTML 文档分区元素) 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如 <article> 或 <nav>) 。\")"]],[6824,7073],[6824,6824]]],[1528100500823,["Administrator@Tielemao",[[1,6957,"\n"]],[6956,6956],[6957,6957]]],[1528100501098,["Administrator@Tielemao",[[1,6958,"\n"]],[6957,6957],[6958,6958]]],[1528100516514,["Administrator@Tielemao",[[1,6959,"![css-layout08]($res/css-layout08.gif)\n\n"]],[6958,6958],[6998,6998]]],[1528100518611,["Administrator@Tielemao",[[-1,6958,"\n"]],[6958,6958],[6957,6957]]],[1528100521646,["Administrator@Tielemao",[[1,6998,"\n"]],[6997,6997],[6998,6998]]],[1528101679626,["Administrator@Tielemao",[[1,6924,"\n"]],[6923,6923],[6924,6924]]],[1528101680704,["Administrator@Tielemao",[[1,6925,"\n"]],[6923,6923],[6924,6924]]],[1528103527361,["Administrator@Tielemao",[[1,6924,"```js"]],[6924,6924],[6929,6929]]],[1528103528122,["Administrator@Tielemao",[[1,6931,"\n"]],[6929,6929],[6930,6930]]],[1528103529064,["Administrator@Tielemao",[[1,6930,"var section = document.querySelector('section');\r\nvar createBtn = document.querySelector('.create');\r\nvar resetBtn = document.querySelector('.reset');\r\n\r\nfunction createBox() {\r\n  var box = document.createElement('div');\r\n  box.textContent = 'This is a box';\r\n  section.appendChild(box);\r\n}\r\n\r\ncreateBtn.onclick = createBox;\r\n\r\nresetBtn.onclick = function() {\r\n  while (section.firstChild) {\r\n      section.removeChild(section.firstChild);\r\n  }\r\n  createBox();\r\n  createBox();\r\n  createBox();\r\n}\r\n"]],[6930,6930],[7427,7427]]],[1528103533899,["Administrator@Tielemao",[[-1,6978,"\r"],[-1,7030,"\r"],[-1,7080,"\r"],[-1,7082,"\r"],[-1,7106,"\r"],[-1,7150,"\r"],[-1,7188,"\r"],[-1,7217,"\r"],[-1,7220,"\r"],[-1,7222,"\r"],[-1,7254,"\r"],[-1,7256,"\r"],[-1,7289,"\r"],[-1,7321,"\r"],[-1,7369,"\r"],[-1,7374,"\r"],[-1,7390,"\r"],[-1,7406,"\r"],[-1,7422,"\r"],[-1,7425,"\r"],[1,7427,"```"]],[7407,7407],[7410,7410]]],[1528103768328,["Administrator@Tielemao",[[1,7486,"## 网格布局[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80)\n\n这里提到的最具实验性的特性是CSS网格，它在浏览器中还没有得到广泛的支持。Web页面通常使用网格系统布局，与打印媒体相同，这里的想法是通过定义一个网格来简化这个过程，然后定义内容的哪些部分位于网格的每个区域。\n\n目前的CSS网格在任何地方都还没有得到真正的支持(除了Firefox和Chrome的实验性版本)。\nIE和Edge支持一种更旧的、过时的技术。这是我们将来可以期待的！\n\n**注意：**为了更好地了解当前的网格框架和其他正在使用的技术，以及即将到来的原生CSS网格规范，请参阅我们的 [Grids](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids) 文章。"]],[7486,7486],[7946,7946]]],[1528103771954,["Administrator@Tielemao",[[-1,7493,"[Edit](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction$edit#%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80)"],[-1,7865," "],[1,7866," "],[-1,7942," "],[1,7943," "]],[7493,7617],[7493,7493]]],[1528103778277,["Administrator@Tielemao",[[1,7823,"\n"]],[7822,7822],[7823,7823]]],[1528103778622,["Administrator@Tielemao",[[1,7824,"\n"]],[7823,7823],[7824,7824]]],[1528103847365,["Administrator@Tielemao",[[1,0,"\n"]],[0,0],[1,1]]],[1528103852762,["Administrator@Tielemao",[[1,0,"iy"]],[0,0],[2,2]]],[1528103853689,["Administrator@Tielemao",[[-1,0,"iy"]],[2,2],[0,0]]],[1528103855634,["Administrator@Tielemao",[[1,0,"注："]],[0,0],[2,2]]],[1528103855975,["Administrator@Tielemao",[[1,3,"\n"]],[2,2],[3,3]]],[1528103867646,["Administrator@Tielemao",[[1,2,"全文摘自https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction"]],[2,2],[80,80]]],[1528103875377,["Administrator@Tielemao",[[1,6,"［"]],[6,6],[7,7]]],[1528103877726,["Administrator@Tielemao",[[-1,6,"［"]],[7,7],[6,6]]],[1528103881244,["Administrator@Tielemao",[[1,6,"[]("]],[6,6],[9,9]]],[1528103884210,["Administrator@Tielemao",[[1,83,")"]],[83,83],[84,84]]],[1528103892012,["Administrator@Tielemao",[[-1,83,")"]],[84,84],[83,83]]],[1528103894131,["Administrator@Tielemao",[[1,83,")"]],[83,83],[84,84]]],[1528103902637,["Administrator@Tielemao",[[1,7,"MDN-wj"]],[7,7],[13,13]]],[1528103903187,["Administrator@Tielemao",[[-1,11,"wj"]],[13,13],[11,11]]],[1528103910718,["Administrator@Tielemao",[[1,11,"介绍CSS布局"]],[11,11],[18,18]]],[1528103915413,["Administrator@Tielemao",[[1,97,"\n"]],[95,95],[96,96]]],[1528103915837,["Administrator@Tielemao",[[1,98,"\n"]],[96,96],[97,97]]],[1528103922010,["Administrator@Tielemao",[[1,97,"[[toc]]"]],[97,97],[104,104]]],[1528103938754,["Administrator@Tielemao",[[-1,7930,"\n"],[1,7931,"end"]],[7930,7930],[7933,7933]]]]]]}