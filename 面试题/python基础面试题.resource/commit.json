{"compress":true,"commitItems":[["3a58625c-33d4-4530-a0d5-33e0c9a5f202",1534469468177,"##　python基础部分\n\n* 1.\t写代码实现：val = “i am a string”,实现一个方法，将字符串逆序输出。\n```python\nval = \"I am hero\"\n\n# 第一种方法，利用列表的反向排序\ndef reversestr(str1):\n    \"\"\"\n    对传进来的字符串做一个逆序输出处理\n    :param str1:\n    :return:\n    \"\"\"\n    list1 = str1.split()\n    # 列表reverse之后就己经是逆序了\n    list1.reverse()\n    # 再用空格做join转成字符串\n    val2 = \" \".join(list1)\n    return val2\n\n# 第二种方法，利用反向切片\ndef reversestr2(str1):\n    \"\"\"\n    对传进来的字符串做一个逆序输出处理\n    :param str1:\n    :return:\n    \"\"\"\n    list1 = str1.split()\n    # 使用反向切片进行倒序\n    list1 = list1[::-1]\n    # 再用空格做join转成字符串\n    val2 = \" \".join(list1)\n    return val2\n\nprint(reversestr(val))\nprint(reversestr2(val))\n```\n",[[1534469427636,["Administrator@Tielemao",[[1,625,"\n"]],[624,624],[625,625]]],[1534469428102,["Administrator@Tielemao",[[1,626,"\n"]],[625,625],[626,626]]],[1534469436625,["Administrator@Tielemao",[[1,627,"2.\t判断101-200之间有多少个质数（2分）\n提示：一个大于1的自然数，除了1和它自身外，不能被其他自然数整除的书叫质数\n"]],[626,626],[689,689]]],[1534469439747,["Administrator@Tielemao",[[-1,647,"（2分）"]],[651,651],[647,647]]],[1534469441848,["Administrator@Tielemao",[[1,647,"？"]],[647,647],[648,648]]],[1534469455242,["Administrator@Tielemao",[[1,627,"* "]],[627,627],[629,629]]],[1534469459006,["Administrator@Tielemao",[[-1,627,"* "]],[629,629],[627,627]]],[1534469461570,["Administrator@Tielemao",[[-1,15,"* "]],[17,17],[15,15]]],[1534469463310,["Administrator@Tielemao",[[-1,16,".\t"]],[18,18],[16,16]]],[1534469465231,["Administrator@Tielemao",[[1,16,"、"]],[16,16],[17,17]]],[1534469469101,["Administrator@Tielemao",[[-1,625,".\t"]],[627,627],[625,625]]],[1534469469449,["Administrator@Tielemao",[[1,625,"1"]],[625,625],[626,626]]],[1534469470052,["Administrator@Tielemao",[[-1,625,"1"]],[626,626],[625,625]]],[1534469471691,["Administrator@Tielemao",[[1,625,"`"]],[625,625],[626,626]]],[1534469471715,["Administrator@Tielemao",[[1,626,"`"]],[626,626],[626,626]]],[1534469473606,["Administrator@Tielemao",[[-1,625,"``"]],[626,626],[625,625]]],[1534469475223,["Administrator@Tielemao",[[1,625,"/"]],[625,625],[626,626]]],[1534469475993,["Administrator@Tielemao",[[-1,625,"/"]],[626,626],[625,625]]],[1534469477346,["Administrator@Tielemao",[[1,625,"\\"]],[625,625],[626,626]]],[1534469477848,["Administrator@Tielemao",[[-1,625,"\\"]],[626,626],[625,625]]],[1534469480993,["Administrator@Tielemao",[[1,625,"、"]],[625,625],[626,626]]],[1534469496260,["Administrator@Tielemao",[[-1,16,"、"]],[17,17],[16,16]]],[1534469497206,["Administrator@Tielemao",[[1,16,"。"]],[16,16],[17,17]]],[1534469497812,["Administrator@Tielemao",[[-1,16,"。"]],[17,17],[16,16]]],[1534469499552,["Administrator@Tielemao",[[1,16,". "]],[16,16],[18,18]]],[1534469501969,["Administrator@Tielemao",[[-1,626,"、"]],[627,627],[626,626]]],[1534469503829,["Administrator@Tielemao",[[1,626,". "]],[626,626],[628,628]]],[1534469518054,["Administrator@Tielemao",[[-1,0,"##　"]],[3,3],[0,0]]],[1534469523478,["Administrator@Tielemao",[[1,0,"# "]],[0,0],[2,2]]],[1534469527734,["Administrator@Tielemao",[[-1,10,"部分"]],[12,12],[10,10]]],[1534469545530,["Administrator@Tielemao",[[1,681,"."]],[681,681],[682,682]]],[1534469546488,["Administrator@Tielemao",[[-1,681,"."]],[682,682],[681,681]]],[1534469547550,["Administrator@Tielemao",[[1,681,"。"]],[681,681],[682,682]]],[1534470633482,["Administrator@Tielemao",[[1,683,"\n"]],[682,682],[683,683]]],[1534470633758,["Administrator@Tielemao",[[1,684,"\n"]],[683,683],[684,684]]],[1534470636995,["Administrator@Tielemao",[[1,684,"import math\n\n# 第一种方法，用平方根的范围去做筛选 def prime(n):\n  \"\"\"\n  将输入的正整数过滤出素数\n  :param n: 正整数\n  :return: true为素数，None不为素数  \"\"\"  # 求出平方根并取整数部分\n  sqrtn = int(math.sqrt(n))\n    # 1不属于素数，先把它直接排除\n  if n <= 1:return None\n  # 从2到平方根的范围去被整除\n  for i in range(2, sqrtn + 1):\n if n % i == 0:\n  # 如果能被范围内的数整除，则不为素数，返回None\n  return None\n  # 反之则为素数\n  return True   # 求出101到200之间有多少个质数 list1 = [i for i in range(101, 201)]\nlist2 = [ ]\nfor i in list1:\n if prime(i):\n  list2.append(i)\nnum = str(len(list2))\nprint(\"101到200之间有%s个质数\" % num)\nprint(list2)"]],[684,684],[1207,1207]]],[1534470640057,["Administrator@Tielemao",[[1,684,"\n"]],[683,683],[684,684]]],[1534470643192,["Administrator@Tielemao",[[1,684,"```python"]],[684,684],[693,693]]],[1534470647430,["Administrator@Tielemao",[[1,1218,"\n"]],[1217,1217],[1218,1218]]],[1534470648640,["Administrator@Tielemao",[[-1,1218,"\n"],[1,1219,"```"]],[1218,1218],[1221,1221]]],[1534470740439,["Administrator@Tielemao",[[-1,856,"  "]],[858,858],[856,856]]],[1534470747206,["Administrator@Tielemao",[[1,812,"\n  \n  "]],[812,812],[818,818]]],[1534470753250,["Administrator@Tielemao",[[-1,741,"  "],[-1,747,"  "],[-1,762,"  "],[-1,778,"  "]],[741,812],[741,804]]],[1534470758972,["Administrator@Tielemao",[[-1,808,"  "],[-1,824,"  "],[-1,852,"  "],[-1,871,"  "],[-1,895,"  "],[-1,913,"  "],[-1,945," "],[-1,961,"  "],[-1,990,"  "],[-1,1004,"  "],[-1,1015,"  "],[-1,1116," "],[-1,1130,"  "]],[808,1213],[808,1191]]],[1534470771858,["Administrator@Tielemao",[[1,933,"    "]],[933,933],[937,937]]],[1534470776123,["Administrator@Tielemao",[[1,979,"    "]],[979,979],[983,983]]],[1534470778540,["Administrator@Tielemao",[[1,952,"    "]],[952,952],[956,956]]],[1534470786810,["Administrator@Tielemao",[[1,1022,"\n"]],[1022,1022],[1023,1023]]],[1534470787187,["Administrator@Tielemao",[[1,1023,"\n"]],[1023,1023],[1024,1024]]],[1534470789593,["Administrator@Tielemao",[[1,1044,"\n"]],[1044,1044],[1045,1045]]],[1534470797891,["Administrator@Tielemao",[[1,1110,"    "]],[1110,1110],[1114,1114]]],[1534470803894,["Administrator@Tielemao",[[1,1127,"        "]],[1127,1127],[1135,1135]]],[1534470841258,["Administrator@Tielemao",[[1,727,"\n"]],[727,727],[728,728]]],[1534470845799,["Administrator@Tielemao",[[1,800,"\n"]],[800,800],[801,801]]],[1534470851422,["Administrator@Tielemao",[[1,810,"  "],[1,824,"  "],[1,850,"  "],[1,867,"  "],[1,889,"  "],[1,905,"  "],[1,935,"  "],[1,958,"  "],[1,985," "],[1,989," "],[1,1001,"  "],[1,1010,"  "]],[810,1024],[810,1046]]],[1534470852186,["Administrator@Tielemao",[[1,812,"  "],[1,826,"  "],[1,854,"  "],[1,875,"  "],[1,899,"  "],[1,915," "],[1,917," "],[1,947,"  "],[1,974,"  "],[1,1001," "],[1,1007," "],[1,1021,"  "],[1,1030,"  "]],[810,1046],[810,1068]]],[1534470855300,["Administrator@Tielemao",[[-1,807,"  "]],[809,809],[807,807]]],[1534470855749,["Administrator@Tielemao",[[-1,807,"\n"]],[807,807],[806,806]]],[1534470859659,["Administrator@Tielemao",[[1,742,"  "],[1,746,"  "],[1,759,"  "],[1,773,"  "],[1,801,"  "]],[742,806],[742,816]]],[1534470860344,["Administrator@Tielemao",[[1,744,"  "],[1,748,"  "],[1,763," "],[1,765," "],[1,779,"  "],[1,809,"  "]],[742,816],[742,826]]],[1534470893421,["Administrator@Tielemao",[[-1,159,"    :param str1:\n    :return:"]],[159,188],[159,159]]],[1534470893879,["Administrator@Tielemao",[[-1,159,"\n"]],[159,159],[158,158]]],[1534470902559,["Administrator@Tielemao",[[-1,370,"    :param str1:\n    :return:"]],[370,399],[370,370]]],[1534470903030,["Administrator@Tielemao",[[-1,370,"\n"]],[370,370],[369,369]]],[1534470934097,["Administrator@Tielemao",[[1,982,"    "]],[982,982],[986,986]]],[1534470950634,["Administrator@Tielemao",[[1,1227,"\n\n"]],[1227,1227],[1228,1228]]],[1534470951159,["Administrator@Tielemao",[[1,1229,"\n"]],[1228,1228],[1229,1229]]],[1534471424012,["Administrator@Tielemao",[[-1,1229,"\n"],[1,1230,"```"]],[1229,1229],[1232,1232]]],[1534471424045,["Administrator@Tielemao",[[1,1232,"language\n```\n"]],[1232,1232],[1232,1240]]],[1534471426539,["Administrator@Tielemao",[[-1,1232,"language"],[1,1240,"python"]],[1232,1240],[1238,1238]]],[1534471426867,["Administrator@Tielemao",[[1,1239,"\n"]],[1238,1238],[1239,1239]]],[1534471427877,["Administrator@Tielemao",[[1,1239,"# 埃拉托斯特尼筛法   def gen_super_dict(n):\n  \"\"\"\n  使用python生成器方法生成一个超大字典，用于减少内存消耗\n  :param n:接收一个参数n，只要不小于i则返回i\n  :return:i\n \"\"\"  # 因为0和1都不是素数，所以从2取起\n  i = 2\n  while 1:\n if i > n:break\n yield i\n        i += 1   def gen_prime_list(n):\n  \"\"\"\n  传入一个整数，实际上取的是从2开始到此整数范围的素数列表出来  n为素数的取值范围\n  :param n: 传入一个整数\n  :return:返回取值范围内的所有素数  \"\"\"  super_dict = {}\n    primes_list = []\n\n    # 将值传入生成大字典的函数中\n  for x in gen_super_dict(n):\n  super_dict[x] = True    i = 2\n  while 1:\n if i > n:\n break  j = i * i\n        while 1:\n if j > n:\n break if super_dict[i]:\n  super_dict[j] = False\n  j += i\n        i += 1    for key,value in super_dict.items():\n if value:\n  primes_list.append(key)\n    return primes_list\n\n# 求出101到200之间有多少个质数 # 直接先用gen_prime_list方法取出100以内的质数 set1 = set(gen_prime_list(100))\n# 接着取201以内的质数 set2 = set(gen_prime_list(201))\n# 取两者之间的差集，就得得到100到201之间的质数了 set3 = set2 - set1\nnum2 = str(len(set3))\nprint(\"101到200之间有%s个质数\" % num2)"]],[1239,1239],[2158,2158]]],[1534471442043,["Administrator@Tielemao",[[-1,1239,"# 埃拉托斯特尼筛法   def gen_super_dict(n):\n  \"\"\"\n  使用python生成器方法生成一个超大字典，用于减少内存消耗\n  :param n:接收一个参数n，只要不小于i则返回i\n  :return:i\n \"\"\"  # 因为0和1都不是素数，所以从2取起\n  i = 2\n  while 1:\n if i > n:break\n yield i\n        i += 1   def gen_prime_list(n):\n  \"\"\"\n  传入一个整数，实际上取的是从2开始到此整数范围的素数列表出来  n为素数的取值范围\n  :param n: 传入一个整数\n  :return:返回取值范围内的所有素数  \"\"\"  super_dict = {}\n    primes_list = []\n\n    # 将值传入生成大字典的函数中\n  for x in gen_super_dict(n):\n  super_dict[x] = True    i = 2\n  while 1:\n if i > n:\n break  j = i * i\n        while 1:\n if j > n:\n break if super_dict[i]:\n  super_dict[j] = False\n  j += i\n        i += 1    for key,value in super_dict.items():\n if value:\n  primes_list.append(key)\n    return primes_list\n\n# 求出101到200之间有多少个质数 # 直接先用gen_prime_list方法取出100以内的质数 set1 = set(gen_prime_list(100))\n# 接着取201以内的质数 set2 = set(gen_prime_list(201))\n# 取两者之间的差集，就得得到100到201之间的质数了 set3 = set2 - set1\nnum2 = str(len(set3))\nprint(\"101到200之间有%s个质数\" % num2)"]],[1239,2158],[1239,1239]]],[1534471461497,["Administrator@Tielemao",[[1,1239,"# 埃拉托斯特尼筛法\n\ndef gen_super_dict(n):\n    \"\"\"\n    使用python生成器方法生成一个超大字典，用于减少内存消耗\n    :param n:接收一个参数n，只要不小于i则返回i\n    :return:i\n    \"\"\"\n    # 因为0和1都不是素数，所以从2取起\n    i = 2\n    while 1:\n        if i > n:break\n        yield i\n        i += 1\n\ndef gen_prime_list(n):\n    \"\"\"\n    传入一个整数，实际上取的是从2开始到此整数范围的素数列表出来\n    n为素数的取值范围\n    :param n: 传入一个整数\n    :return:返回取值范围内的所有素数\n    \"\"\"\n    super_dict = {}\n    primes_list = []\n\n    # 将值传入生成大字典的函数中\n    for x in gen_super_dict(n):\n        super_dict[x] = True\n\n    i = 2\n    while 1:\n        if i > n:\n            break\n        j = i * i\n        while 1:\n            if j > n:\n                break\n            if super_dict[i]:\n                super_dict[j] = False\n            j += i\n        i += 1\n\n    for key,value in super_dict.items():\n        if value:\n            primes_list.append(key)\n    return primes_list\n\n# 求出101到200之间有多少个质数\n# 直接先用gen_prime_list方法取出100以内的质数\nset1 = set(gen_prime_list(100))\n# 接着取201以内的质数\nset2 = set(gen_prime_list(201))\n# 取两者之间的差集，就得得到100到201之间的质数了\nset3 = set2 - set1\nnum2 = str(len(set3))\nprint(\"101到200之间有%s个质数\" % num2)\n"]],[1239,1239],[2324,2324]]],[1534471470768,["Administrator@Tielemao",[[-1,2324,"\n"]],[2324,2324],[2323,2323]]],[1534471474456,["Administrator@Tielemao",[[1,1229,"\n"]],[1228,1228],[1229,1229]]],[1534471474642,["Administrator@Tielemao",[[1,1230,"\n"]],[1229,1229],[1230,1230]]],[1534471486131,["Administrator@Tielemao",[[1,1230,"* d"]],[1230,1230],[1233,1233]]],[1534471486857,["Administrator@Tielemao",[[-1,1232,"d"]],[1233,1233],[1232,1232]]],[1534471495932,["Administrator@Tielemao",[[1,1232,"第二种方法，使用埃拉托斯特尼筛法\n"]],[1232,1232],[1249,1249]]],[1534471498362,["Administrator@Tielemao",[[1,1240,"`"]],[1240,1240],[1241,1241]]],[1534471498398,["Administrator@Tielemao",[[1,1241,"`"]],[1241,1241],[1241,1241]]],[1534471500759,["Administrator@Tielemao",[[-1,1242,"埃拉托斯特尼筛法"]],[1242,1250],[1242,1242]]],[1534471502094,["Administrator@Tielemao",[[1,1241,"埃拉托斯特尼筛法"]],[1241,1241],[1249,1249]]],[1534471511464,["Administrator@Tielemao",[[1,624,"\n"]],[623,623],[624,624]]],[1534471514071,["Administrator@Tielemao",[[1,624,"* di"]],[624,624],[628,628]]],[1534471514645,["Administrator@Tielemao",[[-1,626,"di"]],[628,628],[626,626]]],[1534471519938,["Administrator@Tielemao",[[1,626,"第一种房法，"]],[626,626],[632,632]]],[1534471520537,["Administrator@Tielemao",[[-1,629,"房法，"]],[632,632],[629,629]]],[1534471524126,["Administrator@Tielemao",[[1,629,"方法，用平方"]],[629,629],[635,635]]],[1534471534736,["Administrator@Tielemao",[[1,635,"根的范围去做普通的筛选"]],[635,635],[646,646]]],[1534471976881,["Administrator@Tielemao",[[1,2374,"\n"]],[2373,2373],[2374,2374]]],[1534471977348,["Administrator@Tielemao",[[1,2375,"\n"]],[2374,2374],[2375,2375]]],[1534471978347,["Administrator@Tielemao",[[1,2375,"3.\t简述正则表达式中的贪婪匹配并举例说明"]],[2375,2375],[2396,2396]]],[1534471981167,["Administrator@Tielemao",[[-1,2374,"\n"]],[2375,2375],[2374,2374]]],[1534471982300,["Administrator@Tielemao",[[1,2374,"\n"]],[2374,2374],[2375,2375]]],[1534472092772,["Administrator@Tielemao",[[1,2396,"。"]],[2396,2396],[2397,2397]]],[1534472093284,["Administrator@Tielemao",[[1,2398,"\n"]],[2397,2397],[2398,2398]]],[1534472096072,["Administrator@Tielemao",[[1,2398,"贪婪模式:尽可能多的匹配所搜索的字符串。\n例如，对于字符串 \"wwz\"，'w+?' 将匹配单个 \"w\"，而 'w+' 将匹配所有 'w'。"]],[2398,2398],[2467,2467]]],[1534472122656,["Administrator@Tielemao",[[1,2378," "]],[2378,2378],[2379,2379]]],[1534472124278,["Administrator@Tielemao",[[-1,2376,".\t "]],[2379,2379],[2376,2376]]],[1534472125119,["Administrator@Tielemao",[[1,2376,"。"]],[2376,2376],[2377,2377]]],[1534472125739,["Administrator@Tielemao",[[-1,2376,"。"]],[2377,2377],[2376,2376]]],[1534472127308,["Administrator@Tielemao",[[1,2376,". "]],[2376,2376],[2378,2378]]],[1534472150991,["Administrator@Tielemao",[[1,2468,"\n"]],[2467,2467],[2468,2468]]],[1534472151386,["Administrator@Tielemao",[[1,2469,"\n"]],[2468,2468],[2469,2469]]],[1534472154134,["Administrator@Tielemao",[[1,2469,"5.\t 请编写一个函数实现将IP地址转换成一个整数（4分）\n         如 10.3.9.12 转换规则为：\n                  10            00001010\n                    3            00000011\n                  9            00001001\n                  12            00001100\n       再将以上二进制拼接起来计算十进制结果，即：\n              00001010 00000011 00001001 00001100 = ？"]],[2469,2469],[2773,2773]]],[1534472157660,["Administrator@Tielemao",[[-1,2469,"5."]],[2471,2471],[2469,2469]]],[1534472159764,["Administrator@Tielemao",[[1,2469,"4."]],[2469,2469],[2471,2471]]],[1534472164551,["Administrator@Tielemao",[[-1,2470,".\t "]],[2473,2473],[2470,2470]]],[1534472167386,["Administrator@Tielemao",[[1,2470,". "]],[2470,2470],[2472,2472]]],[1534472171604,["Administrator@Tielemao",[[-1,2493,"（4分）"]],[2497,2497],[2493,2493]]],[1534472173190,["Administrator@Tielemao",[[1,2493,"."]],[2493,2493],[2494,2494]]],[1534472174971,["Administrator@Tielemao",[[-1,2493,"."]],[2494,2494],[2493,2493]]],[1534472175662,["Administrator@Tielemao",[[1,2493,"。"]],[2493,2493],[2494,2494]]],[1534472180114,["Administrator@Tielemao",[[1,2769,"."]],[2769,2769],[2770,2770]]],[1534472181903,["Administrator@Tielemao",[[-1,2769,"."]],[2770,2770],[2769,2769]]],[1534472182861,["Administrator@Tielemao",[[1,2770,"              \n"]],[2769,2769],[2784,2784]]]],null,"Administrator@Tielemao"]]}