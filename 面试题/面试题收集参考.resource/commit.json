{"compress":true,"commitItems":[["fc1fb2a6-8900-4598-a621-b1525e247b7f",1533658382518,"1、Django请求的生命周期？\n\n浏览器向服务器发送请求，经过遵循wsgi（web服务网关接口，一套协议，它没有封装socket，基于它的模块封装了socket）的模块，中间件，进入路由系统，视图处理请求数据，通过orm与数据库交互，渲染模板，将渲染后的字符串(字节)响应给浏览器，浏览器渲染页面。一次请求和响应即完成，浏览器和服务器断开连接。\n\n实现wsgi协议的模块：\n\nwsgiref uwsgi werkzreg\n\n2、你们在公司如果遇到要紧急修复的bug，怎么解决？\n\n在master分支上创建一个debug分支，在debug分支上进行修复，修复完毕后再合并到master并删除debug分支；再次切换回dev分支，进行开发....\n\n3、csrf原理？\n\n- 先发送GET请求，在用户浏览器上藏一个随机字符串\n\n- 再次发送POST请求时，浏览器自动携带随机字符串，服务器就可以校验客户端的合法性。\n\n4、你们是否做代码review？\n\n是的，创建一个review的分支，由组长老大（资深的开发）来进行查看。\n\n5、在git上如何给别的开源程序贡献代码？\n\n- fork\n\n-修改\n\n- pull request\n\n6、ORM和原生SQL的区别？\n\n执行效率高：原生SQL\n\n开发效率高：ORM\n\n兼容性好：指的是连接不同数据库时，ORM会帮助用户自动翻译成相应的SQL语句。\n\n7、你们如何基于git做协同的开发？\n\n- 每个人一个分支：master/dev/+每个人\n\n- 阶段性进行一个合并（1、2天或小功能开发完毕）\n\n8、[11, 33, 4, 2, 11, 4, 9, 2]去重并保持原来的顺序\n\nlist1 = [11, 33, 4, 2, 11, 4, 9, 2]\n\n# 去重\n\nret = list(set(list1))\n\n# 按照原来的顺序排序\n\nret2 = sorted(ret, key=list1.index)\n\nprint(ret2)\n\nlist1.index(11)\n\n# 按照年龄从小到大排序\n\nlist3 = [\n\n{\"name\": \"金老板\", \"age\": 30},\n\n{\"name\": \"Eva_J\", \"age\": 18},\n\n{\"name\": \"MJJ\", \"age\": 29}\n\n]\n\nret3 = sorted(list3, key=lambda x: x['age'])\n\n9、PEP8规范？\n\n1.每一级缩进使用4个空格。\n\n2.空格是首选的缩进方式。 制表符只能用于与同样使用制表符缩进的代码保持一致。Python3不允许同时使用空格和制表符的缩进。\n\n3.所有行限制的最大字符数为79。 没有结构化限制的大块文本（文档字符或者注释），每行的最大字符数限制在72。\n\n4.顶层函数和类的定义，前后用两个空行隔开。 类里的方法定义用一个空行隔开。\n\n5、与代码相矛盾的注释比没有注释还糟，当代码更改时，优先更新对应的注释！\n\n6、类名一般使用首字母大写的约定。函数名应该小写，如果想提高可读性可以用下划线分隔。\n\n……\n\n10、Python2与Python3的区别？\n\n1.print函数:（print 从语句变为函数，Python3中print为一个函数，必须用括号括起来）\n\n2.通过input()解析用户的输入：（Python3中input得到的为str；Python2的input的到的为int型，Python2的raw_input得到的为str类型）统一一下：Python3中用input，Python2中用row_input，都输入为str\n\n3.python2默认编码是ascii，Python 3的默认编码方式是UTF-8。\n\n4.xrange\n\n11、MySQL的搜索引擎有哪些？\n\nMySQL数据库引擎取决于MySQL在安装的时候是如何被编译的。要添加一个新的引擎，就必须重新编译MYSQL。在缺省情况下，MYSQL支持三个引擎：ISAM、MYISAM和HEAP。另外两种类型INNODB和BERKLEY（BDB），也常常可以使用。\n\n12、pymysql如何避免SQL注入？\n\nsql=\"select * from userinfo where name=%s and password=%s\"  #！！！注意%s需要去掉引号，因为pymysql会自动为我们加上 result=cursor.execute(sql,[user,pwd]) #pymysql模块自动帮我们解决sql注入的问题，只要我们按照pymysql的规矩来。\n\n13、什么是xss攻击？\n\nXSS攻击全称[跨站脚本攻击](https://note.youdao.com/item/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/8186208)，是为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS，XSS是一种在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。\n\n14、为什么要做前后端分离？\n\n- 前后端交给不同的人来编写，职责划分明确。\n\n- 后端开发一份API ，适用于不同的终端 (比如IOS,安卓,PC,微信小程序...)\n\n- vue.js等框架编写前端时，会比之前写jQuery更简单快捷。\n\n15、谈谈你对restful规范的理解？\n\n1.使用https代替http\n\nhttps: // www.luffycity.com / course / detail / web / 3\n\nhttp: // www.luffycity.com / course / detail / web / 3\n\n2.在URL中体现自己写的是API\n\nhttps: // www.luffycity.com / api /\n\nhttps: // api.luffycity.com / 可能会跨域\n\n3.在URL中体现版本\n\nhttps: // www.luffycity.com / api / v1 / users\n\nhttps: // www.luffycity.com / api / v2 / users\n\n4.名词（面向资源编程）\n\nhttps: // www.luffycity.com / api / v1 / users\n\nhttps: // www.luffycity.com / api / v1 / song\n\n5.行为\n\nhttps: // www.luffycity.com / api / v1 / users\n\nmethod:\n\nget, 获取\n\npost, 新建\n\nput, 更新\n\npatch, 局部更新\n\ndelete, 删除\n\n6.条件\n\nhttps: // www.luffycity.com / api / v1 / users?page = 1\n\nhttps: // www.luffycity.com / api / v1 / users?page = 1 & gender = 2\n\n7.状态码\n\n200\n\n301\n\n302\n\n404\n\n500\n\n推荐使用code:\n\ndef xx(request):\n\nret = {'code': 1000, 'data': None}\n\ntry:\n\n...\n\nexcept Exptions as e:\n\nret['status'] = 1001\n\nret['error'] = 'xxxx错误'\n\nreturn JsonResponse(ret)\n\n8.错误信息\n\n{\n\ncode: 10001,\n\nerror: '用户名或密码错误'\n\n}\n\n9.返回结果：\n\nGET:\n\nhttps: // www.luffycity.com / api / v1 / users\n\n响应：\n\n{\n\ncode: 1000,\n\ndata: [\n\n{'name': '赵森', 'age': 19},\n\n{'name': '赵云', 'age': 16},\n\n{'name': '赵云', 'age': 16},\n\n{'name': '赵云', 'age': 16},\n\n{'name': '赵云', 'age': 16},\n\n]\n\n}\n\nGET:\n\nhttps: // www.luffycity.com / api / v1 / users / 1 /\n\n响应：\n\n{\n\ncode: 1000,\n\ndata: {'name': '赵森', 'age': 19},\n\n}\n\nPOST:\n\nhttps: // www.luffycity.com / api / v1 / users\n\n请求体：\n\n{'name': '大表哥', 'age': 19}\n\n响应(不要)：\n\n{\n\ncode: 1000,\n\ndata: {'id': 9, 'name': '大表哥', 'age': 19}\n\n}\n\nPUT / PATCH:\n\nhttps: // www.luffycity.com / api / v1 / users\n\n请求体：\n\n{'name': '大表哥', 'age': 19}\n\n响应(不要)：\n\n{\n\ncode: 1000,\n\ndata: {'id': 9, 'name': '大表哥', 'age': 19}\n\n}\n\nDELETE:\n\n...\n\n10.hyper link\n\n访问：https: // www.luffycity.com / api / v1 / users\n\n{\n\ncode: 1000,\n\ndata: [\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n]\n\n}\n\nhttps: // www.luffycity.com / api / v1 / users\n\n{\n\ncode: 1000,\n\ndata: [\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n]\n\n}\n\n16、 django rest framework框架的作用？\n\n帮助开发者快速开发出遵循restful规范的API 。\n\n17、django rest framework框架都有哪些组件（10）？\n\n版本：\n\nfrom rest_framework.versioning import BaseVersioning\n\n认证：\n\nfrom rest_framework.authentication import BaseAuthentication\n\nfrom rest_framework.exceptions import AuthenticationFailed\n\n权限：\n\nfrom rest_framework.permissions import BasePermission\n\n节流：\n\nfrom rest_framework.throttling import BaseThrottle, SimpleRateThrottle\n\n分页：\n\nfrom rest_framework.pagination import PageNumberPagination\n\n解析器：\n\nfrom rest_framework.parsers import JSONParser\n\n序列化：\n\nfrom rest_framework import serializers\n\n视图：\n\nfrom rest_framework.views import APIView\n\nfrom rest_framework.generics import GenericAPIView,RetrieveUpdateDestroyAPIView,ListCreateAPIView\n\nfrom rest_framework.mixins import ListModelMixin,RetrieveModelMixin,CreateModelMixin,UpdateModelMixin,DestroyModelMixin\n\nfrom rest_framework.viewsets import ModelViewSet\n\n路由：\n\nfrom rest_framework.routers import DefaultRouter\n\n渲染器：\n\nfrom rest_framework.renderers import JSONRenderer,BrowsableAPIRenderer\n\nREST_FRAMEWORK = {\n\n\"DEFAULT_AUTHENTICATION_CLASSES\":[\"api.utils.auth.MyAuth\",], #认证\n\n\"DEFAULT_PERMISSION_CLASSES\": [\"api.utils.permission.Mypermission\", ], #权限\n\n\"DEFAULT_THROTTLE_CLASSES\": [\"api.utils.throttle.MyThrottle\", ], #节流\n\n\"DEFAULT_THROTTLE_RATES\": {\n\n\"rate\": \"3/m\",\n\n},\n\n\"DEFAULT_VERSIONING_CLASS\":\"rest_framework.versioning.URLPathVersioning\",\n\n\"VERSION_PARAM\":\"version\",\n\n\"DEFAULT_VERSION\":\"v1\",\n\n\"ALLOWED_VERSIONS\":[\"v1\",\"v2\",], #版本\n\n}\n\n18、简述HTTP协议\n\n- 基于socket\n\n- 数据格式：\n\n\"GET /index?name=123&age=19 http1.1\\r\\nhost:www.luffyciti.com\\r\\ncontent-type:application/json...\\r\\n\\r\\n\"\n\n\"POST /index http1.1\\r\\nhost:www.luffyciti.com\\r\\ncontent-type:application/json...\\r\\n\\r\\n{name:'alex',age:18}\"\n\n\"POST /index http1.1\\r\\nhost:www.luffyciti.com\\r\\ncontent-type:application/enform.....\\r\\n\\r\\nname=alex&age=18&xx=19\"\n\n- 无状态短链接：一次请求一次响应之后断开连接。",[[1533658361426,["Administrator@Tielemao",[[1,0,"## "]],[0,0],[3,3]]],[1533658366327,["Administrator@Tielemao",[[1,216,"## "]],[216,216],[219,219]]],[1533658369133,["Administrator@Tielemao",[[1,330,"## "]],[330,330],[333,333]]],[1533658373516,["Administrator@Tielemao",[[1,417,"## "]],[417,417],[420,420]]],[1533658376402,["Administrator@Tielemao",[[1,475,"## "]],[475,475],[478,478]]],[1533658381158,["Administrator@Tielemao",[[1,530,"## "]],[530,530],[533,533]]],[1533658386372,["Administrator@Tielemao",[[1,615,"## "]],[615,615],[618,618]]],[1533658390400,["Administrator@Tielemao",[[1,771,"#"]],[770,770],[771,771]]],[1533658396067,["Administrator@Tielemao",[[-1,770,"## "]],[773,773],[770,770]]],[1533658402006,["Administrator@Tielemao",[[-1,798,"#"]],[799,799],[798,798]]],[1533658403765,["Administrator@Tielemao",[[-1,797,"\n"]],[798,798],[797,797]]],[1533658406353,["Administrator@Tielemao",[[-1,797," "]],[798,798],[797,797]]],[1533658407157,["Administrator@Tielemao",[[1,797,"\n"]],[797,797],[798,798]]],[1533658410016,["Administrator@Tielemao",[[1,692,"## "]],[692,692],[695,695]]],[1533658418640,["Administrator@Tielemao",[[1,880,"#"]],[880,880],[881,881]]],[1533658425344,["Administrator@Tielemao",[[-1,879,"## "]],[881,881],[879,879]]],[1533658431317,["Administrator@Tielemao",[[1,1039,"## "]],[1039,1039],[1042,1042]]],[1533658438762,["Administrator@Tielemao",[[1,1317,"## "]],[1317,1317],[1320,1320]]],[1533658442797,["Administrator@Tielemao",[[1,1591,"## "]],[1591,1591],[1594,1594]]],[1533658445646,["Administrator@Tielemao",[[1,1740,"## "]],[1740,1740],[1743,1743]]],[1533658448820,["Administrator@Tielemao",[[1,1942,"## "]],[1942,1942],[1945,1945]]],[1533658454530,["Administrator@Tielemao",[[-1,1973,"](https://note.youdao.com/item/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/8186208)"]],[1973,2067],[1973,1973]]],[1533658456469,["Administrator@Tielemao",[[-1,1966,"["]],[1967,1967],[1966,1966]]],[1533658480836,["Administrator@Tielemao",[[1,2086,"## "]],[2086,2086],[2089,2089]]],[1533658484805,["Administrator@Tielemao",[[1,2211,"## "]],[2211,2211],[2214,2214]]],[1533658502469,["Administrator@Tielemao",[[1,4861,"## "]],[4861,4861],[4864,4864]]],[1533658505689,["Administrator@Tielemao",[[1,4926,"## "]],[4926,4926],[4929,4929]]],[1533658517112,["Administrator@Tielemao",[[1,6355,"## "]],[6355,6355],[6358,6358]]]],null,"Administrator@Tielemao"],["36c4e07b-845a-4330-990c-40dfaa05210e",1533776013554,"## 1、Django请求的生命周期？\n\n浏览器向服务器发送请求，经过遵循wsgi（web服务网关接口，一套协议，它没有封装socket，基于它的模块封装了socket）的模块，中间件，进入路由系统，视图处理请求数据，通过orm与数据库交互，渲染模板，将渲染后的字符串(字节)响应给浏览器，浏览器渲染页面。一次请求和响应即完成，浏览器和服务器断开连接。\n\n实现wsgi协议的模块：\n\nwsgiref uwsgi werkzreg\n\n## 2、你们在公司如果遇到要紧急修复的bug，怎么解决？\n\n在master分支上创建一个debug分支，在debug分支上进行修复，修复完毕后再合并到master并删除debug分支；再次切换回dev分支，进行开发....\n\n## 3、csrf原理？\n\n- 先发送GET请求，在用户浏览器上藏一个随机字符串\n\n- 再次发送POST请求时，浏览器自动携带随机字符串，服务器就可以校验客户端的合法性。\n\n## 4、你们是否做代码review？\n\n是的，创建一个review的分支，由组长老大（资深的开发）来进行查看。\n\n## 5、在git上如何给别的开源程序贡献代码？\n\n- fork\n\n-修改\n\n- pull request\n\n## 6、ORM和原生SQL的区别？\n\n执行效率高：原生SQL\n\n开发效率高：ORM\n\n兼容性好：指的是连接不同数据库时，ORM会帮助用户自动翻译成相应的SQL语句。\n\n## 7、你们如何基于git做协同的开发？\n\n- 每个人一个分支：master/dev/+每个人\n\n- 阶段性进行一个合并（1、2天或小功能开发完毕）\n\n## 8、[11, 33, 4, 2, 11, 4, 9, 2]去重并保持原来的顺序\n\nlist1 = [11, 33, 4, 2, 11, 4, 9, 2]\n\n去重\n\nret = list(set(list1))\n\n按照原来的顺序排序\n\nret2 = sorted(ret, key=list1.index)\n\nprint(ret2)\n\nlist1.index(11)\n\n按照年龄从小到大排序\n\nlist3 = [\n\n{\"name\": \"金老板\", \"age\": 30},\n\n{\"name\": \"Eva_J\", \"age\": 18},\n\n{\"name\": \"MJJ\", \"age\": 29}\n\n]\n\nret3 = sorted(list3, key=lambda x: x['age'])\n\n## 9、PEP8规范？\n\n1.每一级缩进使用4个空格。\n\n2.空格是首选的缩进方式。 制表符只能用于与同样使用制表符缩进的代码保持一致。Python3不允许同时使用空格和制表符的缩进。\n\n3.所有行限制的最大字符数为79。 没有结构化限制的大块文本（文档字符或者注释），每行的最大字符数限制在72。\n\n4.顶层函数和类的定义，前后用两个空行隔开。 类里的方法定义用一个空行隔开。\n\n5、与代码相矛盾的注释比没有注释还糟，当代码更改时，优先更新对应的注释！\n\n6、类名一般使用首字母大写的约定。函数名应该小写，如果想提高可读性可以用下划线分隔。\n\n……\n\n## 10、Python2与Python3的区别？\n\n1.print函数:（print 从语句变为函数，Python3中print为一个函数，必须用括号括起来）\n\n2.通过input()解析用户的输入：（Python3中input得到的为str；Python2的input的到的为int型，Python2的raw_input得到的为str类型）统一一下：Python3中用input，Python2中用row_input，都输入为str\n\n3.python2默认编码是ascii，Python 3的默认编码方式是UTF-8。\n\n4.xrange\n\n## 11、MySQL的搜索引擎有哪些？\n\nMySQL数据库引擎取决于MySQL在安装的时候是如何被编译的。要添加一个新的引擎，就必须重新编译MYSQL。在缺省情况下，MYSQL支持三个引擎：ISAM、MYISAM和HEAP。另外两种类型INNODB和BERKLEY（BDB），也常常可以使用。\n\n## 12、pymysql如何避免SQL注入？\n\nsql=\"select * from userinfo where name=%s and password=%s\"  #！！！注意%s需要去掉引号，因为pymysql会自动为我们加上 result=cursor.execute(sql,[user,pwd]) #pymysql模块自动帮我们解决sql注入的问题，只要我们按照pymysql的规矩来。\n\n## 13、什么是xss攻击？\n\nXSS攻击全称跨站脚本攻击，是为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS，XSS是一种在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。\n\n## 14、为什么要做前后端分离？\n\n- 前后端交给不同的人来编写，职责划分明确。\n\n- 后端开发一份API ，适用于不同的终端 (比如IOS,安卓,PC,微信小程序...)\n\n- vue.js等框架编写前端时，会比之前写jQuery更简单快捷。\n\n## 15、谈谈你对restful规范的理解？\n\n1.使用https代替http\n\nhttps: // www.luffycity.com / course / detail / web / 3\n\nhttp: // www.luffycity.com / course / detail / web / 3\n\n2.在URL中体现自己写的是API\n\nhttps: // www.luffycity.com / api /\n\nhttps: // api.luffycity.com / 可能会跨域\n\n3.在URL中体现版本\n\nhttps: // www.luffycity.com / api / v1 / users\n\nhttps: // www.luffycity.com / api / v2 / users\n\n4.名词（面向资源编程）\n\nhttps: // www.luffycity.com / api / v1 / users\n\nhttps: // www.luffycity.com / api / v1 / song\n\n5.行为\n\nhttps: // www.luffycity.com / api / v1 / users\n\nmethod:\n\nget, 获取\n\npost, 新建\n\nput, 更新\n\npatch, 局部更新\n\ndelete, 删除\n\n6.条件\n\nhttps: // www.luffycity.com / api / v1 / users?page = 1\n\nhttps: // www.luffycity.com / api / v1 / users?page = 1 & gender = 2\n\n7.状态码\n\n200\n\n301\n\n302\n\n404\n\n500\n\n推荐使用code:\n\ndef xx(request):\n\nret = {'code': 1000, 'data': None}\n\ntry:\n\n...\n\nexcept Exptions as e:\n\nret['status'] = 1001\n\nret['error'] = 'xxxx错误'\n\nreturn JsonResponse(ret)\n\n8.错误信息\n\n{\n\ncode: 10001,\n\nerror: '用户名或密码错误'\n\n}\n\n9.返回结果：\n\nGET:\n\nhttps: // www.luffycity.com / api / v1 / users\n\n响应：\n\n{\n\ncode: 1000,\n\ndata: [\n\n{'name': '赵森', 'age': 19},\n\n{'name': '赵云', 'age': 16},\n\n{'name': '赵云', 'age': 16},\n\n{'name': '赵云', 'age': 16},\n\n{'name': '赵云', 'age': 16},\n\n]\n\n}\n\nGET:\n\nhttps: // www.luffycity.com / api / v1 / users / 1 /\n\n响应：\n\n{\n\ncode: 1000,\n\ndata: {'name': '赵森', 'age': 19},\n\n}\n\nPOST:\n\nhttps: // www.luffycity.com / api / v1 / users\n\n请求体：\n\n{'name': '大表哥', 'age': 19}\n\n响应(不要)：\n\n{\n\ncode: 1000,\n\ndata: {'id': 9, 'name': '大表哥', 'age': 19}\n\n}\n\nPUT / PATCH:\n\nhttps: // www.luffycity.com / api / v1 / users\n\n请求体：\n\n{'name': '大表哥', 'age': 19}\n\n响应(不要)：\n\n{\n\ncode: 1000,\n\ndata: {'id': 9, 'name': '大表哥', 'age': 19}\n\n}\n\nDELETE:\n\n...\n\n10.hyper link\n\n访问：https: // www.luffycity.com / api / v1 / users\n\n{\n\ncode: 1000,\n\ndata: [\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart': https: // www.luffycity.com / api / v1 / depart / 1 /},\n\n]\n\n}\n\nhttps: // www.luffycity.com / api / v1 / users\n\n{\n\ncode: 1000,\n\ndata: [\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n{'id': 1, 'name': '赵森', 'age': 19, 'depart_title': '公关部'},\n\n]\n\n}\n\n## 16、 django rest framework框架的作用？\n\n帮助开发者快速开发出遵循restful规范的API 。\n\n## 17、django rest framework框架都有哪些组件（10）？\n\n版本：\n\nfrom rest_framework.versioning import BaseVersioning\n\n认证：\n\nfrom rest_framework.authentication import BaseAuthentication\n\nfrom rest_framework.exceptions import AuthenticationFailed\n\n权限：\n\nfrom rest_framework.permissions import BasePermission\n\n节流：\n\nfrom rest_framework.throttling import BaseThrottle, SimpleRateThrottle\n\n分页：\n\nfrom rest_framework.pagination import PageNumberPagination\n\n解析器：\n\nfrom rest_framework.parsers import JSONParser\n\n序列化：\n\nfrom rest_framework import serializers\n\n视图：\n\nfrom rest_framework.views import APIView\n\nfrom rest_framework.generics import GenericAPIView,RetrieveUpdateDestroyAPIView,ListCreateAPIView\n\nfrom rest_framework.mixins import ListModelMixin,RetrieveModelMixin,CreateModelMixin,UpdateModelMixin,DestroyModelMixin\n\nfrom rest_framework.viewsets import ModelViewSet\n\n路由：\n\nfrom rest_framework.routers import DefaultRouter\n\n渲染器：\n\nfrom rest_framework.renderers import JSONRenderer,BrowsableAPIRenderer\n\nREST_FRAMEWORK = {\n\n\"DEFAULT_AUTHENTICATION_CLASSES\":[\"api.utils.auth.MyAuth\",], #认证\n\n\"DEFAULT_PERMISSION_CLASSES\": [\"api.utils.permission.Mypermission\", ], #权限\n\n\"DEFAULT_THROTTLE_CLASSES\": [\"api.utils.throttle.MyThrottle\", ], #节流\n\n\"DEFAULT_THROTTLE_RATES\": {\n\n\"rate\": \"3/m\",\n\n},\n\n\"DEFAULT_VERSIONING_CLASS\":\"rest_framework.versioning.URLPathVersioning\",\n\n\"VERSION_PARAM\":\"version\",\n\n\"DEFAULT_VERSION\":\"v1\",\n\n\"ALLOWED_VERSIONS\":[\"v1\",\"v2\",], #版本\n\n}\n\n## 18、简述HTTP协议\n\n- 基于socket\n\n- 数据格式：\n\n\"GET /index?name=123&age=19 http1.1\\r\\nhost:www.luffyciti.com\\r\\ncontent-type:application/json...\\r\\n\\r\\n\"\n\n\"POST /index http1.1\\r\\nhost:www.luffyciti.com\\r\\ncontent-type:application/json...\\r\\n\\r\\n{name:'alex',age:18}\"\n\n\"POST /index http1.1\\r\\nhost:www.luffyciti.com\\r\\ncontent-type:application/enform.....\\r\\n\\r\\nname=alex&age=18&xx=19\"\n\n- 无状态短链接：一次请求一次响应之后断开连接。",[[1533775980492,["Administrator@Tielemao",[[-1,56,"，它没有封装socket"]],[68,68],[56,56]]],[1533775982399,["Administrator@Tielemao",[[-1,51,"，一套"]],[54,54],[51,51]]],[1533775984354,["Administrator@Tielemao",[[1,53,"）"]],[53,53],[54,54]]],[1533775986277,["Administrator@Tielemao",[[-1,54,"，"]],[55,55],[54,54]]],[1533775989552,["Administrator@Tielemao",[[-1,69,"）"]],[70,70],[69,69]]],[1533775995827,["Administrator@Tielemao",[[-1,69,"的模块"]],[72,72],[69,69]]],[1533776007324,["Administrator@Tielemao",[[-1,53,"）"]],[54,54],[53,53]]],[1533776008416,["Administrator@Tielemao",[[1,53,"，"]],[53,53],[54,54]]],[1533776015855,["Administrator@Tielemao",[[1,70,"，"]],[70,70],[71,71]]]],null,"Administrator@Tielemao"]]}