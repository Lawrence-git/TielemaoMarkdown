{"compress":true,"commitItems":[["c2ebf8c8-6e3a-46be-913a-f321bf46748f",1534389693163,"## mysql-索引\n\n发布时间：2018-06-20 10:03:25编辑：Run阅读（213）\n\n**索引的介绍**\n\n**数据库中专门用于帮助用户快速查找数据的一种数据结构。类似于字典中的目录，查找字典内容时可以根据目录查找到数据的存放位置吗，然后直接获取**\n\n**索引的作用**\n\n**约束和加速查找**\n\n**常见的几种索引:**\n\n**单列：普通索引，唯一索引，主键索引**\n\n**多列：联合索引（多列），比如：联合主键索引、联合唯一索引、联合普通索引**\n\n**联合索引，也称之为组合索引**\n\n**总结:**\n\n单列：\n唯一索引：\n  加速查找 + unique(约束)可以为空\n普通索引：\n   仅有一个功能:加速查找\n   create index ix_name on userinfo(name);\n\n主键索引：\n   加速查找+约束（不为空）\n多列：\n组合索引\n\n**主键索引比普通索引快**\n\n**无索引和有索引的区别以及建立索引的目的**\n\n**无索引： 从前往后一条一条查询**\n\n**有索引：创建索引的本质，就是创建额外的文件（某种格式存储，查询的时候，先去格外的文件找，定好位置，然后再去原始表中直接查询。但是创建索引越多，会对硬盘也是有损耗。**\n\n**建立索引的目的：**\n\n**a.额外的文件保存特殊的数据结构**\n\n**b.查询快，但是插入更新删除依然慢**\n\n**c.创建索引之后，必须命中索引才能有效**\n\n**索引的种类**\n\n**hash索引和BTree索引**\n\n**（1）hash类型的索引：查询单条快，范围查询慢**\n\n**（2）btree类型的索引：b+树，层数越多，数据量指数级增长（我们就用它，因为innodb默认支持它）**\n\n**总结:**\n\nHash索引\n优点：单条数据查询速度要快\n缺点： > < like 查询速度不一定快，因为hash索引生成hash值的是无序的，所以不能使用排序\n\nBTREE索引\ninnodb引擎 默认是Btree索引，这个是根据二分查找查询\n\n**普通索引**\n\n**作用：仅有一个加速查找**\n\n**创建表+普通索引**\n\ncreate table userinfo(\n   nid int not null auto_increment primary key,\n   name varchar(32) not null,\n   email varchar(64) not null,\n   index ix_name(name)\n);\n\n**创建普通索引**\n\ncreate index 索引的名字 on 表名(列名)\n\n**删除普通索引**\n\ndrop index 索引的名字 on 表名\n\n**查看索引**\n\nshow index from 表名\n\n**唯一索引**\n\n**唯一索引有两个功能：加速查找和唯一约束（可含null）**\n\n**创建表+唯一索引**\n\ncreate table userinfo(\n   id int not null auto_increment primary key,\n   name varchar(32) not null,\n   email varchar(64) not null,\n   unique  index  ix_name(name)\n);\n\n**创建唯一索引**\n\ncreate unique index 索引名 on 表名(列名)\n\n**删除唯一索引**\n\ndrop unique index 索引名 on 表名\n\n**主键索引**\n\n**主键索引有两个功能： 加速查找和唯一约束（不含null）**\n\n**创建表+主键索引**\n\ncreate table userinfo(\n    id int not null auto_increment primary key,\n    name varchar(32) not null,\n    email varchar(64) not null,\n    unique  index  ix_name(name)\n);\n或者\ncreate table userinfo(\n    id int not null auto_increment,\n    name varchar(32) not null,\n    email varchar(64) not null,\n    primary key(id),\n    unique  index  ix_name(name)\n);\n\n**创建主键索引**\n\nalter table 表名 add primary key(列名);\n\n**删除主键索引**\n\nalter table 表名 drop primary key;\nalter table 表名  modify  列名 int, drop primary key;\n\n**组合索引**\n\n**组合索引是将n个列组合成一个索引**\n\n**其应用场景为：频繁的同时使用n列来进行查询，如：where name = 'sam' and email = 'sam@qq.com'**\n\ncreate index 索引名 on 表名(列名1,列名2);\n\n**索引名词**\n\n#覆盖索引：在索引文件中直接获取数据\n例如：\nselect name from userinfo where name = 'Sam50000';\n\n#索引合并：把多个单列索引合并成使用\n例如：\nselect * from  userinfo where name = 'Sam13131' and id = 13131;\n\n**直接用索引字段查询，这种行为叫做覆盖索引**\n\n**组合索引查询速度 > 索引合并查询速度**\n\n**正确使用索引的情况**\n\n**数据库表中添加索引后确实会让查询速度起飞，但前提必须是正确的使用索引来查询，如果以错误的方式使用，则即使建立索引也会不奏效。**\n\n**使用索引，我们必须知道：**\n\n**  （1）创建索引 **\n\n**  （2）命中索引**\n\n**  （3）正确使用索引**\n\n**准备300w条数据：**\n\n可参考:[使用pymysql--插入300万数据](http://www.py3study.com/Article/details/id/313.html)\n\n**测试**\n\n- like '%xx'\n    select * from userinfo where name like '%zhang';\n- 使用函数\n    select * from userinfo where reverse(name) = 'zhangsan333';\n- or\n    select * from userinfo where id = 1 or email = 'zhangsan122@qq.com';\n    特别的：当or条件中有未建立索引的列才失效，以下会走索引\n            select * from userinfo where id = 1 or name = 'zhangsan1222';\n            select * from userinfo where id = 1 or email = 'zhangsan122@qq.com' and name = 'zhangsan112';\n- 类型不一致\n    如果列是字符串类型，传入条件是必须用引号引起来，不然...\n    select * from userinfo where name = 999;\n- !=\n    select count(*) from userinfo where name != 'zhangsan';\n    特别的：如果是主键，则还是会走索引\n        select count(*) from userinfo where id != 123;\n- >\n    select * from userinfo where name > 'zhangsan'\n    特别的：如果是主键或索引是整数类型，则还是会走索引\n        select * from userinfo where id > 123;\n- order by\n    select email from userinfo order by name desc;\n    当根据索引排序时候，选择的映射如果不是索引，则不走索引\n    特别的：如果对主键排序，则还是走索引：\n        select * from userinfo order by id desc;\n\n- 组合索引最左前缀\n    如果组合索引为：(name,email)\n    name and email       -- 使用索引\n    name                 -- 使用索引\n    email                -- 不使用索引\n\n**尽量使用组合索引**\n\n**什么是最左前缀呢？**\n\n#最左前缀匹配：\n#创建组合索引，name和email组合\ncreate index ix_name_email on userinfo(name,email);\n#执行下面3个sql\n\nselect * from userinfo where name = 'zhangsan';\nselect * from userinfo where name = 'zhangsan' and email='zhangsan@qq.com';\nselect * from userinfo where  email='zhangsan@qq.com';\n\nname和email组合索引之后，查询：\n（1）name        ---使用索引\n（2）name和email ---使用索引\n（3）email       ---不使用索引，因为没有name或者email字段\n对于同时搜索n个条件时，组合索引的性能好于多个单列索引\n******组合索引的性能>索引合并的性能*********\n\n**索引的注意事项（重点）**\n\n(1)避免使用select *\n(2)count(1)或count(列) 代替count(*)\n(3)创建表时尽量使用char代替varchar\n(4)表的字段顺序固定长度的字段优先\n(5)组合索引代替多个单列索引（经常使用多个条件查询时）\n(6)尽量使用短索引 （create index ix_title on tb(title(16));特殊的数据类型 text类型）\n(7)使用连接（join）来代替子查询\n(8)连表时注意条件类型需一致\n(9)索引散列（重复少）不适用于建索引，例如：性别不合适\n\n**关于第7点，目前mysql5.7版本，没有区别。它和子查询速度是一样的。**\n\n**关于第8点，假设有2个表，a和b。查询语句如下：**\n\nselect * from a left join b on b.pid=a.id\n\n**务必保证on后面等式的字段类型是一致的**\n\n**执行计划**\n\n**explain + 查询SQL - 用于显示SQL执行信息参数，根据参考信息可以进行SQL优化**\n\nmysql> explain select * from userinfo;\n+----+-------------+----------+------+---------------+------+---------+------+---------+-------+\n| id | select_type | table    | type | possible_keys | key  | key_len | ref  | rows    | Extra |\n+----+-------------+----------+------+---------------+------+---------+------+---------+-------+\n|  1 | SIMPLE      | userinfo | ALL  | NULL          | NULL | NULL    | NULL | 2973016 | NULL  |\n+----+-------------+----------+------+---------------+------+---------+------+---------+-------+\n\nmysql> explain select * from (select id,name from userinfo where id <20) as A;\n+----+-------------+------------+-------+---------------+---------+---------+------+------+-------------+\n| id | select_type | table      | type  | possible_keys | key     | key_len | ref  | rows | Extra       |\n+----+-------------+------------+-------+---------------+---------+---------+------+------+-------------+\n|  1 | PRIMARY     | <derived2> | ALL   | NULL          | NULL    | NULL    | NULL |   19 | NULL        |\n|  2 | DERIVED     | userinfo   | range | PRIMARY       | PRIMARY | 4       | NULL |   19 | Using where |\n+----+-------------+------------+-------+---------------+---------+---------+------+------+-------------+\nrows in set (0.05 sec)\n\n**参数说明:**\n\nselect_type：\n查询类型\n    SIMPLE          简单查询\n    PRIMARY         最外层查询\n    SUBQUERY        映射为子查询\n    DERIVED         子查询\n    UNION           联合\n    UNION RESULT    使用联合的结果\n\ntable：\n    正在访问的表名\ntype：\n    查询时的访问方式，性能：all < index < range < index_merge < ref_or_null < ref < eq_ref < system/const\n    ALL 全表扫描，对于数据表从头到尾找一遍\n    select * from userinfo;\n    特别的：如果有limit限制，则找到之后就不在继续向下扫描\n       select * from userinfo where email = 'zhangsan112@qq.com'\n       select * from userinfo where email = 'zhangsan112@qq.com' limit 1;\n       虽然上述两个语句都会进行全表扫描，第二句使用了limit，则找到一个后就不再继续扫描。\n\nINDEX ： 全索引扫描，对索引从头到尾找一遍\n    select nid from userinfo;\n\nRANGE： 对索引列进行范围查找\n    select *  from userinfo where name < 'zhangsan';\n    PS:\n        between and\n        in\n        >   >=  <   <=  操作\n        注意：!= 和 > 符号\n\nINDEX_MERGE： 合并索引，使用多个单列索引搜索\n    select *  from userinfo where name = 'zhangsan' or nid in (11,22,33);\n\nREF： 根据索引查找一个或多个值\n    select *  from userinfo where name = 'zhangsan112';\n\nEQ_REF： 连接时使用primary key 或 unique类型\n    select userinfo2.id,userinfo.name from userinfo2 left join tuserinfo on userinfo2.id = userinfo.id;\n\nCONST：常量\n    表最多有一个匹配行,因为仅有一行,在这行的列值可被优化器剩余部分认为是常数,const表很快,因为它们只读取一次。\n    select id from userinfo where id = 2 ;\n\nSYSTEM：系统\n    表仅有一行(=系统表)。这是const联接类型的一个特例。\n    select * from (select id from userinfo where id = 1) as A;\n\npossible_keys：可能使用的索引\n\nkey：真实使用的\n\nkey_len： MySQL中使用索引字节长度\n\nrows： mysql估计为了找到所需的行而要读取的行数 ------ 只是预估值\n\nextra：\n    该列包含MySQL解决查询的详细信息\n    \"Using index\"\n        此值表示mysql将使用覆盖索引，以避免访问表。不要把覆盖索引和index访问类型弄混了。\n    \"Using where\"\n        这意味着mysql服务器将在存储引擎检索行后再进行过滤，许多where条件里涉及索引中的列，当（并且如果）它读\n        取索引时，就能被存储引擎检验，因此不是所有带where子句的查询都会显示\"Using where\"。有时\"Using where\"的\n        出现就是一个暗示：查询可受益于不同的索引。\n    \"Using temporary\"\n        这意味着mysql在对查询结果排序时会使用一个临时表。\n    \"Using filesort\"\n        这意味着mysql会对结果使用一个外部索引排序，而不是按索引次序从表里读取行。mysql有两种文件排序算法，这\n        两种排序方式都可以在内存或者磁盘上完成，explain不会告诉你mysql将使用哪一种文件排序，也不会告诉你排序\n        会在内存里还是磁盘上完成。\n    \"Range checked for each record(index map: N)\"\n        这个意味着没有好用的索引，新的索引将在联接的每一行上重新估算，N是显示在possible_keys列中索引的位图，\n        并且是冗余的\n\n**重点：**\n\n**查询时的访问方式，性能：all<index<range<index_merge<ref_or_null<ref<eq_ref<system/const**\n\n**尽量使用主键索引，它的查询速度是最快的。**\n\n**预估sql语句的查询性能**\n\n**mysql慢日志记录**\n\n**开启慢查询日志，可以让MySQL记录下查询超过指定时间的语句，通过定位分析性能的瓶颈，才能更好的优化数据库系统的性能。**\n\n(1) 进入MySql 查询是否开了慢查询\n    show variables like 'slow_query%';\n    参数解释：\n     slow_query_log 慢查询开启状态  OFF 未开启 ON 为开启\n    slow_query_log_file 慢查询日志存放的位置（这个目录需要MySQL的运行帐号的可写权限，一般设置为MySQL的数据存放目录）\n\n（2）查看慢查询超时时间\n    show variables like 'long%';\n    ong_query_time 查询超过多少秒才记录   默认10秒 \n\n（3）开启慢日志（1）（是否开启慢查询日志，1表示开启，0表示关闭。）\n    set global slow_query_log=1;\n（4）再次查看\n    show variables like '%slow_query_log%';\n\n（5）开启慢日志（2）：（推荐）\n    在my.cnf 文件中\n    找到[mysqld]下面添加：\n    slow_query_log =1\n    slow_query_log_file=C:\\mysql-5.6.40-winx64\\data\\localhost-slow.log\n    long_query_time = 1\n\n    参数说明：\n    slow_query_log 慢查询开启状态  1 为开启\n    slow_query_log_file 慢查询日志存放的位置\n    long_query_time 查询超过多少秒才记录   默认10秒 修改为1秒\n\n**修改配置文件之后，需要重启mysql服务**\n\n**执行一个超过1秒的sql，查看慢日志文件**\n\n#执行慢sql，超过1秒的\nmysql> select * from userinfo where name = 999;\nEmpty set, 65535 warnings (1.77 sec)\n\n#查看慢日志文件路径\nmysql> show variables like '%slow_query_log%';\n+---------------------+--------------------------------------------------------------------------+\n| Variable_name       | Value                                                                    |\n+---------------------+--------------------------------------------------------------------------+\n| slow_query_log      | ON                                                                       |\n| slow_query_log_file | D:\\Program Files (x86)\\mysql-5.7.22-winx64\\data\\DESKTOP-CFMVJ8G-slow.log |\n+---------------------+--------------------------------------------------------------------------+\n2 rows in set, 1 warning (0.00 sec)\n\n#打开文件DESKTOP-CFMVJ8G-slow.log，内容如下：\n\nMySQL, Version: 5.7.22 (MySQL Community Server (GPL)). started with:\nTCP Port: 3306, Named Pipe: MySQL\nTime                 Id Command    Argument\nMySQL, Version: 5.7.22-log (MySQL Community Server (GPL)). started with:\nTCP Port: 3306, Named Pipe: (null)\nTime                 Id Command    Argument\n# Time: 2018-06-19T12:19:53.239515Z\n# User@Host: root[root] @ localhost [::1]  Id:     2\n# Query_time: 1.767427  Lock_time: 0.003748 Rows_sent: 0  Rows_examined: 3000000\nuse db1;\nSET timestamp=1529410793;\nselect * from userinfo where name = 999;\n\n可以看到Query_time的时间为1.767427秒\n\n**分页性能相关方案**\n\n第1页：\nselect * from userinfo limit 0,10;\n第2页：\nselect * from userinfo limit 10,10;\n第3页：\nselect * from userinfo limit 20,10;\n第4页：\nselect * from userinfo limit 30,10;\n......\n第2000010页\nselect * from userinfo limit 2000000,10;\n\nPS:会发现，越往后查询，需要的时间约长，是因为越往后查，全文扫描查询，会去数据表中扫描查询\n\n**最优的解决方案**\n\n** (1) 只有上一页和下一页**\n\n**语法:**\n\n下一页：\nselect * from userinfo where id>max_id limit 10;\n\n上一页：\nselect * from userinfo where id<min_id order by id desc limit 10;\n\n**因为使用where id<min_id，默认是从1开始的。但是min_id是一个中间值，所以需要order by id desc，才能得到想要的id，最后使用limit取出指定的长度，就是最终的结果**\n\n**(2) 中间有页码的情况**\n\n****语法：****\n\nselect * from (select * from userinfo where id > pre_max_id limit (cur_max_id-pre_max_id))*10) as A order\n by id desc limit 10;",[[1534389641092,["Administrator@Tielemao",[[1,13,"\n"]],[12,12],[13,13]]],[1534389653644,["Administrator@Tielemao",[[1,13,"http://www.py3study.com/Article/details/id/314.html"]],[13,13],[64,64]]],[1534389667599,["Administrator@Tielemao",[[-1,95,"阅读（213）"]],[95,102],[95,95]]],[1534389671761,["Administrator@Tielemao",[[-1,89,""],[1,89," "],[-1,321,"  "],[1,323,"  "],[-1,327," + "],[1,330," + "],[-1,351,"   "],[1,354,"   "],[-1,366,"   "],[1,369,"   "],[-1,375," "],[1,376," "],[-1,381," "],[1,382," "],[-1,389," on "],[1,393," on "],[-1,416,"   "],[1,419,"   "],[-1,827," > < "],[1,832," > < "],[-1,836," "],[1,837," "],[-1,893," "],[1,894," "],[-1,965," "],[1,966," "],[-1,971," "],[1,972," "],[-1,982,"   nid int not "],[1,997,"   nid int not "],[-1,1001," "],[1,1002," "],[-1,1016," "],[1,1017," "],[-1,1024," "],[1,1025," "],[-1,1030,"   "],[1,1033,"   "],[-1,1037," "],[1,1038," "],[-1,1049," not "],[1,1054," not "],[-1,1060,"   "],[1,1063,"   "],[-1,1068," "],[1,1069," "],[-1,1080," not "],[1,1085," not "],[-1,1091,"   "],[1,1094,"   "],[-1,1099," "],[1,1100," "],[-1,1136," "],[1,1137," "],[-1,1142," "],[1,1143," "],[-1,1148," on "],[1,1152," on "],[-1,1176," "],[1,1177," "],[-1,1182," "],[1,1183," "],[-1,1188," on "],[1,1192," on "],[-1,1210," "],[1,1211," "],[-1,1216," "],[1,1217," "],[-1,1221," "],[1,1222," "],[-1,1289," "],[1,1290," "],[-1,1295," "],[1,1296," "],[-1,1306,"   id int not "],[1,1320,"   id int not "],[-1,1324," "],[1,1325," "],[-1,1339," "],[1,1340," "],[-1,1347," "],[1,1348," "],[-1,1353,"   "],[1,1356,"   "],[-1,1360," "],[1,1361," "],[-1,1372," not "],[1,1377," not "],[-1,1383,"   "],[1,1386,"   "],[-1,1391," "],[1,1392," "],[-1,1403," not "],[1,1408," not "],[-1,1414,"   "],[1,1417,"   "],[-1,1423,"  "],[1,1425,"  "],[-1,1430,"  "],[1,1432,"  "],[-1,1468," "],[1,1469," "],[-1,1475," "],[1,1476," "],[-1,1481," 索引名 on "],[1,1489," 索引名 on "],[-1,1513," "],[1,1514," "],[-1,1520," "],[1,1521," "],[-1,1526," 索引名 on "],[1,1534," 索引名 on "],[-1,1602," "],[1,1603," "],[-1,1608," "],[1,1609," "],[-1,1619,"    id int not "],[1,1634,"    id int not "],[-1,1638," "],[1,1639," "],[-1,1653," "],[1,1654," "],[-1,1661," "],[1,1662," "],[-1,1667,"    "],[1,1671,"    "],[-1,1675," "],[1,1676," "],[-1,1687," not "],[1,1692," not "],[-1,1698,"    "],[1,1702,"    "],[-1,1707," "],[1,1708," "],[-1,1719," not "],[1,1724," not "],[-1,1730,"    "],[1,1734,"    "],[-1,1740,"  "],[1,1742,"  "],[-1,1747,"  "],[1,1749,"  "],[-1,1775," "],[1,1776," "],[-1,1781," "],[1,1782," "],[-1,1792,"    id int not "],[1,1807,"    id int not "],[-1,1811," "],[1,1812," "],[-1,1828,"    "],[1,1832,"    "],[-1,1836," "],[1,1837," "],[-1,1848," not "],[1,1853," not "],[-1,1859,"    "],[1,1863,"    "],[-1,1868," "],[1,1869," "],[-1,1880," not "],[1,1885," not "],[-1,1891,"    "],[1,1895,"    "],[-1,1902," "],[1,1903," "],[-1,1912,"    "],[1,1916,"    "],[-1,1922,"  "],[1,1924,"  "],[-1,1929,"  "],[1,1931,"  "],[-1,1966," "],[1,1967," "],[-1,1972," 表名 add "],[1,1980," 表名 add "],[-1,1987," "],[1,1988," "],[-1,2015," "],[1,2016," "],[-1,2021," 表名 "],[1,2025," 表名 "],[-1,2029," "],[1,2030," "],[-1,2037," "],[1,2038," "],[-1,2048," "],[1,2049," "],[-1,2054," 表名  "],[1,2059," 表名  "],[-1,2065,"  列名 "],[1,2070,"  列名 "],[-1,2074," "],[1,2075," "],[-1,2079," "],[1,2080," "],[-1,2087," "],[1,2088," "],[-1,2205," "],[1,2206," "],[-1,2211," 索引名 on "],[1,2219," 索引名 on "],[-1,2272," "],[1,2273," "],[-1,2277," "],[1,2278," "],[-1,2282," "],[1,2283," "],[-1,2291," "],[1,2292," "],[-1,2297," "],[1,2298," "],[-1,2302," = "],[1,2305," = "],[-1,2347," * "],[1,2350," * "],[-1,2354,"  "],[1,2356,"  "],[-1,2364," "],[1,2365," "],[-1,2370," "],[1,2371," "],[-1,2375," = "],[1,2378," = "],[-1,2388," and id = "],[1,2398," and id = "],[-1,2560," "],[1,2561," "],[-1,2569," "],[1,2570," "],[-1,2576," "],[1,2577," "],[-1,2591," "],[1,2592," "],[-1,2711," "],[1,2712," "],[-1,2716," "],[1,2717," "],[-1,2723,"    "],[1,2727,"    "],[-1,2733," * "],[1,2736," * "],[-1,2740," "],[1,2741," "],[-1,2749," "],[1,2750," "],[-1,2755," "],[1,2756," "],[-1,2760," "],[1,2761," "],[-1,2765," "],[1,2766," "],[-1,2777," "],[1,2778," "],[-1,2783,"    "],[1,2787,"    "],[-1,2793," * "],[1,2796," * "],[-1,2800," "],[1,2801," "],[-1,2809," "],[1,2810," "],[-1,2815," "],[1,2816," "],[-1,2829," = "],[1,2832," = "],[-1,2848," or\n    "],[1,2856," or\n    "],[-1,2862," * "],[1,2865," * "],[-1,2869," "],[1,2870," "],[-1,2878," "],[1,2879," "],[-1,2884," id = 1 or "],[1,2895," id = 1 or "],[-1,2900," = "],[1,2903," = "],[-1,2925,"    "],[1,2929,"    "],[-1,2958,"            "],[1,2970,"            "],[-1,2976," * "],[1,2979," * "],[-1,2983," "],[1,2984," "],[-1,2992," "],[1,2993," "],[-1,2998," id = 1 or "],[1,3009," id = 1 or "],[-1,3013," = "],[1,3016," = "],[-1,3032,"            "],[1,3044,"            "],[-1,3050," * "],[1,3053," * "],[-1,3057," "],[1,3058," "],[-1,3066," "],[1,3067," "],[-1,3072," id = 1 or "],[1,3083," id = 1 or "],[-1,3088," = "],[1,3091," = "],[-1,3111," and "],[1,3116," and "],[-1,3120," = "],[1,3123," = "],[-1,3139," "],[1,3140," "],[-1,3146,"    "],[1,3150,"    "],[-1,3180,"    "],[1,3184,"    "],[-1,3190," * "],[1,3193," * "],[-1,3197," "],[1,3198," "],[-1,3206," "],[1,3207," "],[-1,3212," "],[1,3213," "],[-1,3217," = "],[1,3220," = "],[-1,3226," !=\n    "],[1,3234," !=\n    "],[-1,3240," "],[1,3241," "],[-1,3249," "],[1,3250," "],[-1,3254," "],[1,3255," "],[-1,3263," "],[1,3264," "],[-1,3269," "],[1,3270," "],[-1,3274," != "],[1,3278," != "],[-1,3290,"    "],[1,3294,"    "],[-1,3312,"        "],[1,3320,"        "],[-1,3326," "],[1,3327," "],[-1,3335," "],[1,3336," "],[-1,3340," "],[1,3341," "],[-1,3349," "],[1,3350," "],[-1,3355," id != "],[1,3362," id != "],[-1,3368," >\n    "],[1,3375," >\n    "],[-1,3381," * "],[1,3384," * "],[-1,3388," "],[1,3389," "],[-1,3397," "],[1,3398," "],[-1,3403," "],[1,3404," "],[-1,3408," > "],[1,3411," > "],[-1,3422,"    "],[1,3426,"    "],[-1,3452,"        "],[1,3460,"        "],[-1,3466," * "],[1,3469," * "],[-1,3473," "],[1,3474," "],[-1,3482," "],[1,3483," "],[-1,3488," id > "],[1,3494," id > "],[-1,3500," "],[1,3501," "],[-1,3506," by\n    "],[1,3514," by\n    "],[-1,3520," "],[1,3521," "],[-1,3526," "],[1,3527," "],[-1,3531," "],[1,3532," "],[-1,3540," "],[1,3541," "],[-1,3546," by "],[1,3550," by "],[-1,3554," "],[1,3555," "],[-1,3561,"    "],[1,3565,"    "],[-1,3593,"    "],[1,3597,"    "],[-1,3617,"        "],[1,3625,"        "],[-1,3631," * "],[1,3634," * "],[-1,3638," "],[1,3639," "],[-1,3647," "],[1,3648," "],[-1,3653," by id "],[1,3660," by id "],[-1,3668," "],[1,3669," "],[-1,3678,"    "],[1,3682,"    "],[-1,3703,"    "],[1,3707,"    "],[-1,3711," and "],[1,3716," and "],[-1,3721,"       -- "],[1,3731,"       -- "],[-1,3736,"    "],[1,3740,"    "],[-1,3744,"                 -- "],[1,3764,"                 -- "],[-1,3769,"    "],[1,3773,"    "],[-1,3778,"                -- "],[1,3797,"                -- "],[-1,3869," "],[1,3870," "],[-1,3875," "],[1,3876," "],[-1,3889," on "],[1,3893," on "],[-1,3933," * "],[1,3936," * "],[-1,3940," "],[1,3941," "],[-1,3949," "],[1,3950," "],[-1,3955," "],[1,3956," "],[-1,3960," = "],[1,3963," = "],[-1,3981," * "],[1,3984," * "],[-1,3988," "],[1,3989," "],[-1,3997," "],[1,3998," "],[-1,4003," "],[1,4004," "],[-1,4008," = "],[1,4011," = "],[-1,4021," and "],[1,4026," and "],[-1,4057," * "],[1,4060," * "],[-1,4064," "],[1,4065," "],[-1,4073," "],[1,4074," "],[-1,4079,"  "],[1,4081,"  "],[-1,4135,"        "],[1,4143,"        "],[-1,4164," "],[1,4165," "],[-1,4181,"       "],[1,4188,"       "],[-1,4305," "],[1,4306," "],[-1,4328," "],[1,4329," "],[-1,4423," "],[1,4424," "],[-1,4431," "],[1,4432," "],[-1,4437," "],[1,4438," "],[-1,4446," on "],[1,4450," on "],[-1,4471," "],[1,4472," "],[-1,4624," * "],[1,4627," * "],[-1,4631," a "],[1,4634," a "],[-1,4638," "],[1,4639," "],[-1,4643," b on "],[1,4649," b on "],[-1,4755," "],[1,4756," "],[-1,4763," "],[1,4764," "],[-1,4770," * "],[1,4773," * "],[-1,4777," "],[1,4778," "],[-1,4886," id | "],[1,4892," id | "],[-1,4903," | "],[1,4906," | "],[-1,4911,"    | "],[1,4917,"    | "],[-1,4921," | "],[1,4924," | "],[-1,4937," | key  | "],[1,4947," | key  | "],[-1,4954," | ref  | "],[1,4964," | ref  | "],[-1,4968,"    | "],[1,4974,"    | "],[-1,4979," "],[1,4980," "],[-1,5080,"  1 | "],[1,5086,"  1 | "],[-1,5092,"      | "],[1,5100,"      | "],[-1,5108," | ALL  | "],[1,5118," | ALL  | "],[-1,5122,"          | "],[1,5134,"          | "],[-1,5138," | "],[1,5141," | "],[-1,5145,"    | "],[1,5151,"    | "],[-1,5155," | "],[1,5158," | "],[-1,5165," | "],[1,5168," | "],[-1,5172,"  "],[1,5174,"  "],[-1,5280," "],[1,5281," "],[-1,5288," "],[1,5289," "],[-1,5295," * "],[1,5298," * "],[-1,5302," "],[1,5303," "],[-1,5310," "],[1,5311," "],[-1,5318," "],[1,5319," "],[-1,5323," "],[1,5324," "],[-1,5332," "],[1,5333," "],[-1,5338," id "],[1,5342," id "],[-1,5346," as "],[1,5350," as "],[-1,5460," id | "],[1,5466," id | "],[-1,5477," | "],[1,5480," | "],[-1,5485,"      | "],[1,5493,"      | "],[-1,5497,"  | "],[1,5501,"  | "],[-1,5514," | key     | "],[1,5527," | key     | "],[-1,5534," | ref  | "],[1,5544," | ref  | "],[-1,5548," | "],[1,5551," | "],[-1,5556,"       "],[1,5563,"       "],[-1,5672,"  1 | "],[1,5678,"  1 | "],[-1,5685,"     | "],[1,5692,"     | "],[-1,5702," | ALL   | "],[1,5713," | ALL   | "],[-1,5717,"          | "],[1,5729,"          | "],[-1,5733,"    | "],[1,5739,"    | "],[-1,5743,"    | "],[1,5749,"    | "],[-1,5753," |   19 | "],[1,5763," |   19 | "],[-1,5767,"        |\n|  2 | "],[1,5784,"        |\n|  2 | "],[-1,5791,"     | "],[1,5798,"     | "],[-1,5806,"   | "],[1,5811,"   | "],[-1,5816," | "],[1,5819," | "],[-1,5826,"       | "],[1,5835,"       | "],[-1,5842," | 4       | "],[1,5855," | 4       | "],[-1,5859," |   19 | "],[1,5869," |   19 | "],[-1,5874," "],[1,5875," "],[-1,5880," "],[1,5881," "],[-1,5993," in set "],[1,6001," in set "],[-1,6006," "],[1,6007," "],[-1,6042,"    "],[1,6046,"    "],[-1,6052,"          "],[1,6062,"          "],[-1,6067,"    "],[1,6071,"    "],[-1,6078,"         "],[1,6087,"         "],[-1,6093,"    "],[1,6097,"    "],[-1,6105,"        "],[1,6113,"        "],[-1,6120,"    "],[1,6124,"    "],[-1,6131,"         "],[1,6140,"         "],[-1,6144,"    "],[1,6148,"    "],[-1,6153,"           联合\n    "],[1,6171,"           联合\n    "],[-1,6176," "],[1,6177," "],[-1,6183,"    "],[1,6187,"    "],[-1,6203,"    "],[1,6207,"    "],[-1,6221,"    "],[1,6225,"    "],[-1,6240," < "],[1,6243," < "],[-1,6248," < "],[1,6251," < "],[-1,6256," < "],[1,6259," < "],[-1,6270," < "],[1,6273," < "],[-1,6284," < ref < "],[1,6293," < ref < "],[-1,6299," < "],[1,6302," < "],[-1,6315,"    ALL "],[1,6323,"    ALL "],[-1,6341,"    "],[1,6345,"    "],[-1,6351," * "],[1,6354," * "],[-1,6358," "],[1,6359," "],[-1,6369,"    "],[1,6373,"    "],[-1,6403,"       "],[1,6410,"       "],[-1,6416," * "],[1,6419," * "],[-1,6423," "],[1,6424," "],[-1,6432," "],[1,6433," "],[-1,6438," "],[1,6439," "],[-1,6444," = "],[1,6447," = "],[-1,6468,"       "],[1,6475,"       "],[-1,6481," * "],[1,6484," * "],[-1,6488," "],[1,6489," "],[-1,6497," "],[1,6498," "],[-1,6503," "],[1,6504," "],[-1,6509," = "],[1,6512," = "],[-1,6532," "],[1,6533," "],[-1,6538," 1;\n       "],[1,6549," 1;\n       "],[-1,6599," ： "],[1,6602," ： "],[-1,6619,"    "],[1,6623,"    "],[-1,6629," nid "],[1,6634," nid "],[-1,6638," "],[1,6639," "],[-1,6656," "],[1,6657," "],[-1,6668,"    "],[1,6672,"    "],[-1,6678," *  "],[1,6682," *  "],[-1,6686," "],[1,6687," "],[-1,6695," "],[1,6696," "],[-1,6701," "],[1,6702," "],[-1,6706," < "],[1,6709," < "],[-1,6721,"    "],[1,6725,"    "],[-1,6729,"        "],[1,6737,"        "],[-1,6744," "],[1,6745," "],[-1,6749,"        in\n        >   >=  <   <=  操作\n        "],[1,6795,"        in\n        >   >=  <   <=  操作\n        "],[-1,6800," 和 > "],[1,6805," 和 > "],[-1,6821," "],[1,6822," "],[-1,6838,"    "],[1,6842,"    "],[-1,6848," *  "],[1,6852," *  "],[-1,6856," "],[1,6857," "],[-1,6865," "],[1,6866," "],[-1,6871," "],[1,6872," "],[-1,6876," = "],[1,6879," = "],[-1,6889," or nid in "],[1,6900," or nid in "],[-1,6917," "],[1,6918," "],[-1,6931,"    "],[1,6935,"    "],[-1,6941," *  "],[1,6945," *  "],[-1,6949," "],[1,6950," "],[-1,6958," "],[1,6959," "],[-1,6964," "],[1,6965," "],[-1,6969," = "],[1,6972," = "],[-1,6995," "],[1,6996," "],[-1,7008," key 或 "],[1,7015," key 或 "],[-1,7024,"    "],[1,7028,"    "],[-1,7034," "],[1,7035," "],[-1,7061," "],[1,7062," "],[-1,7066," "],[1,7067," "],[-1,7076," "],[1,7077," "],[-1,7081," "],[1,7082," "],[-1,7086," "],[1,7087," "],[-1,7096," on "],[1,7100," on "],[-1,7112," = "],[1,7115," = "],[-1,7138,"    "],[1,7142,"    "],[-1,7200,"    "],[1,7204,"    "],[-1,7210," id "],[1,7214," id "],[-1,7218," "],[1,7219," "],[-1,7227," "],[1,7228," "],[-1,7233," id = 2 "],[1,7241," id = 2 "],[-1,7254,"    "],[1,7258,"    "],[-1,7288,"    "],[1,7292,"    "],[-1,7298," * "],[1,7301," * "],[-1,7305," "],[1,7306," "],[-1,7313," id "],[1,7317," id "],[-1,7321," "],[1,7322," "],[-1,7330," "],[1,7331," "],[-1,7336," id = 1) as "],[1,7348," id = 1) as "],[-1,7394," "],[1,7395," "],[-1,7416," "],[1,7417," "],[-1,7439," "],[1,7440," "],[-1,7446," "],[1,7447," "],[-1,7461,"    "],[1,7465,"    "],[-1,7484,"    "],[1,7488,"    "],[-1,7494," "],[1,7495," "],[-1,7502,"        "],[1,7510,"        "],[-1,7556,"    "],[1,7560,"    "],[-1,7566," "],[1,7567," "],[-1,7574,"        "],[1,7582,"        "],[-1,7638,"        "],[1,7646,"        "],[-1,7688," "],[1,7689," "],[-1,7704," "],[1,7705," "],[-1,7713,"        "],[1,7721,"        "],[-1,7743,"    "],[1,7747,"    "],[-1,7753," "],[1,7754," "],[-1,7765,"        "],[1,7773,"        "],[-1,7801,"    "],[1,7805,"    "],[-1,7811," "],[1,7812," "],[-1,7822,"        "],[1,7830,"        "],[-1,7886,"        "],[1,7894,"        "],[-1,7951,"        "],[1,7959,"        "],[-1,7973,"    "],[1,7977,"    "],[-1,7983," "],[1,7984," "],[-1,7991," for "],[1,7996," for "],[-1,8000," "],[1,8001," "],[-1,8013," "],[1,8014," "],[-1,8018," "],[1,8019," "],[-1,8023,"        "],[1,8031,"        "],[-1,8089,"        "],[1,8097,"        "],[-1,8323," "],[1,8324," "],[-1,8331," "],[1,8332," "],[-1,8342,"    "],[1,8346,"    "],[-1,8350," "],[1,8351," "],[-1,8360," "],[1,8361," "],[-1,8365," "],[1,8366," "],[-1,8381,"    "],[1,8385,"    "],[-1,8391,"     "],[1,8396,"     "],[-1,8410," "],[1,8411," "],[-1,8418,"  OFF 未开启 ON "],[1,8431,"  OFF 未开启 ON "],[-1,8435,"    "],[1,8439,"    "],[-1,8458," "],[1,8459," "],[-1,8525,"    "],[1,8529,"    "],[-1,8533," "],[1,8534," "],[-1,8543," "],[1,8544," "],[-1,8548," "],[1,8549," "],[-1,8558,"    "],[1,8562,"    "],[-1,8576," "],[1,8577," "],[-1,8587,"   "],[1,8590,"   "],[-1,8595," "],[1,8596," "],[-1,8634,"    set "],[1,8642,"    set "],[-1,8648," "],[1,8649," "],[-1,8675,"    "],[1,8679,"    "],[-1,8683," "],[1,8684," "],[-1,8693," "],[1,8694," "],[-1,8698," "],[1,8699," "],[-1,8737,"    "],[1,8741,"    "],[-1,8748," "],[1,8749," "],[-1,8753,"    "],[1,8757,"    "],[-1,8773,"    "],[1,8777,"    "],[-1,8791," =1\n    "],[1,8799," =1\n    "],[-1,8866,"    "],[1,8870,"    "],[-1,8885," = 1\n\n    "],[1,8895," = 1\n\n    "],[-1,8901,"    "],[1,8905,"    "],[-1,8919," "],[1,8920," "],[-1,8927,"  1 "],[1,8931,"  1 "],[-1,8935,"    "],[1,8939,"    "],[-1,8958," "],[1,8959," "],[-1,8970,"    "],[1,8974,"    "],[-1,8989," "],[1,8990," "],[-1,9000,"   "],[1,9003,"   "],[-1,9008," "],[1,9009," "],[-1,9088," "],[1,9089," "],[-1,9095," * "],[1,9098," * "],[-1,9102," "],[1,9103," "],[-1,9111," "],[1,9112," "],[-1,9117," "],[1,9118," "],[-1,9122," = "],[1,9125," = "],[-1,9135," "],[1,9136," "],[-1,9140," "],[1,9141," "],[-1,9146," "],[1,9147," "],[-1,9155," "],[1,9156," "],[-1,9161," "],[1,9162," "],[-1,9185," "],[1,9186," "],[-1,9190," "],[1,9191," "],[-1,9200," "],[1,9201," "],[-1,9205," "],[1,9206," "],[-1,9326," "],[1,9327," "],[-1,9340,"       | "],[1,9349,"       | "],[-1,9354,"                                                                    "],[1,9422,"                                                                    "],[-1,9524," "],[1,9525," "],[-1,9539,"      | ON                                                                       |\n| "],[1,9624,"      | ON                                                                       |\n| "],[-1,9643," | "],[1,9646," | "],[-1,9656," "],[1,9657," "],[-1,9662," "],[1,9663," "],[-1,9718," "],[1,9719," "],[-1,9821," "],[1,9822," "],[-1,9826," in "],[1,9830," in "],[-1,9834," 1 "],[1,9837," 1 "],[-1,9844," "],[1,9845," "],[-1,9850," "],[1,9851," "],[-1,9900," "],[1,9901," "],[-1,9909," "],[1,9910," "],[-1,9916," "],[1,9917," "],[-1,9923," "],[1,9924," "],[-1,9933," "],[1,9934," "],[-1,9940," "],[1,9941," "],[-1,9948," "],[1,9949," "],[-1,9956," "],[1,9957," "],[-1,9966," "],[1,9967," "],[-1,9972," "],[1,9973," "],[-1,9978," "],[1,9979," "],[-1,9984," "],[1,9985," "],[-1,9990," "],[1,9991," "],[-1,10001,"                 Id "],[1,10021,"                 Id "],[-1,10028,"    "],[1,10032,"    "],[-1,10047," "],[1,10048," "],[-1,10056," "],[1,10057," "],[-1,10067," "],[1,10068," "],[-1,10074," "],[1,10075," "],[-1,10084," "],[1,10085," "],[-1,10091," "],[1,10092," "],[-1,10099," "],[1,10100," "],[-1,10107," "],[1,10108," "],[-1,10117," "],[1,10118," "],[-1,10123," "],[1,10124," "],[-1,10129," "],[1,10130," "],[-1,10135," "],[1,10136," "],[-1,10141," "],[1,10142," "],[-1,10153,"                 Id "],[1,10173,"                 Id "],[-1,10180,"    "],[1,10184,"    "],[-1,10194," "],[1,10195," "],[-1,10200," "],[1,10201," "],[-1,10230," "],[1,10231," "],[-1,10241," "],[1,10242," "],[-1,10252," @ "],[1,10255," @ "],[-1,10264," "],[1,10265," "],[-1,10270,"  Id:     2\n# "],[1,10284,"  Id:     2\n# "],[-1,10295," "],[1,10296," "],[-1,10304,"  "],[1,10306,"  "],[-1,10316," "],[1,10317," "],[-1,10325," "],[1,10326," "],[-1,10336," 0  "],[1,10340," 0  "],[-1,10354," "],[1,10355," "],[-1,10366," "],[1,10367," "],[-1,10375," "],[1,10376," "],[-1,10404," * "],[1,10407," * "],[-1,10411," "],[1,10412," "],[-1,10420," "],[1,10421," "],[-1,10426," "],[1,10427," "],[-1,10431," = "],[1,10434," = "],[-1,10494," * "],[1,10497," * "],[-1,10501," "],[1,10502," "],[-1,10510," "],[1,10511," "],[-1,10516," "],[1,10517," "],[-1,10534," * "],[1,10537," * "],[-1,10541," "],[1,10542," "],[-1,10550," "],[1,10551," "],[-1,10556," "],[1,10557," "],[-1,10575," * "],[1,10578," * "],[-1,10582," "],[1,10583," "],[-1,10591," "],[1,10592," "],[-1,10597," "],[1,10598," "],[-1,10616," * "],[1,10619," * "],[-1,10623," "],[1,10624," "],[-1,10632," "],[1,10633," "],[-1,10638," "],[1,10639," "],[-1,10669," * "],[1,10672," * "],[-1,10676," "],[1,10677," "],[-1,10685," "],[1,10686," "],[-1,10691," "],[1,10692," "],[-1,10768," "],[1,10769," "],[-1,10806," * "],[1,10809," * "],[-1,10813," "],[1,10814," "],[-1,10822," "],[1,10823," "],[-1,10828," "],[1,10829," "],[-1,10838," "],[1,10839," "],[-1,10844," "],[1,10845," "],[-1,10861," * "],[1,10864," * "],[-1,10868," "],[1,10869," "],[-1,10877," "],[1,10878," "],[-1,10883," "],[1,10884," "],[-1,10893," "],[1,10894," "],[-1,10899," by id "],[1,10906," by id "],[-1,10910," "],[1,10911," "],[-1,10916," "],[1,10917," "],[-1,11064," * "],[1,11067," * "],[-1,11071," "],[1,11072," "],[-1,11079," * "],[1,11082," * "],[-1,11086," "],[1,11087," "],[-1,11095," "],[1,11096," "],[-1,11101," id > "],[1,11107," id > "],[-1,11117," "],[1,11118," "],[-1,11123," "],[1,11124," "],[-1,11152," as A "],[1,11158," as A "],[-1,11164," by id "],[1,11171," by id "],[-1,11175," "],[1,11176," "],[-1,11181," "],[1,11182,"    "]],[89,89],[93,93]]]],null,"Administrator@Tielemao"]]}