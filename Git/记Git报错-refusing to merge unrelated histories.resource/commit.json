{"compress":true,"commitItems":[["57666820-fe4e-4e6d-b2bc-e80e6701e347",1528287450879,"# 记Git报错-refusing to merge unrelated histories\n\n[[toc]]\n\n## 环境\n\n系统：win7\ngit版本： 2.16.2.windows.1\n\n## 问题\n\n1、本地初始化了git仓库，放了一些文件进去并进行了add操作和commit提交操作；\n```git\n$git add -A\n$git commit -m \"start 2018-06-06\"\n```\n2、github创建了git仓库并建立了README文件；\n\n3、本地仓库添加了github上的git仓库作为远程仓库，起名origin；\n```git\n$git remote add origin https://github.com/tielemao/TielemaoMarkdown\n```\n![Github创建远程仓库](https://www.tielemao.com/wp-content/uploads/2018/06/GithubGreatRepository.jpg)\n\n4、问题来了，本地仓库在想做同步远程仓库到本地为之后本地仓库推送到远程仓库做准备时报错了，错误如下：\n\n`fatal: refusing to merge unrelated histories`\n（拒绝合并不相关的历史）\n\n## 解决\n\n出现这个问题的最主要原因还是在于本地仓库和远程仓库实际上是独立的两个仓库。假如我之前是直接clone的方式在本地建立起远程github仓库的克隆本地仓库就不会有这问题了。\n\n查阅了一下资料，发现可以在pull命令后紧接着使用`--allow-unrelated-history`选项来解决问题（该选项可以合并两个独立启动仓库的历史）。\n\n命令：\n```git\n$git pull origin master –allow-unrelated-histories\n```\n以上是将远程仓库的文件拉取到本地仓库了。\n紧接着将本地仓库的提交推送到远程github仓库上，使用的命令是：\n\n```git\n$ git push <远程主机名> <本地分支名>:<远程分支名>\n也就是\n$git push origin master:master\n提交成功。\n```\n## pull\n\n`git pull` 命令基本上就是 `git fetch` 和 `git merge` 命令的组合体，Git 从指定的远程仓库中抓取内容，然后马上尝试将其合并进你所在的分支中。\n\n从远程仓库中获得数据，可以执行：\n\n```console\n$ git fetch [remote-name]\n```\n这个命令会访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。\n\n但是注意的是 `git fetch` 并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。\n\n如果你使用 `clone` 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。 所以，`git fetch origin` 会抓取克隆（或上一次抓取）后新推送的所有工作。\n\n由于fetch命令后还要再做一步merge命令的操作，所以使用 `git pull` 命令来自动的抓取然后合并远程分支到当前分支。 （相当于一次执行fetch加merge命令）这可能会是一个更简单或更舒服的工作流程。\n\n【end】",[[1528287428005,["Administrator@Tielemao",[[-1,354,"![Github创建远程仓库](https://www.tielemao.com/wp-content/uploads/2018/06/GithubGreatRepository.jpg)"]],[354,448],[354,354]]],[1528287429377,["Administrator@Tielemao",[[1,236,"\n"]],[234,234],[235,235]]],[1528287429789,["Administrator@Tielemao",[[1,237,"\n"]],[235,235],[236,236]]],[1528287433033,["Administrator@Tielemao",[[1,236,"![Github创建远程仓库](https://www.tielemao.com/wp-content/uploads/2018/06/GithubGreatRepository.jpg)"]],[236,236],[330,330]]],[1528287482525,["Administrator@Tielemao",[[1,450,"https://www.tielemao.com/wp-content/uploads/2018/06/GitAddRemote.jpg"]],[450,450],[518,518]]],[1528287488899,["Administrator@Tielemao",[[1,450,"![]("]],[450,450],[454,454]]],[1528287491734,["Administrator@Tielemao",[[1,522,")"]],[522,522],[523,523]]],[1528287509703,["Administrator@Tielemao",[[1,452,"/GitAddRemote"]],[452,452],[465,465]]],[1528287528341,["Administrator@Tielemao",[[1,1036,"\n"]],[1035,1035],[1036,1036]]],[1528287529858,["Administrator@Tielemao",[[1,1037,"\n"]],[1035,1035],[1036,1036]]],[1528287531065,["Administrator@Tielemao",[[1,1036,"https://www.tielemao.com/wp-content/uploads/2018/06/GitPushRemote.jpg"]],[1036,1036],[1105,1105]]],[1528287536205,["Administrator@Tielemao",[[1,1036,"![]("]],[1036,1036],[1040,1040]]],[1528287539100,["Administrator@Tielemao",[[1,1109,")"]],[1109,1109],[1110,1110]]],[1528287545379,["Administrator@Tielemao",[[1,1038,"GitPushRemote"]],[1038,1038],[1051,1051]]],[1528287583438,["Administrator@Tielemao",[[1,1627,"\n\n"]],[1627,1627],[1628,1628]]],[1528287587035,["Administrator@Tielemao",[[-1,1628,"\n"],[1,1629,"2018-06-06"]],[1628,1628],[1638,1638]]],[1528287588885,["Administrator@Tielemao",[[1,1638,"\n\n"]],[1638,1638],[1639,1639]]],[1528287589387,["Administrator@Tielemao",[[-1,1639,"\n"],[1,1640,"qr"]],[1639,1639],[1641,1641]]],[1528287590078,["Administrator@Tielemao",[[-1,1640,"r"]],[1641,1641],[1640,1640]]],[1528287590264,["Administrator@Tielemao",[[-1,1639,"q"],[1,1640,"\n"]],[1640,1640],[1639,1639]]],[1528287592918,["Administrator@Tielemao",[[-1,1639,"\n"],[1,1640,"铁乐与猫"]],[1639,1639],[1643,1643]]]],null,null],["f02a4ca0-fd80-4fcf-9e2a-8e59ad79c425",1531834912231,"# 记Git报错-refusing to merge unrelated histories\n\n[[toc]]\n\n## 环境\n\n系统：win7\ngit版本： 2.16.2.windows.1\n\n## 问题\n\n1、本地初始化了git仓库，放了一些文件进去并进行了add操作和commit提交操作；\n```git\n$git add -A\n$git commit -m \"start 2018-06-06\"\n```\n2、github创建了git仓库并建立了README文件；\n\n![Github创建远程仓库](https://www.tielemao.com/wp-content/uploads/2018/06/GithubGreatRepository.jpg)\n\n3、本地仓库添加了github上的git仓库作为远程仓库，起名origin；\n```git\n$git remote add origin https://github.com/tielemao/TielemaoMarkdown\n```\n![/GitAddRemote](https://www.tielemao.com/wp-content/uploads/2018/06/GitAddRemote.jpg)\n\n4、问题来了，本地仓库在想做同步远程仓库到本地为之后本地仓库推送到远程仓库做准备时报错了，错误如下：\n\n`fatal: refusing to merge unrelated histories`\n（拒绝合并不相关的历史）\n\n## 解决\n\n出现这个问题的最主要原因还是在于本地仓库和远程仓库实际上是独立的两个仓库。假如我之前是直接clone的方式在本地建立起远程github仓库的克隆本地仓库就不会有这问题了。\n\n查阅了一下资料，发现可以在pull命令后紧接着使用`--allow-unrelated-history`选项来解决问题（该选项可以合并两个独立启动仓库的历史）。\n\n命令：\n```git\n$git pull origin master –allow-unrelated-histories\n```\n以上是将远程仓库的文件拉取到本地仓库了。\n紧接着将本地仓库的提交推送到远程github仓库上，使用的命令是：\n\n```git\n$ git push <远程主机名> <本地分支名>:<远程分支名>\n也就是\n$git push origin master:master\n提交成功。\n```\n![GitPushRemote](https://www.tielemao.com/wp-content/uploads/2018/06/GitPushRemote.jpg)\n\n## pull\n\n`git pull` 命令基本上就是 `git fetch` 和 `git merge` 命令的组合体，Git 从指定的远程仓库中抓取内容，然后马上尝试将其合并进你所在的分支中。\n\n从远程仓库中获得数据，可以执行：\n\n```console\n$ git fetch [remote-name]\n```\n这个命令会访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。\n\n但是注意的是 `git fetch` 并不会自动合并或修改你当前的工作。 当准备好时你必须手动将其合并入你的工作。\n\n如果你使用 `clone` 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。 所以，`git fetch origin` 会抓取克隆（或上一次抓取）后新推送的所有工作。\n\n由于fetch命令后还要再做一步merge命令的操作，所以使用 `git pull` 命令来自动的抓取然后合并远程分支到当前分支。 （相当于一次执行fetch加merge命令）这可能会是一个更简单或更舒服的工作流程。\n\n【end】\n2018-06-06\n铁乐与猫",[[1531834856104,["Administrator@Tielemao",[[-1,48,"[[toc]]"]],[55,55],[48,48]]],[1531834858373,["Administrator@Tielemao",[[1,48,"@toc"]],[48,48],[52,52]]]],null,"Administrator@Tielemao"]]}